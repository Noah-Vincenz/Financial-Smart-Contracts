{
  "{\"sourceRoot\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"filename\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _index = require(\"../src/js/index.mjs\");\n\nvar _chai = require(\"chai\");\n\n/* test/index.js */\ndescribe('testing index.mjs...', function () {\n  describe('nonExistingTerm()', function () {\n    context('with non-empty string argument', function () {\n      it('1', function () {\n        var res = (0, _index.nonExistingTerm)(\"andr\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n      it('2', function () {\n        var res = (0, _index.nonExistingTerm)(\"and\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('3', function () {\n        var res = (0, _index.nonExistingTerm)(\"and \");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n      it('4', function () {\n        var res = (0, _index.nonExistingTerm)(\" and \");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n    });\n  });\n  describe('replaceUserDefinitions()', function () {\n    var map = new Map();\n    map.set(\"andGive\", \"andGive=and give\");\n    map.set(\"zcb\", \"zcb t x=scaleK x ( get ( truncate t ( one ) ) )\");\n    context('with non-empty string argument', function () {\n      it('1', function () {\n        var res = (0, _index.replaceUserDefinitions)(\"zero andGive one\", map);\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"zero and give one\");\n      });\n      it('2', function () {\n        var res = (0, _index.replaceUserDefinitions)(\"zero andGive ( one or one )\", map);\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"zero and give ( one or one )\");\n      });\n      it('3', function () {\n        var res = (0, _index.replaceUserDefinitions)(\"zero andGiv one\", map);\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"zero andGiv one\");\n      });\n      it('4', function () {\n        var res = (0, _index.replaceUserDefinitions)(\"andGive one\", map);\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"and give one\");\n      });\n      it('5', function () {\n        var res = (0, _index.replaceUserDefinitions)(\"zcb \\\"24/12/2017-23:33:33\\\" 5\", map);\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"scaleK 5 ( get ( truncate \\\"24/12/2017-23:33:33\\\" ( one ) ) )\");\n      });\n      it('6', function () {\n        var res = (0, _index.replaceUserDefinitions)(\"zcb \\\"24/12/2017-23:33:33\\\" 5 andGive ( zero and one )\", map);\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"scaleK 5 ( get ( truncate \\\"24/12/2017-23:33:33\\\" ( one ) ) ) and give ( zero and one )\");\n      });\n    });\n    context('with empty string argument', function () {\n      it('should return the empty string', function () {\n        var res = (0, _index.replaceUserDefinitions)(\"\", map);\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"\");\n      });\n    });\n  });\n  describe('evaluateConditionals()', function () {\n    context('with non-empty string argument', function () {\n      it('1', function () {\n        var res = (0, _index.evaluateConditionals)(\"if ( ( zero [<] one ) && ( ( one [>] one ) || ( zero [==] zero ) ) ) { one } else { zero } and one\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one and one\");\n      });\n      it('2', function () {\n        var res = (0, _index.evaluateConditionals)(\"if ( ( zero [<] one ) && ( one [==] one ) ) { one } else { zero } and one\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one and one\");\n      });\n      it('3', function () {\n        var res = (0, _index.evaluateConditionals)(\"if ( ( zero [<] one ) && ( one [==] one ) ) { one } else { zero }\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one\");\n      });\n      it('4', function () {\n        var res = (0, _index.evaluateConditionals)(\"zero and ( if ( zero [<] if ( if ( if ( one [>] one ) { zero } else { one } [==] one ) { one } [==] one ) { one } ) { one } or if ( zero [==] zero ) { one } else { zero } )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"zero and ( one or one )\");\n      });\n      it('5', function () {\n        var res = (0, _index.evaluateConditionals)(\"zero and ( if ( zero [<] if ( if ( one [==] one ) { one } [==] one ) { one } ) { one } or if ( zero [==] zero ) { one } else { zero } )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"zero and ( one or one )\");\n      });\n      it('6', function () {\n        var res = (0, _index.evaluateConditionals)(\"zero and ( if ( zero [<] if ( one [==] one ) { one } ) { one } or if ( zero [==] zero ) { one } else { zero } )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"zero and ( one or one )\");\n      });\n      it('7', function () {\n        var res = (0, _index.evaluateConditionals)(\"zero and ( if ( if ( one [==] one ) { zero } [<] one ) { one } or if ( zero [==] zero ) { one } else { zero } )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"zero and ( one or one )\");\n      });\n      it('8', function () {\n        var res = (0, _index.evaluateConditionals)(\"zero and ( if ( zero [<] one ) { one } or if ( zero [==] zero ) { one } else { zero } )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"zero and ( one or one )\");\n      });\n      it('9', function () {\n        var res = (0, _index.evaluateConditionals)(\"if ( ( ( if ( zero [>] one ) { zero } else { one } ) [<] truncate \\\"24/03/2019-23:33:33\\\" ( one ) ) || ( zero [<=] one ) ) { zero } else { give ( one ) }\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"zero\");\n      });\n      it('10', function () {\n        var res = (0, _index.evaluateConditionals)(\"if ( ( if ( zero [>] one ) { zero } else { one } [<] truncate \\\"24/03/2019-23:33:33\\\" ( one ) ) || ( zero [<=] one ) ) { zero } else { give ( one ) }\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"zero\");\n      });\n      it('11', function () {\n        var res = (0, _index.evaluateConditionals)(\"if ( ( if ( zero [>] one ) { zero } else { one } [<] truncate \\\"24/03/2019-23:33:33\\\" ( one ) ) || ( zero [==] one ) ) { zero } else { give ( one ) }\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"give ( one )\");\n      });\n      it('12', function () {\n        var res = (0, _index.evaluateConditionals)(\"if ( if ( zero [>] one ) { truncate \\\"24/03/2019-23:33:33\\\" ( one ) } and truncate \\\"24/03/2019-23:33:33\\\" ( one ) [==] truncate \\\"25/03/2019-23:33:33\\\" ( one ) ) { one } else { zero }\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one\");\n      });\n      it('13', function () {\n        var res = (0, _index.evaluateConditionals)(\"if ( zero > one ) { truncate \\\"24/03/2019-23:33:33\\\" ( one ) } and ( zero or one )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"( zero or one )\");\n      });\n      it('14', function () {\n        var res = (0, _index.evaluateConditionals)(\"( zero or one ) and if ( zero > one ) { truncate \\\"24/03/2019-23:33:33\\\" ( one ) }\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"( zero or one )\");\n      });\n      it('15', function () {\n        var res = (0, _index.evaluateConditionals)(\"if ( zero [==] scaleK 10 ( truncate \\\"25/03/2019-23:33:33\\\" ( truncate \\\"25/03/2020-23:33:33\\\" ( one ) ) ) ) { one } else { zero }\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one\");\n      });\n      it('16', function () {\n        var res = (0, _index.evaluateConditionals)(\"if ( scaleK 10 one and zero [==] scaleK 10 ( truncate \\\"25/03/2019-23:33:33\\\" ( one ) ) ) { one } else { zero }\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"zero\");\n      });\n      it('17', function () {\n        var res = (0, _index.evaluateConditionals)(\"if ( scaleK 10 one and zero [==] scaleK 10 ( truncate \\\"25/03/2020-23:33:33\\\" ( one ) ) ) { one } else { zero }\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one\");\n      });\n      it('18', function () {\n        var res = (0, _index.evaluateConditionals)(\"if ( if ( zero [<] one ) { truncate \\\"26/03/2019-23:33:33\\\" ( one ) } and truncate \\\"24/03/2020-23:33:33\\\" ( one ) [>] truncate \\\"25/03/2019-23:33:33\\\" ( one ) ) { one } else { zero }\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one\");\n      });\n      it('19', function () {\n        var res = (0, _index.evaluateConditionals)(\"if ( if ( zero [>] one ) { truncate \\\"26/03/2019-23:33:33\\\" ( one ) } and truncate \\\"24/03/2019-23:33:33\\\" ( one ) [<] truncate \\\"25/03/2019-23:33:33\\\" ( one ) ) { one } else { zero }\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"zero\");\n      });\n      it('20', function () {\n        var res = (0, _index.evaluateConditionals)(\"if ( truncate \\\"26/03/2019-23:33:33\\\" ( one ) and truncate \\\"24/03/2020-23:33:33\\\" ( one ) [==] truncate \\\"25/03/2020-23:33:33\\\" ( one ) ) { one } else { zero }\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one\");\n      });\n      it('21', function () {\n        var res = (0, _index.evaluateConditionals)(\"if ( if ( zero {>} one ) { truncate \\\"26/03/2019-23:33:33\\\" ( one ) } and truncate \\\"24/03/2019-23:33:33\\\" ( one ) {<} truncate \\\"25/03/2019-23:33:33\\\" ( one ) ) { one } else { zero }\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one\");\n      });\n      it('22', function () {\n        var res = (0, _index.evaluateConditionals)(\"if ( ( zero {>} one ) || ( ( one [==] one ) && ( zero [<] one ) ) ) { one }\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one\");\n      });\n      it('23', function () {\n        var res = (0, _index.evaluateConditionals)(\"if ( if ( ( zero {>} one ) || ( ( one [==] one ) && ( zero [<] one ) ) ) { one } else { zero } [==] one ) { one }\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one\");\n      });\n      it('24', function () {\n        var res = (0, _index.evaluateConditionals)(\"if ( if ( ( zero {>} one ) || ( ( one [==] one ) && ( zero [==] one ) ) ) { one } else { zero } [>=] zero ) { zero }\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"zero\");\n      });\n      it('26', function () {\n        var res = (0, _index.evaluateConditionals)(\"if ( if ( ( zero {>} one ) || ( ( one [==] one ) && ( zero [==] one ) ) ) { one } else { zero } [==] zero ) { one }\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one\");\n      });\n      it('27', function () {\n        var res = (0, _index.evaluateConditionals)(\"if ( if ( ( ( one [==] one ) && ( zero [==] one ) ) || ( ( one [==] one ) && ( zero [<] one ) ) ) { one } else { zero } [>] one ) { zero } else { one }\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one\");\n      });\n      it('28', function () {\n        var res = (0, _index.evaluateConditionals)(\"if ( if ( ( ( one [==] one ) && ( zero [<] one ) ) || ( ( one [==] one ) && ( zero [<] one ) ) ) { one } else { zero } [>] one ) { zero } else { one }\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one\");\n      });\n    });\n  });\n  describe('evaluate()', function () {\n    context('with non-empty string argument', function () {\n      it('1', function () {\n        var res = (0, _index.evaluate)(\"zero\", \"<\", \"one\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n      it('2', function () {\n        var res = (0, _index.evaluate)(\"zero\", \"==\", \"one\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('3', function () {\n        var res = (0, _index.evaluate)(\"zero\", \">\", \"one\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('4', function () {\n        var res = (0, _index.evaluate)(\"zero\", \"[>]\", \"one\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('5', function () {\n        var res = (0, _index.evaluate)(\"zero\", \"[<]\", \"one\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n      it('6', function () {\n        var res = (0, _index.evaluate)(\"zero\", \"[==]\", \"one\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('7', function () {\n        var res = (0, _index.evaluate)(\"zero\", \"{==}\", \"one\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n      it('8', function () {\n        var res = (0, _index.evaluate)(\"zero\", \"{<}\", \"one\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('9', function () {\n        var res = (0, _index.evaluate)(\"zero\", \"{>}\", \"one\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('10', function () {\n        var res = (0, _index.evaluate)(\"scaleK 10 ( one )\", \"{>}\", \"one\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('11', function () {\n        var res = (0, _index.evaluate)(\"scaleK 10 ( one )\", \"[>]\", \"one\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n      it('12', function () {\n        var res = (0, _index.evaluate)(\"scaleK 10 ( one )\", \">\", \"one\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n      it('13', function () {\n        var res = (0, _index.evaluate)(\"scaleK 0 ( one )\", \"[>]\", \"one\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('14', function () {\n        var res = (0, _index.evaluate)(\"scaleK 0 ( one )\", \"[==]\", \"zero\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n      it('15', function () {\n        var res = (0, _index.evaluate)(\"scaleK 0 ( one )\", \"{==}\", \"zero\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n      it('16', function () {\n        var res = (0, _index.evaluate)(\"scaleK 0 ( scaleK 10 ( one ) )\", \"[>]\", \"zero\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('17', function () {\n        var res = (0, _index.evaluate)(\"scaleK 0 ( scaleK 10 ( one ) )\", \"[==]\", \"zero\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n      it('18', function () {\n        var res = (0, _index.evaluate)(\"scaleK 10 ( scaleK 0 ( one ) )\", \"[==]\", \"zero\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n      it('19', function () {\n        var res = (0, _index.evaluate)(\"truncate \\\"20/10/2020-20:20:20\\\" ( one )\", \"{<}\", \"zero\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n      it('20', function () {\n        var res = (0, _index.evaluate)(\"truncate \\\"20/10/2020-20:20:20\\\" ( one )\", \"{==}\", \"truncate \\\"20/10/2020-20:20:20\\\" ( zero )\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n      it('21', function () {\n        var res = (0, _index.evaluate)(\"truncate \\\"21/10/2020-20:20:20\\\" ( one )\", \"{>}\", \"truncate \\\"20/10/2020-20:20:20\\\" ( zero )\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n      it('22', function () {\n        var res = (0, _index.evaluate)(\"( truncate \\\"20/12/2017-23:33:33\\\" ( one ) and truncate \\\"24/12/2017-23:33:33\\\" ( one ) )\", \">\", \"truncate \\\"24/12/2017-23:33:33\\\" ( one )\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('23', function () {\n        var res = (0, _index.evaluate)(\"( truncate \\\"23/12/2017-23:33:33\\\" ( one ) and truncate \\\"26/12/2017-23:33:33\\\" ( one ) )\", \">\", \"truncate \\\"24/12/2017-23:33:33\\\" ( one )\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n      it('24', function () {\n        var res = (0, _index.evaluate)(\"( truncate \\\"24/12/2017-23:33:33\\\" ( one ) and truncate \\\"26/12/2017-23:33:33\\\" ( one ) )\", \">\", \"truncate \\\"24/12/2017-23:33:33\\\" ( one )\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n      it('25', function () {\n        var res = (0, _index.evaluate)(\"( truncate \\\"20/12/2017-23:33:33\\\" ( one ) and truncate \\\"24/12/2017-23:33:33\\\" ( zero ) )\", \"==\", \"truncate \\\"24/12/2017-23:33:33\\\" ( one )\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('26', function () {\n        var res = (0, _index.evaluate)(\"( truncate \\\"20/12/2017-23:33:33\\\" ( zero ) and truncate \\\"24/12/2017-23:33:33\\\" ( one ) )\", \"==\", \"truncate \\\"24/12/2017-23:33:33\\\" ( one )\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n    });\n  });\n  describe('getHorizon()', function () {\n    context('with non-empty contract strings as arguments', function () {\n      it('1', function () {\n        var res = (0, _index.getHorizon)(\"truncate \\\"24/01/2019-23:33:33\\\" ( one )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"24/01/2019-23:33:33\");\n      });\n      it('2', function () {\n        var res = (0, _index.getHorizon)(\"truncate \\\"24/01/2019-23:33:33\\\" ( truncate \\\"25/01/2019-23:33:33\\\" ( one ) )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"24/01/2019-23:33:33\");\n      });\n      it('3', function () {\n        var res = (0, _index.getHorizon)(\"truncate \\\"24/01/2019-23:33:33\\\" ( truncate \\\"23/01/2019-23:33:33\\\" ( one ) )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"23/01/2019-23:33:33\");\n      });\n      it('4', function () {\n        var res = (0, _index.getHorizon)(\"truncate \\\"17/08/2019-20:33:33\\\" ( one and truncate \\\"18/08/2019-20:33:33\\\" ( one ) )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"17/08/2019-20:33:33\");\n      });\n      it('5', function () {\n        var res = (0, _index.getHorizon)(\"truncate \\\"17/08/2019-20:33:33\\\" ( one and truncate \\\"16/08/2019-20:33:33\\\" ( one ) )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"17/08/2019-20:33:33\");\n      });\n      it('6', function () {\n        var res = (0, _index.getHorizon)(\"truncate \\\"17/08/2019-20:33:33\\\" ( one ) or truncate \\\"16/08/2019-20:33:33\\\" ( one )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"17/08/2019-20:33:33\");\n      });\n      it('7', function () {\n        var res = (0, _index.getHorizon)(\"truncate \\\"17/08/2019-20:33:33\\\" ( one ) or one\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"infinite\");\n      });\n      it('8', function () {\n        var res = (0, _index.getHorizon)(\"one or truncate \\\"17/08/2019-20:33:33\\\" ( one )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"infinite\");\n      });\n      it('9', function () {\n        var res = (0, _index.getHorizon)(\"\\\"17/08/2019-20:33:33\\\" ( one ) or ( truncate \\\"17/08/2019-20:33:33\\\" ( one ) or one )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"infinite\");\n      });\n      it('10', function () {\n        var res = (0, _index.getHorizon)(\"truncate \\\"17/08/2019-20:33:33\\\" ( one or zero )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"17/08/2019-20:33:33\");\n      });\n      it('11', function () {\n        var res = (0, _index.getHorizon)(\"truncate \\\"17/08/2019-20:33:33\\\" ( one or zero ) and zero\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"infinite\");\n      });\n    });\n    context('with empty contract string as argument', function () {\n      it('1', function () {\n        var res = (0, _index.getHorizon)(\"\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"infinite\");\n      });\n    });\n  });\n  describe('getValue()', function () {\n    context('with non-empty contract string and empty horizonToCheck as argument', function () {\n      it('1', function () {\n        var res = (0, _index.getValue)(\"one\", \"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(1);\n      });\n      it('2', function () {\n        var res = (0, _index.getValue)(\"zero\", \"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(0);\n      });\n      it('3', function () {\n        var res = (0, _index.getValue)(\"one and zero\", \"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(1);\n      });\n      it('4', function () {\n        var res = (0, _index.getValue)(\"one and one\", \"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(2);\n      });\n      it('5', function () {\n        var res = (0, _index.getValue)(\"one or zero\", \"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(1);\n      });\n      it('6', function () {\n        var res = (0, _index.getValue)(\"one or one\", \"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(1);\n      });\n      it('7', function () {\n        var res = (0, _index.getValue)(\"scaleK 10 ( one )\", \"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(10);\n      });\n      it('8', function () {\n        var res = (0, _index.getValue)(\"scaleK 10 ( zero )\", \"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(0);\n      });\n      it('9', function () {\n        var res = (0, _index.getValue)(\"scaleK 10 ( one and one )\", \"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(20);\n      });\n      it('10', function () {\n        var res = (0, _index.getValue)(\"scaleK 10 ( one and zero )\", \"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(10);\n      });\n      it('11', function () {\n        var res = (0, _index.getValue)(\"scaleK 10 ( one and scaleK 10 ( one ) )\", \"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(110);\n      });\n      it('12', function () {\n        var res = (0, _index.getValue)(\"scaleK 10 ( one or scaleK 10 ( one ) )\", \"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(100);\n      });\n      it('13', function () {\n        var res = (0, _index.getValue)(\"scaleK 10 ( one ) or one\", \"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(10);\n      });\n      it('14', function () {\n        var res = (0, _index.getValue)(\"get ( truncate \\\"17/08/2019-20:33:33\\\" ( one ) )\", \"17/08/2019-20:33:33\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(1);\n      });\n      it('15', function () {\n        var res = (0, _index.getValue)(\"get ( truncate \\\"16/08/2019-23:33:33\\\" ( one ) )\", \"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(0);\n      });\n      it('16', function () {\n        var res = (0, _index.getValue)(\"get ( truncate \\\"18/08/2019-23:33:33\\\" ( one ) )\", \"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(0);\n      });\n      it('17', function () {\n        var res = (0, _index.getValue)(\"scaleK 10 ( one and one )\", \"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(20);\n      });\n      it('18', function () {\n        var res = (0, _index.getValue)(\"scaleK 10 ( one and give ( one ) )\", \"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(0);\n      });\n      it('19', function () {\n        var res = (0, _index.getValue)(\"give ( scaleK 10 ( one and give ( one ) ) )\", \"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(0);\n      });\n      it('20', function () {\n        var res = (0, _index.getValue)(\"give ( scaleK 10 ( one and one ) )\", \"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(-20);\n      });\n      it('21', function () {\n        var res = (0, _index.getValue)(\"( one or zero ) and ( scaleK 10 ( one ) and zero )\", \"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(11);\n      });\n      it('22', function () {\n        var res = (0, _index.getValue)(\"one or ( zero and ( scaleK 10 ( one ) and zero ) )\", \"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(10);\n      });\n      it('23', function () {\n        var res = (0, _index.getValue)(\"( one or ( zero and scaleK 10 ( one ) ) ) and zero\", \"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(10);\n      });\n      it('24', function () {\n        var res = (0, _index.getValue)(\"( one or ( one and scaleK 10 ( one ) ) ) and one\", \"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(12);\n      });\n      it('25', function () {\n        var res = (0, _index.getValue)(\"( one and ( scaleK 10 ( one ) and one ) )\", \"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(12);\n      });\n      it('26', function () {\n        var res = (0, _index.getValue)(\"( one or ( one and scaleK 10 ( one ) ) ) and truncate \\\"24/12/2017-23:33:33\\\" ( one )\", \"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(11);\n      });\n    });\n    context('with non-empty contract string and non-empty horizonToCheck as argument', function () {\n      it('1', function () {\n        var res = (0, _index.getValue)(\"scaleK 100 ( get ( truncate \\\"18/08/2019-23:33:33\\\" ( one ) ) )\", \"18/08/2019-23:33:33\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(100);\n      });\n      it('2', function () {\n        var res = (0, _index.getValue)(\"scaleK 100 ( get ( truncate \\\"18/08/2019-23:33:33\\\" ( one ) ) )\", \"19/08/2019-23:33:33\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(0);\n      });\n      it('3', function () {\n        var res = (0, _index.getValue)(\"get ( truncate \\\"18/08/2019-23:33:33\\\" ( one ) )\", \"19/08/2019-23:33:33\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(0);\n      });\n      it('4', function () {\n        var res = (0, _index.getValue)(\"get ( truncate \\\"18/08/2019-23:33:33\\\" ( one ) )\", \"18/08/2019-23:33:33\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(1);\n      });\n    });\n  });\n  describe('decomposeAnds()', function () {\n    context('with non-empty contract string as argument', function () {\n      it('1', function () {\n        var res = (0, _index.decomposeAnds)(\"one and zero\");\n\n        _chai.assert.isArray(res);\n\n        _chai.assert.lengthOf(res, 2);\n\n        _chai.assert.include(res, \"one\");\n\n        _chai.assert.include(res, \"zero\");\n      });\n      it('2', function () {\n        var res = (0, _index.decomposeAnds)(\"one and ( zero and one )\");\n\n        _chai.assert.isArray(res);\n\n        _chai.assert.lengthOf(res, 3);\n\n        _chai.assert.include(res, \"one\");\n\n        _chai.assert.include(res, \"zero\");\n\n        _chai.assert.sameMembers(res, [\"one\", \"zero\", \"one\"]);\n      });\n      it('3', function () {\n        var res = (0, _index.decomposeAnds)(\"one and scaleK 10 ( zero and one )\");\n\n        _chai.assert.isArray(res);\n\n        _chai.assert.lengthOf(res, 3);\n\n        _chai.assert.include(res, \"one\");\n\n        _chai.assert.notInclude(res, \"zero\");\n\n        _chai.assert.sameMembers(res, [\"one\", \"scaleK 10 ( zero )\", \"scaleK 10 ( one )\"]);\n      });\n      it('4', function () {\n        var res = (0, _index.decomposeAnds)(\"one and scaleK 10 ( zero and give ( scaleK 5 ( one ) and zero ) )\");\n\n        _chai.assert.isArray(res);\n\n        _chai.assert.lengthOf(res, 4);\n\n        _chai.assert.include(res, \"one\");\n\n        _chai.assert.notInclude(res, \"zero\");\n\n        _chai.assert.sameMembers(res, [\"one\", \"scaleK 10 ( zero )\", \"scaleK 10 ( give ( scaleK 5 ( one ) ) )\", \"scaleK 10 ( give ( zero ) )\"]);\n      });\n    });\n    context('with empty contract string as argument', function () {\n      it('1', function () {\n        var res = (0, _index.decomposeAnds)(\"\");\n\n        _chai.assert.isArray(res);\n\n        _chai.assert.isEmpty(res);\n      });\n    });\n  });\n  describe('cleanUpBeforeDecomp()', function () {\n    context('with non-empty contract string as argument', function () {\n      it('1', function () {\n        var res = (0, _index.cleanUpBeforeDecomp)(\"\\\"12/12/2019 15:15:22\\\"  one\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"\\\"12/12/2019-15:15:22\\\" one\");\n      });\n      it('2', function () {\n        var res = (0, _index.cleanUpBeforeDecomp)(\"one  and   zero\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one and zero\");\n      });\n      it('3', function () {\n        var res = (0, _index.cleanUpBeforeDecomp)(\"  \\\"12/12/2019 15:15:22\\\" zero   \");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"\\\"12/12/2019-15:15:22\\\" zero\");\n      });\n      it('4', function () {\n        var res = (0, _index.cleanUpBeforeDecomp)(\"one and   \\\"12/12/2019 15:15:22\\\"\\n\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one and \\\"12/12/2019-15:15:22\\\"\");\n      });\n      it('5', function () {\n        var res = (0, _index.cleanUpBeforeDecomp)(\"(one and zero)()\\\"12/12/2019 15:15:22\\\"  \");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"( one and zero ) ( ) \\\"12/12/2019-15:15:22\\\"\");\n      });\n    });\n  });\n  describe('extractAllSubHorizons()', function () {\n    context('with non-empty contract strings as arguments', function () {\n      it('1', function () {\n        var res = (0, _index.extractAllSubHorizons)(\"truncate \\\"24/01/2019-23:33:33\\\" ( one )\", \"one\", \">=\");\n\n        _chai.assert.typeOf(res, 'set');\n\n        _chai.assert.include(res, \"24/01/2019-23:33:33\");\n      });\n      it('2', function () {\n        var res = (0, _index.extractAllSubHorizons)(\"truncate \\\"24/01/2019-23:33:33\\\" ( one ) and truncate \\\"25/01/2019-23:33:33\\\" ( one )\", \"one\", \">=\");\n\n        _chai.assert.typeOf(res, 'set');\n\n        _chai.assert.include(res, \"24/01/2019-23:33:33\");\n\n        _chai.assert.include(res, \"25/01/2019-23:33:33\");\n      });\n      it('3', function () {\n        var res = (0, _index.extractAllSubHorizons)(\"truncate \\\"24/01/2019-23:33:33\\\" ( one ) and truncate \\\"26/01/2019-23:33:33\\\" ( one )\", \"truncate \\\"27/01/2019-23:33:33\\\" ( one )\", \">=\");\n\n        _chai.assert.typeOf(res, 'set');\n\n        _chai.assert.include(res, \"24/01/2019-23:33:33\");\n\n        _chai.assert.include(res, \"26/01/2019-23:33:33\");\n\n        _chai.assert.include(res, \"27/01/2019-23:33:33\");\n      });\n      it('4', function () {\n        var res = (0, _index.extractAllSubHorizons)(\"truncate \\\"24/01/2019-23:33:33\\\" ( one ) and truncate \\\"26/01/2019-23:33:33\\\" ( one )\", \"truncate \\\"25/01/2019-23:33:33\\\" ( one )\", \">=\");\n\n        _chai.assert.typeOf(res, 'set');\n\n        _chai.assert.include(res, \"24/01/2019-23:33:33\");\n\n        _chai.assert.include(res, \"25/01/2019-23:33:33\");\n\n        _chai.assert.notInclude(res, \"26/01/2019-23:33:33\");\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "describe",
        "context",
        "it",
        "res",
        "assert",
        "isBoolean",
        "to",
        "equal",
        "map",
        "Map",
        "set",
        "isString",
        "isNumber",
        "isArray",
        "lengthOf",
        "include",
        "sameMembers",
        "notInclude",
        "isEmpty",
        "typeOf"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test",
      "sourcesContent": [
        "/* test/index.js */\nimport {\n    nonExistingTerm,\n    replaceUserDefinitions,\n    evaluateConditionals,\n    evaluate,\n    getHorizon,\n    getValue,\n    decomposeAnds,\n    cleanUpBeforeDecomp,\n    extractAllSubHorizons\n} from \"../src/js/index.mjs\";\n\nimport {\n    expect,\n    assert\n} from \"chai\";\n\ndescribe('testing index.mjs...', function() {\n\n    describe('nonExistingTerm()', function() {\n        context('with non-empty string argument', function() {\n            it('1', function() {\n                var res = nonExistingTerm(\"andr\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n            it('2', function() {\n                var res = nonExistingTerm(\"and\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n            it('3', function() {\n                var res = nonExistingTerm(\"and \");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n            it('4', function() {\n                var res = nonExistingTerm(\" and \");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n        })\n    })\n\n    describe('replaceUserDefinitions()', function() {\n        var map = new Map;\n        map.set(\"andGive\", \"andGive=and give\");\n        map.set(\"zcb\", \"zcb t x=scaleK x ( get ( truncate t ( one ) ) )\");\n\n        context('with non-empty string argument', function() {\n\n            it('1', function() {\n                var res = replaceUserDefinitions(\"zero andGive one\", map);\n                assert.isString(res);\n                expect(res).to.equal(\"zero and give one\")\n            })\n            it('2', function() {\n                var res = replaceUserDefinitions(\"zero andGive ( one or one )\", map);\n                assert.isString(res);\n                expect(res).to.equal(\"zero and give ( one or one )\")\n            })\n            it('3', function() {\n                var res = replaceUserDefinitions(\"zero andGiv one\", map);\n                assert.isString(res);\n                expect(res).to.equal(\"zero andGiv one\")\n            })\n            it('4', function() {\n                var res = replaceUserDefinitions(\"andGive one\", map);\n                assert.isString(res);\n                expect(res).to.equal(\"and give one\")\n            })\n            it('5', function() {\n                var res = replaceUserDefinitions(\"zcb \\\"24/12/2017-23:33:33\\\" 5\", map);\n                assert.isString(res);\n                expect(res).to.equal(\"scaleK 5 ( get ( truncate \\\"24/12/2017-23:33:33\\\" ( one ) ) )\")\n            })\n            it('6', function() {\n                var res = replaceUserDefinitions(\"zcb \\\"24/12/2017-23:33:33\\\" 5 andGive ( zero and one )\", map);\n                assert.isString(res);\n                expect(res).to.equal(\"scaleK 5 ( get ( truncate \\\"24/12/2017-23:33:33\\\" ( one ) ) ) and give ( zero and one )\")\n            })\n        })\n\n        context('with empty string argument', function() {\n            it('should return the empty string', function() {\n                var res = replaceUserDefinitions(\"\", map);\n                assert.isString(res);\n                expect(res).to.equal(\"\")\n            })\n        })\n    })\n\n    describe('evaluateConditionals()', function() {\n\n        context('with non-empty string argument', function() {\n            it('1', function() {\n                var res = evaluateConditionals(\"if ( ( zero [<] one ) && ( ( one [>] one ) || ( zero [==] zero ) ) ) { one } else { zero } and one\");\n                assert.isString(res);\n                expect(res).to.equal(\"one and one\")\n            })\n            it('2', function() {\n                var res = evaluateConditionals(\"if ( ( zero [<] one ) && ( one [==] one ) ) { one } else { zero } and one\");\n                assert.isString(res);\n                expect(res).to.equal(\"one and one\")\n            })\n            it('3', function() {\n                var res = evaluateConditionals(\"if ( ( zero [<] one ) && ( one [==] one ) ) { one } else { zero }\");\n                assert.isString(res);\n                expect(res).to.equal(\"one\")\n            })\n            it('4', function() {\n                var res = evaluateConditionals(\"zero and ( if ( zero [<] if ( if ( if ( one [>] one ) { zero } else { one } [==] one ) { one } [==] one ) { one } ) { one } or if ( zero [==] zero ) { one } else { zero } )\");\n                assert.isString(res);\n                expect(res).to.equal(\"zero and ( one or one )\")\n            })\n            it('5', function() {\n                var res = evaluateConditionals(\"zero and ( if ( zero [<] if ( if ( one [==] one ) { one } [==] one ) { one } ) { one } or if ( zero [==] zero ) { one } else { zero } )\");\n                assert.isString(res);\n                expect(res).to.equal(\"zero and ( one or one )\")\n            })\n            it('6', function() {\n                var res = evaluateConditionals(\"zero and ( if ( zero [<] if ( one [==] one ) { one } ) { one } or if ( zero [==] zero ) { one } else { zero } )\");\n                assert.isString(res);\n                expect(res).to.equal(\"zero and ( one or one )\")\n            })\n            it('7', function() {\n                var res = evaluateConditionals(\"zero and ( if ( if ( one [==] one ) { zero } [<] one ) { one } or if ( zero [==] zero ) { one } else { zero } )\");\n                assert.isString(res);\n                expect(res).to.equal(\"zero and ( one or one )\")\n            })\n            it('8', function() {\n                var res = evaluateConditionals(\"zero and ( if ( zero [<] one ) { one } or if ( zero [==] zero ) { one } else { zero } )\");\n                assert.isString(res);\n                expect(res).to.equal(\"zero and ( one or one )\")\n            })\n            it('9', function() {\n                var res = evaluateConditionals(\"if ( ( ( if ( zero [>] one ) { zero } else { one } ) [<] truncate \\\"24/03/2019-23:33:33\\\" ( one ) ) || ( zero [<=] one ) ) { zero } else { give ( one ) }\");\n                assert.isString(res);\n                expect(res).to.equal(\"zero\")\n            })\n            it('10', function() {\n                var res = evaluateConditionals(\"if ( ( if ( zero [>] one ) { zero } else { one } [<] truncate \\\"24/03/2019-23:33:33\\\" ( one ) ) || ( zero [<=] one ) ) { zero } else { give ( one ) }\");\n                assert.isString(res);\n                expect(res).to.equal(\"zero\")\n            })\n            it('11', function() {\n                var res = evaluateConditionals(\"if ( ( if ( zero [>] one ) { zero } else { one } [<] truncate \\\"24/03/2019-23:33:33\\\" ( one ) ) || ( zero [==] one ) ) { zero } else { give ( one ) }\");\n                assert.isString(res);\n                expect(res).to.equal(\"give ( one )\")\n            })\n            it('12', function() {\n                var res = evaluateConditionals(\"if ( if ( zero [>] one ) { truncate \\\"24/03/2019-23:33:33\\\" ( one ) } and truncate \\\"24/03/2019-23:33:33\\\" ( one ) [==] truncate \\\"25/03/2019-23:33:33\\\" ( one ) ) { one } else { zero }\");\n                assert.isString(res);\n                expect(res).to.equal(\"one\")\n            })\n            it('13', function() {\n                var res = evaluateConditionals(\"if ( zero > one ) { truncate \\\"24/03/2019-23:33:33\\\" ( one ) } and ( zero or one )\");\n                assert.isString(res);\n                expect(res).to.equal(\"( zero or one )\")\n            })\n            it('14', function() {\n                var res = evaluateConditionals(\"( zero or one ) and if ( zero > one ) { truncate \\\"24/03/2019-23:33:33\\\" ( one ) }\");\n                assert.isString(res);\n                expect(res).to.equal(\"( zero or one )\")\n            })\n            it('15', function() {\n                var res = evaluateConditionals(\"if ( zero [==] scaleK 10 ( truncate \\\"25/03/2019-23:33:33\\\" ( truncate \\\"25/03/2020-23:33:33\\\" ( one ) ) ) ) { one } else { zero }\");\n                assert.isString(res);\n                expect(res).to.equal(\"one\")\n            })\n            it('16', function() {\n                var res = evaluateConditionals(\"if ( scaleK 10 one and zero [==] scaleK 10 ( truncate \\\"25/03/2019-23:33:33\\\" ( one ) ) ) { one } else { zero }\");\n                assert.isString(res);\n                expect(res).to.equal(\"zero\")\n            })\n            it('17', function() {\n                var res = evaluateConditionals(\"if ( scaleK 10 one and zero [==] scaleK 10 ( truncate \\\"25/03/2020-23:33:33\\\" ( one ) ) ) { one } else { zero }\");\n                assert.isString(res);\n                expect(res).to.equal(\"one\")\n            })\n            it('18', function() {\n                var res = evaluateConditionals(\"if ( if ( zero [<] one ) { truncate \\\"26/03/2019-23:33:33\\\" ( one ) } and truncate \\\"24/03/2020-23:33:33\\\" ( one ) [>] truncate \\\"25/03/2019-23:33:33\\\" ( one ) ) { one } else { zero }\");\n                assert.isString(res);\n                expect(res).to.equal(\"one\")\n            })\n            it('19', function() {\n                var res = evaluateConditionals(\"if ( if ( zero [>] one ) { truncate \\\"26/03/2019-23:33:33\\\" ( one ) } and truncate \\\"24/03/2019-23:33:33\\\" ( one ) [<] truncate \\\"25/03/2019-23:33:33\\\" ( one ) ) { one } else { zero }\");\n                assert.isString(res);\n                expect(res).to.equal(\"zero\")\n            })\n            it('20', function() {\n                var res = evaluateConditionals(\"if ( truncate \\\"26/03/2019-23:33:33\\\" ( one ) and truncate \\\"24/03/2020-23:33:33\\\" ( one ) [==] truncate \\\"25/03/2020-23:33:33\\\" ( one ) ) { one } else { zero }\");\n                assert.isString(res);\n                expect(res).to.equal(\"one\")\n            })\n            it('21', function() {\n                var res = evaluateConditionals(\"if ( if ( zero {>} one ) { truncate \\\"26/03/2019-23:33:33\\\" ( one ) } and truncate \\\"24/03/2019-23:33:33\\\" ( one ) {<} truncate \\\"25/03/2019-23:33:33\\\" ( one ) ) { one } else { zero }\");\n                assert.isString(res);\n                expect(res).to.equal(\"one\")\n            })\n            it('22', function() {\n                var res = evaluateConditionals(\"if ( ( zero {>} one ) || ( ( one [==] one ) && ( zero [<] one ) ) ) { one }\");\n                assert.isString(res);\n                expect(res).to.equal(\"one\")\n            })\n            it('23', function() {\n                var res = evaluateConditionals(\"if ( if ( ( zero {>} one ) || ( ( one [==] one ) && ( zero [<] one ) ) ) { one } else { zero } [==] one ) { one }\");\n                assert.isString(res);\n                expect(res).to.equal(\"one\")\n            })\n            it('24', function() {\n                var res = evaluateConditionals(\"if ( if ( ( zero {>} one ) || ( ( one [==] one ) && ( zero [==] one ) ) ) { one } else { zero } [>=] zero ) { zero }\");\n                assert.isString(res);\n                expect(res).to.equal(\"zero\")\n            })\n            it('26', function() {\n                var res = evaluateConditionals(\"if ( if ( ( zero {>} one ) || ( ( one [==] one ) && ( zero [==] one ) ) ) { one } else { zero } [==] zero ) { one }\");\n                assert.isString(res);\n                expect(res).to.equal(\"one\")\n            })\n            it('27', function() {\n              var res = evaluateConditionals(\"if ( if ( ( ( one [==] one ) && ( zero [==] one ) ) || ( ( one [==] one ) && ( zero [<] one ) ) ) { one } else { zero } [>] one ) { zero } else { one }\");\n                assert.isString(res);\n                expect(res).to.equal(\"one\")\n            })\n            it('28', function() {\n                var res = evaluateConditionals(\"if ( if ( ( ( one [==] one ) && ( zero [<] one ) ) || ( ( one [==] one ) && ( zero [<] one ) ) ) { one } else { zero } [>] one ) { zero } else { one }\");\n                assert.isString(res);\n                expect(res).to.equal(\"one\")\n            })\n        })\n    })\n\n    describe('evaluate()', function() {\n\n        context('with non-empty string argument', function() {\n\n            it('1', function() {\n                var res = evaluate(\"zero\", \"<\", \"one\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n            it('2', function() {\n                var res = evaluate(\"zero\", \"==\", \"one\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n            it('3', function() {\n                var res = evaluate(\"zero\", \">\", \"one\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n            it('4', function() {\n                var res = evaluate(\"zero\", \"[>]\", \"one\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n            it('5', function() {\n                var res = evaluate(\"zero\", \"[<]\", \"one\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n            it('6', function() {\n                var res = evaluate(\"zero\", \"[==]\", \"one\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n            it('7', function() {\n                var res = evaluate(\"zero\", \"{==}\", \"one\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n            it('8', function() {\n                var res = evaluate(\"zero\", \"{<}\", \"one\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n            it('9', function() {\n                var res = evaluate(\"zero\", \"{>}\", \"one\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n            it('10', function() {\n                var res = evaluate(\"scaleK 10 ( one )\", \"{>}\", \"one\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n            it('11', function() {\n                var res = evaluate(\"scaleK 10 ( one )\", \"[>]\", \"one\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n            it('12', function() {\n                var res = evaluate(\"scaleK 10 ( one )\", \">\", \"one\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n            it('13', function() {\n                var res = evaluate(\"scaleK 0 ( one )\", \"[>]\", \"one\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n            it('14', function() {\n                var res = evaluate(\"scaleK 0 ( one )\", \"[==]\", \"zero\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n            it('15', function() {\n                var res = evaluate(\"scaleK 0 ( one )\", \"{==}\", \"zero\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n            it('16', function() {\n                var res = evaluate(\"scaleK 0 ( scaleK 10 ( one ) )\", \"[>]\", \"zero\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n            it('17', function() {\n                var res = evaluate(\"scaleK 0 ( scaleK 10 ( one ) )\", \"[==]\", \"zero\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n            it('18', function() {\n                var res = evaluate(\"scaleK 10 ( scaleK 0 ( one ) )\", \"[==]\", \"zero\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n            it('19', function() {\n                var res = evaluate(\"truncate \\\"20/10/2020-20:20:20\\\" ( one )\", \"{<}\", \"zero\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n            it('20', function() {\n                var res = evaluate(\"truncate \\\"20/10/2020-20:20:20\\\" ( one )\", \"{==}\", \"truncate \\\"20/10/2020-20:20:20\\\" ( zero )\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n            it('21', function() {\n                var res = evaluate(\"truncate \\\"21/10/2020-20:20:20\\\" ( one )\", \"{>}\", \"truncate \\\"20/10/2020-20:20:20\\\" ( zero )\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n            it('22', function() {\n                var res = evaluate(\"( truncate \\\"20/12/2017-23:33:33\\\" ( one ) and truncate \\\"24/12/2017-23:33:33\\\" ( one ) )\", \">\", \"truncate \\\"24/12/2017-23:33:33\\\" ( one )\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false);\n            })\n            it('23', function() {\n                var res = evaluate(\"( truncate \\\"23/12/2017-23:33:33\\\" ( one ) and truncate \\\"26/12/2017-23:33:33\\\" ( one ) )\", \">\", \"truncate \\\"24/12/2017-23:33:33\\\" ( one )\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true);\n            })\n            it('24', function() {\n                var res = evaluate(\"( truncate \\\"24/12/2017-23:33:33\\\" ( one ) and truncate \\\"26/12/2017-23:33:33\\\" ( one ) )\", \">\", \"truncate \\\"24/12/2017-23:33:33\\\" ( one )\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true);\n            })\n            it('25', function() {\n                var res = evaluate(\"( truncate \\\"20/12/2017-23:33:33\\\" ( one ) and truncate \\\"24/12/2017-23:33:33\\\" ( zero ) )\", \"==\", \"truncate \\\"24/12/2017-23:33:33\\\" ( one )\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false);\n            })\n            it('26', function() {\n                var res = evaluate(\"( truncate \\\"20/12/2017-23:33:33\\\" ( zero ) and truncate \\\"24/12/2017-23:33:33\\\" ( one ) )\", \"==\", \"truncate \\\"24/12/2017-23:33:33\\\" ( one )\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true);\n            })\n        })\n    })\n\n    describe('getHorizon()', function() {\n\n        context('with non-empty contract strings as arguments', function() {\n\n            it('1', function() {\n                var res = getHorizon(\"truncate \\\"24/01/2019-23:33:33\\\" ( one )\");\n                assert.isString(res);\n                expect(res).to.equal(\"24/01/2019-23:33:33\")\n            })\n            it('2', function() {\n                var res = getHorizon(\"truncate \\\"24/01/2019-23:33:33\\\" ( truncate \\\"25/01/2019-23:33:33\\\" ( one ) )\");\n                assert.isString(res);\n                expect(res).to.equal(\"24/01/2019-23:33:33\")\n            })\n            it('3', function() {\n                var res = getHorizon(\"truncate \\\"24/01/2019-23:33:33\\\" ( truncate \\\"23/01/2019-23:33:33\\\" ( one ) )\");\n                assert.isString(res);\n                expect(res).to.equal(\"23/01/2019-23:33:33\")\n            })\n            it('4', function() {\n                var res = getHorizon(\"truncate \\\"17/08/2019-20:33:33\\\" ( one and truncate \\\"18/08/2019-20:33:33\\\" ( one ) )\");\n                assert.isString(res);\n                expect(res).to.equal(\"17/08/2019-20:33:33\")\n            })\n            it('5', function() {\n                var res = getHorizon(\"truncate \\\"17/08/2019-20:33:33\\\" ( one and truncate \\\"16/08/2019-20:33:33\\\" ( one ) )\");\n                assert.isString(res);\n                expect(res).to.equal(\"17/08/2019-20:33:33\")\n            })\n            it('6', function() {\n                var res = getHorizon(\"truncate \\\"17/08/2019-20:33:33\\\" ( one ) or truncate \\\"16/08/2019-20:33:33\\\" ( one )\");\n                assert.isString(res);\n                expect(res).to.equal(\"17/08/2019-20:33:33\")\n            })\n            it('7', function() {\n                var res = getHorizon(\"truncate \\\"17/08/2019-20:33:33\\\" ( one ) or one\");\n                assert.isString(res);\n                expect(res).to.equal(\"infinite\")\n            })\n            it('8', function() {\n                var res = getHorizon(\"one or truncate \\\"17/08/2019-20:33:33\\\" ( one )\");\n                assert.isString(res);\n                expect(res).to.equal(\"infinite\")\n            })\n            it('9', function() {\n                var res = getHorizon(\"\\\"17/08/2019-20:33:33\\\" ( one ) or ( truncate \\\"17/08/2019-20:33:33\\\" ( one ) or one )\");\n                assert.isString(res);\n                expect(res).to.equal(\"infinite\")\n            })\n            it('10', function() {\n                var res = getHorizon(\"truncate \\\"17/08/2019-20:33:33\\\" ( one or zero )\");\n                assert.isString(res);\n                expect(res).to.equal(\"17/08/2019-20:33:33\")\n            })\n            it('11', function() {\n                var res = getHorizon(\"truncate \\\"17/08/2019-20:33:33\\\" ( one or zero ) and zero\");\n                assert.isString(res);\n                expect(res).to.equal(\"infinite\")\n            })\n        })\n\n        context('with empty contract string as argument', function() {\n\n            it('1', function() {\n                var res = getHorizon(\"\");\n                assert.isString(res);\n                expect(res).to.equal(\"infinite\")\n            })\n        })\n    })\n\n    describe('getValue()', function() {\n\n        context('with non-empty contract string and empty horizonToCheck as argument', function() {\n\n            it('1', function() {\n                var res = getValue(\"one\", \"\");\n                assert.isNumber(res);\n                expect(res).to.equal(1)\n            })\n            it('2', function() {\n                var res = getValue(\"zero\", \"\");\n                assert.isNumber(res);\n                expect(res).to.equal(0)\n            })\n            it('3', function() {\n                var res = getValue(\"one and zero\", \"\");\n                assert.isNumber(res);\n                expect(res).to.equal(1)\n            })\n            it('4', function() {\n                var res = getValue(\"one and one\", \"\");\n                assert.isNumber(res);\n                expect(res).to.equal(2)\n            })\n            it('5', function() {\n                var res = getValue(\"one or zero\", \"\");\n                assert.isNumber(res);\n                expect(res).to.equal(1)\n            })\n            it('6', function() {\n                var res = getValue(\"one or one\", \"\");\n                assert.isNumber(res);\n                expect(res).to.equal(1)\n            })\n            it('7', function() {\n                var res = getValue(\"scaleK 10 ( one )\", \"\");\n                assert.isNumber(res);\n                expect(res).to.equal(10)\n            })\n            it('8', function() {\n                var res = getValue(\"scaleK 10 ( zero )\", \"\");\n                assert.isNumber(res);\n                expect(res).to.equal(0)\n            })\n            it('9', function() {\n                var res = getValue(\"scaleK 10 ( one and one )\", \"\");\n                assert.isNumber(res);\n                expect(res).to.equal(20)\n            })\n            it('10', function() {\n                var res = getValue(\"scaleK 10 ( one and zero )\", \"\");\n                assert.isNumber(res);\n                expect(res).to.equal(10)\n            })\n            it('11', function() {\n                var res = getValue(\"scaleK 10 ( one and scaleK 10 ( one ) )\", \"\");\n                assert.isNumber(res);\n                expect(res).to.equal(110)\n            })\n            it('12', function() {\n              var res = getValue(\"scaleK 10 ( one or scaleK 10 ( one ) )\", \"\");\n                assert.isNumber(res);\n                expect(res).to.equal(100)\n            })\n            it('13', function() {\n                var res = getValue(\"scaleK 10 ( one ) or one\", \"\");\n                assert.isNumber(res);\n                expect(res).to.equal(10)\n            })\n            it('14', function() {\n                var res = getValue(\"get ( truncate \\\"17/08/2019-20:33:33\\\" ( one ) )\", \"17/08/2019-20:33:33\");\n                assert.isNumber(res);\n                expect(res).to.equal(1)\n            })\n            it('15', function() {\n                var res = getValue(\"get ( truncate \\\"16/08/2019-23:33:33\\\" ( one ) )\", \"\");\n                assert.isNumber(res);\n                expect(res).to.equal(0)\n            })\n            it('16', function() {\n                var res = getValue(\"get ( truncate \\\"18/08/2019-23:33:33\\\" ( one ) )\", \"\");\n                assert.isNumber(res);\n                expect(res).to.equal(0)\n            })\n            it('17', function() {\n                var res = getValue(\"scaleK 10 ( one and one )\", \"\");\n                assert.isNumber(res);\n                expect(res).to.equal(20)\n            })\n            it('18', function() {\n                var res = getValue(\"scaleK 10 ( one and give ( one ) )\", \"\");\n                assert.isNumber(res);\n                expect(res).to.equal(0)\n            })\n            it('19', function() {\n                var res = getValue(\"give ( scaleK 10 ( one and give ( one ) ) )\", \"\");\n                assert.isNumber(res);\n                expect(res).to.equal(0)\n            })\n            it('20', function() {\n                var res = getValue(\"give ( scaleK 10 ( one and one ) )\", \"\");\n                assert.isNumber(res);\n                expect(res).to.equal(-20)\n            })\n            it('21', function() {\n                var res = getValue(\"( one or zero ) and ( scaleK 10 ( one ) and zero )\", \"\");\n                assert.isNumber(res);\n                expect(res).to.equal(11)\n            })\n            it('22', function() {\n                var res = getValue(\"one or ( zero and ( scaleK 10 ( one ) and zero ) )\", \"\");\n                assert.isNumber(res);\n                expect(res).to.equal(10)\n            })\n            it('23', function() {\n                var res = getValue(\"( one or ( zero and scaleK 10 ( one ) ) ) and zero\", \"\");\n                assert.isNumber(res);\n                expect(res).to.equal(10)\n            })\n            it('24', function() {\n                var res = getValue(\"( one or ( one and scaleK 10 ( one ) ) ) and one\", \"\");\n                assert.isNumber(res);\n                expect(res).to.equal(12)\n            })\n            it('25', function() {\n                var res = getValue(\"( one and ( scaleK 10 ( one ) and one ) )\", \"\");\n                assert.isNumber(res);\n                expect(res).to.equal(12)\n            })\n            it('26', function() {\n                var res = getValue(\"( one or ( one and scaleK 10 ( one ) ) ) and truncate \\\"24/12/2017-23:33:33\\\" ( one )\", \"\");\n                assert.isNumber(res);\n                expect(res).to.equal(11)\n            })\n        })\n\n        context('with non-empty contract string and non-empty horizonToCheck as argument', function() {\n            it('1', function() {\n                var res = getValue(\"scaleK 100 ( get ( truncate \\\"18/08/2019-23:33:33\\\" ( one ) ) )\", \"18/08/2019-23:33:33\");\n                assert.isNumber(res);\n                expect(res).to.equal(100)\n            })\n            it('2', function() {\n                var res = getValue(\"scaleK 100 ( get ( truncate \\\"18/08/2019-23:33:33\\\" ( one ) ) )\", \"19/08/2019-23:33:33\");\n                assert.isNumber(res);\n                expect(res).to.equal(0)\n            })\n            it('3', function() {\n                var res = getValue(\"get ( truncate \\\"18/08/2019-23:33:33\\\" ( one ) )\", \"19/08/2019-23:33:33\");\n                assert.isNumber(res);\n                expect(res).to.equal(0)\n            })\n            it('4', function() {\n                var res = getValue(\"get ( truncate \\\"18/08/2019-23:33:33\\\" ( one ) )\", \"18/08/2019-23:33:33\");\n                assert.isNumber(res);\n                expect(res).to.equal(1)\n            })\n        })\n\n    })\n\n    describe('decomposeAnds()', function() {\n\n        context('with non-empty contract string as argument', function() {\n\n            it('1', function() {\n                var res = decomposeAnds(\"one and zero\");\n                assert.isArray(res);\n                assert.lengthOf(res, 2);\n                assert.include(res, \"one\");\n                assert.include(res, \"zero\");\n            })\n            it('2', function() {\n                var res = decomposeAnds(\"one and ( zero and one )\");\n                assert.isArray(res);\n                assert.lengthOf(res, 3);\n                assert.include(res, \"one\");\n                assert.include(res, \"zero\");\n                assert.sameMembers(res, [\"one\", \"zero\", \"one\"]);\n            })\n            it('3', function() {\n                var res = decomposeAnds(\"one and scaleK 10 ( zero and one )\");\n                assert.isArray(res);\n                assert.lengthOf(res, 3);\n                assert.include(res, \"one\");\n                assert.notInclude(res, \"zero\");\n                assert.sameMembers(res, [\"one\", \"scaleK 10 ( zero )\", \"scaleK 10 ( one )\"]);\n            })\n            it('4', function() {\n                var res = decomposeAnds(\"one and scaleK 10 ( zero and give ( scaleK 5 ( one ) and zero ) )\");\n                assert.isArray(res);\n                assert.lengthOf(res, 4);\n                assert.include(res, \"one\");\n                assert.notInclude(res, \"zero\");\n                assert.sameMembers(res, [\"one\", \"scaleK 10 ( zero )\", \"scaleK 10 ( give ( scaleK 5 ( one ) ) )\", \"scaleK 10 ( give ( zero ) )\"]);\n            })\n        })\n\n        context('with empty contract string as argument', function() {\n\n            it('1', function() {\n                var res = decomposeAnds(\"\");\n                assert.isArray(res);\n                assert.isEmpty(res);\n            })\n        })\n\n    })\n\n    describe('cleanUpBeforeDecomp()', function() {\n\n        context('with non-empty contract string as argument', function() {\n\n            it('1', function() {\n                var res = cleanUpBeforeDecomp(\"\\\"12/12/2019 15:15:22\\\"  one\");\n                assert.isString(res);\n                expect(res).to.equal(\"\\\"12/12/2019-15:15:22\\\" one\")\n            })\n            it('2', function() {\n                var res = cleanUpBeforeDecomp(\"one  and   zero\");\n                assert.isString(res);\n                expect(res).to.equal(\"one and zero\")\n            })\n            it('3', function() {\n                var res = cleanUpBeforeDecomp(\"  \\\"12/12/2019 15:15:22\\\" zero   \");\n                assert.isString(res);\n                expect(res).to.equal(\"\\\"12/12/2019-15:15:22\\\" zero\")\n            })\n            it('4', function() {\n                var res = cleanUpBeforeDecomp(\"one and   \\\"12/12/2019 15:15:22\\\"\\n\");\n                assert.isString(res);\n                expect(res).to.equal(\"one and \\\"12/12/2019-15:15:22\\\"\")\n            })\n            it('5', function() {\n                var res = cleanUpBeforeDecomp(\"(one and zero)()\\\"12/12/2019 15:15:22\\\"  \");\n                assert.isString(res);\n                expect(res).to.equal(\"( one and zero ) ( ) \\\"12/12/2019-15:15:22\\\"\")\n            })\n        })\n    })\n\n    describe('extractAllSubHorizons()', function() {\n\n        context('with non-empty contract strings as arguments', function() {\n\n            it('1', function() {\n                var res = extractAllSubHorizons(\"truncate \\\"24/01/2019-23:33:33\\\" ( one )\", \"one\", \">=\");\n                assert.typeOf(res, 'set');\n                assert.include(res, \"24/01/2019-23:33:33\");\n            })\n            it('2', function() {\n                var res = extractAllSubHorizons(\"truncate \\\"24/01/2019-23:33:33\\\" ( one ) and truncate \\\"25/01/2019-23:33:33\\\" ( one )\", \"one\", \">=\");\n                assert.typeOf(res, 'set');\n                assert.include(res, \"24/01/2019-23:33:33\");\n                assert.include(res, \"25/01/2019-23:33:33\");\n            })\n            it('3', function() {\n                var res = extractAllSubHorizons(\"truncate \\\"24/01/2019-23:33:33\\\" ( one ) and truncate \\\"26/01/2019-23:33:33\\\" ( one )\", \"truncate \\\"27/01/2019-23:33:33\\\" ( one )\", \">=\");\n                assert.typeOf(res, 'set');\n                assert.include(res, \"24/01/2019-23:33:33\");\n                assert.include(res, \"26/01/2019-23:33:33\");\n                assert.include(res, \"27/01/2019-23:33:33\");\n            })\n            it('4', function() {\n                var res = extractAllSubHorizons(\"truncate \\\"24/01/2019-23:33:33\\\" ( one ) and truncate \\\"26/01/2019-23:33:33\\\" ( one )\", \"truncate \\\"25/01/2019-23:33:33\\\" ( one )\", \">=\");\n                assert.typeOf(res, 'set');\n                assert.include(res, \"24/01/2019-23:33:33\");\n                assert.include(res, \"25/01/2019-23:33:33\");\n                assert.notInclude(res, \"26/01/2019-23:33:33\");\n            })\n        })\n    })\n\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566423975374
  },
  "{\"sourceRoot\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"filename\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/index.mjs\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/index.mjs",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/index.mjs",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/index.mjs",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js",
        "sourceFileName": "index.mjs"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.nonExistingTerm = nonExistingTerm;\nexports.replaceUserDefinitions = replaceUserDefinitions;\nexports.cleanUpBeforeDecomp = cleanUpBeforeDecomp;\nexports.extractAllSubHorizons = extractAllSubHorizons;\nexports.evaluateConditionals = evaluateConditionals;\nexports.evaluate = evaluate;\nexports.getHorizon = getHorizon;\nexports.getValue = getValue;\nexports.decomposeAnds = decomposeAnds;\n\nvar _stringmanipulation = require(\"./stringmanipulation.mjs\");\n\nvar _contract = require(\"./contract.mjs\");\n\nvar _deploy = require(\"./deploy/deploy.mjs\");\n\nvar _oracles = require(\"./oracles.mjs\");\n\nvar _generalfunctions = require(\"./generalfunctions.mjs\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar numberOfSubContracts = 0,\n    numberOfContracts = 0,\n    superContractsMap = new Map(),\n    // map from superContract id to set of contract objects contained within super contract\nagreedOracleAddress,\n    account1Deposited = false,\n    account2Deposited = false,\n    definitionsMap = new Map(),\n    observablesArr = [\"libor3m\", \"tempInLondon\"],\n    uniqueID = 0,\n    // id to keep track of divs for contract choices (and remove these)\nacquireBtnToBeDisabled1 = true,\n    acquireBtnToBeDisabled2 = true,\n    contractsBeingDecomposed = 1,\n    stringToAddToBeginning = \"\",\n    stringToAddToEnd = \"\";\nwindow.addEventListener('load', function () {\n  // commented for testing purposes\n\n  /*\n  document.getElementById(\"deposit_button1\").disabled = true;\n  document.getElementById(\"deposit_button2\").disabled = true;\n  document.getElementById(\"make_transaction_button\").disabled = true;\n  document.getElementById(\"select_deposit\").disabled = true;\n  document.getElementById(\"transaction_input_textarea\").disabled = true;\n  */\n  addDepositSelectOptions();\n  (0, _oracles.createOracles)(); // start timer\n\n  update();\n  runClock();\n  var res = evaluate(\"( truncate \\\"23/12/2017-23:33:33\\\" ( one ) and truncate \\\"26/12/2017-23:33:33\\\" ( one ) )\", \">\", \"truncate \\\"24/12/2017-23:33:33\\\" ( one )\");\n});\n\nfunction addDepositSelectOptions() {\n  var $select = $(\".custom_select\");\n\n  for (var i = 1; i <= 100; ++i) {\n    $select.append($('<option></option>').val(i).html(i));\n  }\n}\n\nglobal.addDefinition = function (inputString) {\n  try {\n    document.getElementById(\"add_definitions_status\").innerHTML = \"\"; // remove multiple whitespaces\n\n    inputString = inputString.replace(/  +/gm, \" \"); // pattern matching for semantics\n\n    var matches = inputString.match(/^.+\\s?=\\s?.+;$/);\n\n    if (inputString === \"\" || matches === null) {\n      document.getElementById(\"add_definitions_status\").innerHTML = \"Please provide a valid definition.\";\n      throw new Error(\"Please provide a valid definition.\");\n    }\n\n    document.getElementById(\"input_added_textarea\").innerHTML = \"\";\n    var strArr = inputString.split(\"=\"),\n        part1 = (0, _stringmanipulation.rTrimWhiteSpace)(strArr[0]),\n        part2 = (0, _stringmanipulation.trimSemiColon)((0, _stringmanipulation.lTrimWhiteSpace)(strArr[1])),\n        part1Arr = part1.split(\" \"),\n        part2Arr = part2.split(\" \"); // check semantics of second part\n\n    for (var i = 0; i < part2Arr.length; ++i) {\n      var term = part2Arr[i];\n\n      if (!part1.includes(term) && nonExistingTerm(term) && !definitionsMap.has(term)) {\n        document.getElementById(\"add_definitions_status\").innerHTML = \"Please provide a valid definition.\";\n        throw new Error(\"Please provide a valid definition.\");\n      }\n    } // or just use first word - add checking and then tell user that first term must be definition\n    // need to find word in lhs string thats not in rhs and not one of the existing terms & add definition to map\n\n\n    for (var i = 0; i < part1Arr.length; ++i) {\n      var term = part1Arr[i];\n\n      if (!part2.includes(term) && nonExistingTerm(term)) {\n        definitionsMap.set(term, part1 + \"=\" + part2);\n      }\n    }\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = definitionsMap[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var _step$value = _slicedToArray(_step.value, 2),\n            key = _step$value[0],\n            value = _step$value[1];\n\n        // need to do this in order to allow overwriting of definitions\n        var valueArr = value.split(\"=\");\n        document.getElementById(\"input_added_textarea\").innerHTML += key + \": \" + valueArr[0] + \" = \" + valueArr[1] + \"\\n\";\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  } catch (e) {\n    console.log(\"Invalid definition provided.\");\n    return;\n  }\n};\n\nfunction nonExistingTerm(term) {\n  if (term !== \"give\" && term !== \"truncate\" && term !== \"get\" && term !== \"one\" && term !== \"zero\" && term !== \"scaleK\" && term !== \"one\" && !COMPARISONOPERATOR(term) && term !== \"&&\" && term !== \"if\" && term !== \"||\" && !(0, _generalfunctions.isNumeric)(term) && term !== \"(\" && term !== \")\" && !(0, _stringmanipulation.isDate)((0, _stringmanipulation.lTrimDoubleQuotes)((0, _stringmanipulation.rTrimDoubleQuotes)(term))) && term !== \"else\" && term !== \"}\" && term !== \"{\" && term !== \"and\" && term !== \"or\" && !observablesArr.includes(term)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction replaceUserDefinitions(inputString, mapOfDefinitions) {\n  var strSplit = inputString.split(\" \"),\n      keys = Array.from(mapOfDefinitions.keys()),\n      intersection = strSplit.filter(function (value) {\n    return keys.includes(value);\n  }); // check if any definition appears in inputString\n\n  while (intersection.length !== 0) {\n    for (var i = 0; i < intersection.length; ++i) {\n      // check for if any definition appears in inputString\n      var regex = new RegExp(\"(.*)(\" + intersection[i] + \")(.*)\"),\n          matchObj1 = regex.exec(inputString),\n          // find matching part in string\n      value = mapOfDefinitions.get(intersection[i]),\n          valueArr = value.split(\"=\"),\n          lhs = valueArr[0],\n          newValue = valueArr[1],\n          endPartArr = (0, _stringmanipulation.lTrimWhiteSpace)(matchObj1[2] + matchObj1[3]).split(\" \"),\n          lhsArr = lhs.split(\" \"); // do not need to trim by whitespace here as we add no whitespace when adding definitions\n\n      for (var j = 1; j < lhsArr.length; ++j) {\n        // skipping first index as this is definition\n        regex = new RegExp(\"(.+\\\\s)?(\" + lhsArr[j] + \")(\\\\s.+)?\");\n        var matchObj2 = regex.exec(newValue);\n        newValue = matchObj2[1] + endPartArr[j] + matchObj2[3];\n      }\n\n      endPartArr.splice(0, lhsArr.length);\n\n      if (newValue.indexOf(\"one\") !== newValue.lastIndexOf(\"one\") || newValue.indexOf(\"zero\") !== newValue.lastIndexOf(\"zero\") || newValue.includes(\"one\") && newValue.includes(\"zero\")) {\n        // value consists of multiple contracts - add parenthesis\n        inputString = endPartArr.length > 0 ? matchObj1[1] + \" ( \" + newValue + \" ) \" + endPartArr.join(\" \") : matchObj1[1] + \" ( \" + newValue + \")\";\n      } else {\n        // need to add the whitespace as we trimmed it previously\n        inputString = endPartArr.length > 0 ? matchObj1[1] + newValue + \" \" + endPartArr.join(\" \") : matchObj1[1] + newValue;\n      }\n    }\n\n    strSplit = inputString.split(\" \");\n    intersection = strSplit.filter(function (value) {\n      return keys.includes(value);\n    });\n  }\n\n  return inputString;\n}\n\nfunction correctConstruct(inputString) {\n  if (inputString === \"\") {\n    document.getElementById(\"transaction_status\").innerHTML = \"Please provide some contract input.\";\n    return false;\n  }\n\n  if ((0, _stringmanipulation.openingParensAmount)(inputString) !== (0, _stringmanipulation.closingParensAmount)(inputString)) {\n    document.getElementById(\"transaction_status\").innerHTML = \"The contract is not constructed properly. Parenthesis mismatch.\";\n    return false;\n  }\n\n  if (!inputString.includes(\"one\") && !inputString.includes(\"zero\")) {\n    document.getElementById(\"transaction_status\").innerHTML = \"The contract is not constructed properly. A contract must include either 'one' or 'zero'.\";\n    return false;\n  }\n\n  if (inputString.includes(\"get\") && !inputString.includes(\"truncate\")) {\n    document.getElementById(\"transaction_status\").innerHTML = \"The contract is not constructed properly. A contract cannot contain 'get' without 'truncate'.\";\n    return false;\n  }\n\n  return true;\n}\n\nfunction obtainSubContractString(array, indexToStartFrom) {\n  // returns subcontractString and the number of items in the string\n  var stringToReturn = \"\";\n\n  if (array[indexToStartFrom] === \"(\") {\n    var openingParens = 1;\n\n    for (var i = indexToStartFrom + 1; i < array.length; ++i) {\n      // if string starts with opening paren wait until get balanced closing paren\n      var term = array[i];\n      stringToReturn = stringToReturn === \"\" ? term : stringToReturn + \" \" + term;\n\n      if (term === \"(\") {\n        ++openingParens;\n      } else if (term === \")\") {\n        --openingParens;\n      }\n\n      if (openingParens === 0) {\n        return [stringToReturn, i + 1 - indexToStartFrom];\n      }\n    }\n  } else {\n    // else wait until reading 'zero' or 'one' OR a number in the case it is called by getValue and has been replaced by a numbe\n    for (var i = indexToStartFrom; i < array.length; ++i) {\n      var term = array[i];\n      stringToReturn = stringToReturn === \"\" ? term : stringToReturn + \" \" + term;\n\n      if (term === \"one\" || term === \"zero\" || (0, _generalfunctions.isNumeric)(term)) {\n        // ---\n        return [stringToReturn, i + 1 - indexToStartFrom];\n      }\n    }\n  }\n}\n\nfunction cleanUpBeforeDecomp(inputString) {\n  // add dash between date day and time for processing purposes\n  inputString = (0, _stringmanipulation.changeDateFormat)(inputString); // replacing own definitions with map values\n\n  inputString = replaceUserDefinitions(inputString, definitionsMap);\n\n  if (!correctConstruct(inputString)) {\n    return \"error\";\n  } // remove linebreaks, then multiple whitespaces\n\n\n  inputString = inputString.replace(/(\\r\\n|\\n|\\r)/gm, \" \").replace(/  +/gm, \" \"); // add spacing before and after parenthesis\n\n  inputString = (0, _stringmanipulation.lTrimWhiteSpace)((0, _stringmanipulation.rTrimWhiteSpace)((0, _stringmanipulation.addSpacing)(inputString))); // evaluate & replace if clauses\n\n  var ifMatches = inputString.match(/^(.*\\sif\\s.*)|(if\\s.*)$/);\n\n  if (ifMatches !== null) {\n    inputString = (0, _stringmanipulation.rTrimWhiteSpace)((0, _stringmanipulation.lTrimWhiteSpace)(evaluateConditionals(inputString))); // may return \"error\"\n  }\n\n  return inputString;\n}\n\nglobal.getDefinitionsText = function () {\n  return document.getElementById(\"add_input_textarea\").value;\n};\n\nfunction extractAllSubHorizons(contract1, contract2, comparisonOperator) {\n  var setOfDates = new Set(); // whenever we reach one or zero we need to find their horizon ie we need to get the horizons of all lowest level subcontracts\n  // simply by finding all truncate occurrences.. this is when a contracts value will change as some contract will expire\n\n  var maxHorizon = \"\";\n\n  if (comparisonOperator === \">=\" || comparisonOperator === \"==\") {\n    maxHorizon = getHorizon(contract2); // we only want to check for times that are <= maxHorizon\n  } else {\n    maxHorizon = getHorizon(contract1); // we only want to check for times that are <= maxHorizon\n  }\n\n  setOfDates.add(maxHorizon);\n\n  if (comparisonOperator === \"==\") {\n    return setOfDates;\n  }\n\n  var contract1HorArr = contract1.split(\" \"),\n      contract2HorArr = contract2.split(\" \");\n\n  for (var i = 0; i < contract1HorArr.length; ++i) {\n    var term = contract1HorArr[i];\n\n    if (term === \"truncate\") {\n      var currentHor = (0, _stringmanipulation.lTrimDoubleQuotes)((0, _stringmanipulation.rTrimDoubleQuotes)(contract1HorArr[i + 1]));\n\n      if ((0, _stringmanipulation.greaterDate)(maxHorizon, currentHor)) {\n        setOfDates.add(currentHor);\n      }\n    }\n  }\n\n  for (var i = 0; i < contract2HorArr.length; ++i) {\n    var term = contract2HorArr[i];\n\n    if (term === \"truncate\") {\n      var currentHor = (0, _stringmanipulation.lTrimDoubleQuotes)((0, _stringmanipulation.rTrimDoubleQuotes)(contract2HorArr[i + 1]));\n\n      if ((0, _stringmanipulation.greaterDate)(maxHorizon, currentHor)) {\n        setOfDates.add(currentHor);\n      }\n    }\n  }\n\n  return setOfDates;\n}\n\nfunction update() {\n  // loop through all contracts and check if their time == current time and if so check if get or not\n  // if get: then execute\n  // if not get: then disable acquire button\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = superContractsMap[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _step2$value = _slicedToArray(_step2.value, 2),\n          superContractId = _step2$value[0],\n          contractsSet = _step2$value[1];\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = contractsSet[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var contract = _step3.value;\n\n          if (contract.horizonDate !== \"infinite\" && (0, _stringmanipulation.beforeCurrentDate)(contract.horizonDate, \"\")) {\n            if (contract.toBeExecutedAtHorizon === \"yes\") {\n              // contract contains 'get' - must be executed now\n              executeSingleContract(contract);\n            } else {\n              // contract just contains 'truncate' and not 'get'\n              document.getElementById(\"td_status_\" + contract.id).innerHTML = \"expired\";\n              deleteFromSuperContracts(superContractsMap, superContractId, contract);\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n        _iterator2[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n}\n\nfunction runClock() {\n  // every 60 seconds we check for expired contracts\n  var now = new Date(),\n      timeToNextTick = (60 - now.getSeconds()) * 1000 - now.getMilliseconds();\n  setTimeout(function () {\n    update();\n    runClock();\n  }, timeToNextTick);\n}\n\nglobal.callDepositFunction = function (id) {\n  document.getElementById(\"create_contract_status\").innerHTML = \"\";\n  var addr = \"\";\n\n  if (id === 1) {\n    addr = \"holder_address\";\n  } else {\n    addr = \"counter_party_address\";\n  }\n\n  var depositAmount = getSelectedDeposit(),\n      senderAddress = document.getElementById(addr).value;\n\n  if ((0, _deploy.getSelectedMetaMaskAccount)().toUpperCase() === senderAddress.toUpperCase()) {\n    (0, _deploy.depositCollateral)(senderAddress, depositAmount).then(function (holderDepositTxHash) {\n      (0, _deploy.waitForReceipt)(holderDepositTxHash).then(function (_) {\n        console.log(\"Deposit of \" + depositAmount + \" Ether has been added to \" + addr + \" account.\");\n        document.getElementById(\"select_deposit\").disabled = true;\n\n        if (id === 1) {\n          account1Deposited = true;\n        } else {\n          account2Deposited = true;\n        }\n\n        if (account1Deposited && account2Deposited) {\n          document.getElementById(\"make_transaction_button\").disabled = false;\n        }\n\n        retrieveBalances();\n      });\n    });\n  } else {\n    document.getElementById(\"create_contract_status\").innerHTML = \"Please change the currently selected MetaMask account to the one you would like to deposit to.\";\n  }\n};\n\nglobal.createContractFunction = function () {\n  document.getElementById(\"create_contract_status\").innerHTML = \"\";\n  var localHolderAddress = document.getElementById(\"holder_address\").value,\n      localCounterPartyAddress = document.getElementById(\"counter_party_address\").value;\n\n  if (localHolderAddress === localCounterPartyAddress) {\n    document.getElementById(\"create_contract_status\").innerHTML = \"Holder address and counter party address cannot be the same\";\n    return;\n  } // check if getSelectedMetaMaskAccount returns valid result, if not log error telling user to log in\n\n\n  if ((0, _deploy.getSelectedMetaMaskAccount)() === undefined) {\n    document.getElementById(\"create_contract_status\").innerHTML = \"Please log into MetaMask.\";\n    return;\n  } // check if the parity dev net is selected\n\n\n  if ((0, _deploy.getSelectedNetwork)() !== \"17\") {\n    document.getElementById(\"create_contract_status\").innerHTML = \"Please select the Parity development chain network.\";\n    return;\n  }\n\n  if ((0, _deploy.getSelectedMetaMaskAccount)().toUpperCase() === localHolderAddress.toUpperCase()) {\n    (0, _deploy.setDefaultAccount)(localHolderAddress);\n    (0, _deploy.instantiateNew)(localHolderAddress, localCounterPartyAddress).then(function (instantiationTxHash) {\n      (0, _deploy.waitForReceipt)(instantiationTxHash).then(function (instantiationReceipt) {\n        (0, _deploy.setSmartContractInstance)(instantiationReceipt.contractAddress);\n        document.getElementById(\"create_contract_button\").disabled = true;\n        document.getElementById(\"select_oracle\").disabled = true;\n        document.getElementById(\"holder_address\").disabled = true;\n        document.getElementById(\"counter_party_address\").disabled = true;\n        document.getElementById(\"deposit_button1\").disabled = false;\n        document.getElementById(\"deposit_button2\").disabled = false;\n        document.getElementById(\"select_deposit\").disabled = false;\n        agreedOracleAddress = getSelectedOracle();\n      });\n    });\n  } else {\n    document.getElementById(\"create_contract_status\").innerHTML = \"Please change the currently selected MetaMask account to the contract holder account.\";\n  }\n};\n\nfunction getSelectedDeposit() {\n  return document.getElementById(\"select_deposit\").value;\n}\n\nfunction getSelectedOracle() {\n  return document.getElementById(\"select_oracle\").value;\n}\n\nglobal.getInputString = function () {\n  return document.getElementById(\"transaction_input_textarea\").value;\n};\n\nfunction evaluateConditionals(inputString) {\n  var termArr = inputString.split(\" \"),\n      ifsToBeMatched = 0,\n      openingParens = 0,\n      closingParens = 0,\n      contractString = \"\",\n      ifCondition = \"\",\n      ifStack = [],\n      noOfOpeningParensStack = [],\n      firstPartStack = [],\n      compOpStack = [],\n      insideCondition = false;\n\n  for (var i = 0; i < termArr.length; ++i) {\n    var term = termArr[i],\n        nextTerm = termArr[i + 1],\n        // for syntax checking\n    prevTerm = termArr[i - 1]; // for syntax checking\n\n    if (term === \"if\") {\n      if (i > termArr.length - 9 || nextTerm !== \"(\" || i > 0 && prevTerm !== \"(\" && prevTerm !== \"{\" && prevTerm !== \"and\" && prevTerm !== \"or\" && !COMPARISONOPERATOR(prevTerm)) {\n        document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": \" + term;\n        return \"error\";\n      }\n\n      if (ifsToBeMatched > 0 && ifCondition !== \"\") {\n        ifStack.push(ifCondition);\n        ifCondition = \"\";\n      }\n\n      noOfOpeningParensStack.push(openingParens - closingParens);\n      ++ifsToBeMatched;\n      insideCondition = true;\n    } else if (term === \")\") {\n      if (i < termArr.length - 1 && nextTerm !== \")\" && nextTerm !== \"and\" && nextTerm !== \"or\" && nextTerm !== \"{\" && !COMPARISONOPERATOR(nextTerm) && nextTerm !== \"||\" && nextTerm !== \"&&\" || i < 2 || i > 0 && prevTerm !== \"one\" && prevTerm !== \"zero\" && prevTerm !== \"}\" && prevTerm !== \")\") {\n        document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": \" + term;\n        return \"error\";\n      }\n\n      ++closingParens;\n      var bool1 = noOfOpeningParensStack.length === 0 && openingParens === closingParens && ifsToBeMatched !== 0,\n          bool2 = openingParens - noOfOpeningParensStack[noOfOpeningParensStack.length - 1] === closingParens;\n\n      if (bool1 || bool2) {\n        // have reached end of the if condition\n        insideCondition = false;\n        var firstPart = firstPartStack.pop(),\n            compOp = compOpStack.pop(),\n            cons = \"\",\n            // consequence\n        alt = \"\",\n            // alternative\n        stringToEval = firstPart + \" \" + compOp + \" \" + ifCondition,\n            bool = evaluate(firstPart, compOp, ifCondition);\n\n        if (bool === undefined) {\n          document.getElementById(\"transaction_status\").innerHTML = \"Conditional statement syntax error.\";\n          return \"error\";\n        }\n\n        ifCondition = \"\";\n\n        if (bool) {\n          var findConsequentResult1 = (0, _stringmanipulation.findConsequent)(termArr, i + 2); // +2 to skip {\n\n          cons = findConsequentResult1[0];\n          var lengthOfCons = findConsequentResult1[1];\n\n          if (ifsToBeMatched > 1) {\n            ifCondition = ifStack.length > 0 ? ifStack.pop() + \" \" + cons : cons;\n          } else {\n            contractString = contractString === \"\" ? cons : contractString + \" \" + cons;\n          } // now need to fast forward in string ie skip indices\n\n\n          if (termArr[i + lengthOfCons + 2] !== \"else\") {\n            i = i + lengthOfCons + 1; // +1 to skip {}\n          } else {\n            var findConsequentResult2 = (0, _stringmanipulation.findConsequent)(termArr, i + findConsequentResult1[1] + 4); // +4 because of 'else' + {\n\n            alt = findConsequentResult2[0];\n            var lengthOfAlt = findConsequentResult2[1];\n            i = i + lengthOfCons + lengthOfAlt + 3; // +3 to skip {}{}\n          }\n        } else {\n          // boolean returns false\n          var findConsequentResult1 = (0, _stringmanipulation.findConsequent)(termArr, i + 2); // +2 to skip {\n\n          cons = findConsequentResult1[0];\n          var lengthOfCons = findConsequentResult1[1];\n\n          if (termArr[i + lengthOfCons + 2] !== \"else\") {\n            // if no 'else' given\n            i = i + lengthOfCons + 1; // +1 to skip {}\n\n            if (ifsToBeMatched > 1) {\n              // append result (nothing) to ifCondition\n              if (ifStack.length > 0) {\n                ifCondition = ifStack.pop();\n                var slicedCond = ifCondition.slice(-3);\n\n                if (slicedCond === \"and\" || slicedCond === \" or\") {\n                  // check if last term was a connective\n                  var lastIndex = ifCondition.lastIndexOf(\" \");\n                  ifCondition = ifCondition.slice(0, lastIndex);\n                } // check if last term was a comp op\n\n\n                var slicedCompOp1 = ifCondition.slice(-4); // when compOp is 4 symbols long\n\n                var slicedCompOp2 = ifCondition.slice(-2); // when compOp is 2 symbols long\n\n                var slicedCompOp3 = ifCondition.slice(-1); // when compOp is 1 symbol long\n\n                if (COMPARISONOPERATOR(slicedCond) || COMPARISONOPERATOR(slicedCompOp1) || COMPARISONOPERATOR(slicedCompOp2) || COMPARISONOPERATOR(slicedCompOp3)) {\n                  // check if last term was a connective\n                  document.getElementById(\"transaction_status\").innerHTML = \"Comparison operator error: Please provide an alternative to your conditional statement.\";\n                  return \"error\";\n                }\n              } else {\n                ifCondition = \"\";\n              }\n            } else {\n              // append result (nothing) to contractString\n              var slicedCond = contractString.slice(-3);\n\n              if (slicedCond === \"and\" || slicedCond === \" or\") {\n                // check if last term was a connective\n                var lastIndex = contractString.lastIndexOf(\" \");\n                contractString = contractString.slice(0, lastIndex);\n              } // check if last term was a comp op\n\n\n              var slicedCompOp1 = ifCondition.slice(-4); // when compOp is 4 symbols long\n\n              var slicedCompOp2 = ifCondition.slice(-2); // when compOp is 2 symbols long\n\n              var slicedCompOp3 = ifCondition.slice(-1); // when compOp is 1 symbol long\n\n              if (COMPARISONOPERATOR(slicedCond) || COMPARISONOPERATOR(slicedCompOp1) || COMPARISONOPERATOR(slicedCompOp2) || COMPARISONOPERATOR(slicedCompOp3)) {\n                // check if last term was a connective\n                document.getElementById(\"transaction_status\").innerHTML = \"Comparison operator error: Please provide an alternative to your conditional statement.\";\n                return \"error\";\n              }\n            } // check if next term is a comp op\n\n\n            if (COMPARISONOPERATOR(termArr[i + 1])) {\n              // check if next term is a connective\n              document.getElementById(\"transaction_status\").innerHTML = \"Comparison operator error: Please provide an alternative to your conditional statement.\";\n              return \"error\";\n            }\n\n            if (termArr[i + 1] === \"and\" || termArr[i + 1] === \"or\") {\n              // check if next term is a connective\n              ++i;\n            }\n          } else {\n            // there is an alternative\n            var findConsequentResult2 = (0, _stringmanipulation.findConsequent)(termArr, i + findConsequentResult1[1] + 4); // +4 because of 'else' + {\n\n            alt = findConsequentResult2[0];\n            var lengthOfAlt = findConsequentResult2[1];\n            i = i + lengthOfCons + lengthOfAlt + 3; // +4 to skip {}{}\n\n            if (ifsToBeMatched > 1) {\n              ifCondition = ifStack.length > 0 ? ifStack.pop() + \" \" + alt : alt;\n            } else {\n              contractString = contractString === \"\" ? alt : contractString + \" \" + alt;\n            }\n          }\n        }\n\n        --ifsToBeMatched;\n        noOfOpeningParensStack.pop();\n      } else if (ifsToBeMatched > 0 || insideCondition) {// we are inside ifCondition and do not want to add to final string\n        //ifCondition = ifCondition === \"\" ? term : ifCondition + \" \" + term;\n      } else {\n        // we are not inside ifCondition and can append to contractString\n        contractString = contractString === \"\" ? term : contractString + \" \" + term;\n      }\n    } else if (term === \"(\") {\n      if (i > termArr.length - 3 || nextTerm === \")\" || COMPARISONOPERATOR(nextTerm) || nextTerm === \"&&\" || nextTerm === \"||\" || nextTerm === \"{\" || (0, _stringmanipulation.isDate)((0, _stringmanipulation.lTrimDoubleQuotes)((0, _stringmanipulation.rTrimDoubleQuotes)(nextTerm))) || nextTerm === \"}\" || nextTerm === \"or\" || nextTerm === \"and\" || nextTerm === \"else\" || (0, _generalfunctions.isNumeric)(nextTerm) || observablesArr.includes(nextTerm) || i > 0 && (prevTerm === \")\" || prevTerm === \"one\" || prevTerm === \"zero\" || prevTerm === \"truncate\" || prevTerm === \"scaleK\" || prevTerm === \"else\" || prevTerm === \"}\")) {\n        document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": \" + term;\n        return \"error\";\n      }\n\n      ++openingParens;\n\n      if (termArr[i - 1] !== \"if\") {\n        if (ifsToBeMatched > 0 || insideCondition) {// we are inside ifCondition and do not want to add to final string\n          //ifCondition = ifCondition === \"\" ? term : ifCondition + \" \" + term;\n        } else {\n          // we are not inside ifCondition and can append to contractString\n          contractString = contractString === \"\" ? term : contractString + \" \" + term;\n        }\n      }\n    } else if (COMPARISONOPERATOR(term)) {\n      if (firstPartStack.length > 0 && firstPartStack.length === ifsToBeMatched) {\n        firstPartStack.push(firstPartStack.pop() + \" \" + compOpStack.pop() + \" \" + ifCondition);\n      } else {\n        firstPartStack.push(ifCondition);\n      }\n\n      compOpStack.push(term);\n      ifCondition = \"\";\n    } else if (term === \"||\" || term === \"&&\") {\n      if (prevTerm !== \")\" || nextTerm !== \"(\") {\n        document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": \" + term;\n        return \"error\";\n      }\n\n      var firstPart = firstPartStack.pop(),\n          compOp = compOpStack.pop(),\n          secondPart = ifCondition,\n          ifConditionVal = evaluate(firstPart, compOp, secondPart); //ifConditionVal = evaluate(lTrimParen(rTrimParen(firstPart)), compOp, secondPart);\n\n      if (ifConditionVal === undefined) {\n        document.getElementById(\"transaction_status\").innerHTML = \"Conditional statement syntax error.\";\n        return \"error\";\n      } // keep opening paren\n\n\n      ifCondition = firstPart.slice(0, 1) === \"(\" && secondPart.slice(-1) !== \")\" ? \"(\" + ifConditionVal + \" \" + term : ifConditionVal + \" \" + term;\n\n      if (ifConditionVal && term === \"&&\" || !ifConditionVal && term === \"||\") {\n        // keep opening paren\n        ifCondition = firstPart.slice(0, 1) === \"(\" && secondPart.slice(-1) !== \")\" ? \"(\" : \"\";\n      }\n    } else if (nonExistingTerm(term)) {\n      // give error for non-existing term\n      document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": \" + term;\n      return \"error\";\n    } else {\n      if (ifsToBeMatched > 0) {\n        // we are inside ifCondition and do not want to add to final string\n        ifCondition = ifCondition === \"\" ? term : ifCondition + \" \" + term;\n      } else {\n        // we are not inside ifCondition and can append to contractString\n        contractString = contractString === \"\" ? term : contractString + \" \" + term;\n      }\n    }\n  }\n\n  return contractString;\n}\n\nfunction evaluate(part1, comparisonOperator, part2) {\n  if (comparisonOperator === \"{>}\" || comparisonOperator === \"{<}\" || comparisonOperator === \"{==}\" || comparisonOperator === \"{>=}\" || comparisonOperator === \"{<=}\") {\n    // Horizon Comparison\n    // can only compare two contracts - cannot have a logical operator between two contracts\n    // if no truncate included then horizon is infinite\n    var horizon1 = getHorizon(part1),\n        horizon2 = getHorizon(part2);\n\n    switch (comparisonOperator) {\n      case \"{>=}\":\n        return !(0, _stringmanipulation.greaterDate)(horizon2, horizon1);\n\n      case \"{>}\":\n        return (0, _stringmanipulation.greaterDate)(horizon1, horizon2);\n\n      case \"{<=}\":\n        return !(0, _stringmanipulation.greaterDate)(horizon1, horizon2);\n\n      case \"{<}\":\n        return (0, _stringmanipulation.greaterDate)(horizon2, horizon1);\n\n      case \"{==}\":\n        return (0, _stringmanipulation.equalDates)(horizon1, horizon2);\n\n      default:\n    }\n  } else if (comparisonOperator === \"[>]\" || comparisonOperator === \"[<]\" || comparisonOperator === \"[==]\" || comparisonOperator === \"[>=]\" || comparisonOperator === \"[<=]\") {\n    // Value Comparison\n    // can only compare two contracts - cannot have a logical operator between two contracts\n    var value1 = getValue(part1, \"\"),\n        value2 = getValue(part2, \"\");\n\n    switch (comparisonOperator) {\n      case \"[>=]\":\n        return value1 >= value2;\n\n      case \"[>]\":\n        return value1 > value2;\n\n      case \"[<=]\":\n        return value1 <= value2;\n\n      case \"[<]\":\n        return value1 < value2;\n\n      case \"[==]\":\n        return value1 === value2;\n\n      default:\n    }\n  } else if (comparisonOperator === \">=\" || comparisonOperator === \">\" || comparisonOperator === \"<=\" || comparisonOperator === \"<\" || comparisonOperator === \"==\") {\n    // Dominance Comparison\n    var horizon1 = getHorizon(part1),\n        horizon2 = getHorizon(part2); // go through all dates and call getValue with date parameter\n\n    switch (comparisonOperator) {\n      case \">=\":\n        if (!(0, _stringmanipulation.greaterDate)(horizon2, horizon1)) {\n          var horizonsSet = extractAllSubHorizons(part1, part2, comparisonOperator);\n          var _iteratorNormalCompletion4 = true;\n          var _didIteratorError4 = false;\n          var _iteratorError4 = undefined;\n\n          try {\n            for (var _iterator4 = horizonsSet[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n              var hor = _step4.value;\n              var value1 = getValue(part1, hor),\n                  value2 = getValue(part2, hor);\n\n              if (value1 < value2) {\n                return false;\n              }\n            }\n          } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n                _iterator4[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError4) {\n                throw _iteratorError4;\n              }\n            }\n          }\n\n          return true;\n        } else {\n          return false;\n        }\n\n        break;\n\n      case \">\":\n        return evaluate(part1, \">=\", part2) && !evaluate(part1, \"==\", part2);\n\n      case \"<=\":\n        if (!(0, _stringmanipulation.greaterDate)(horizon1, horizon2)) {\n          var horizonsSet = extractAllSubHorizons(part1, part2, comparisonOperator);\n          var _iteratorNormalCompletion5 = true;\n          var _didIteratorError5 = false;\n          var _iteratorError5 = undefined;\n\n          try {\n            for (var _iterator5 = horizonsSet[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n              var _hor = _step5.value;\n              var value1 = getValue(part1, _hor),\n                  value2 = getValue(part2, _hor);\n\n              if (value1 > value2) {\n                return false;\n              }\n            }\n          } catch (err) {\n            _didIteratorError5 = true;\n            _iteratorError5 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n                _iterator5[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError5) {\n                throw _iteratorError5;\n              }\n            }\n          }\n\n          return true;\n        } else {\n          return false;\n        }\n\n        break;\n\n      case \"<\":\n        return evaluate(part1, \"<=\", part2) && !evaluate(part1, \"==\", part2);\n\n      case \"==\":\n        if ((0, _stringmanipulation.equalDates)(horizon2, horizon1)) {\n          console.log(\"Both have equal dates\");\n          var horizonsSet = extractAllSubHorizons(part1, part2, comparisonOperator);\n          var _iteratorNormalCompletion6 = true;\n          var _didIteratorError6 = false;\n          var _iteratorError6 = undefined;\n\n          try {\n            for (var _iterator6 = horizonsSet[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n              var _hor2 = _step6.value;\n              console.log(\"hor: \" + _hor2);\n              var value1 = getValue(part1, _hor2),\n                  value2 = getValue(part2, _hor2);\n\n              if (value1 !== value2) {\n                return false;\n              }\n            }\n          } catch (err) {\n            _didIteratorError6 = true;\n            _iteratorError6 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion6 && _iterator6[\"return\"] != null) {\n                _iterator6[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError6) {\n                throw _iteratorError6;\n              }\n            }\n          }\n\n          return true;\n        } else {\n          return false;\n        }\n\n        break;\n\n      default:\n    }\n  }\n}\n\nfunction COMPARISONOPERATOR(string) {\n  if (string === \"{>}\" || string === \"{<}\" || string === \"{==}\" || string === \"{>=}\" || string === \"{<=}\" || string === \"[>]\" || string === \"[<]\" || string === \"[==]\" || string === \"[>=]\" || string === \"[<=]\" || string === \">=\" || string === \"==\" || string === \"<=\" || string === \">\" || string === \"<\") {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getHorizon(contractString) {\n  // Loops through the whole contract once to find the largest horizon\n  // Find minimum horizon, but beforeCurrentDate() must return false\n  var strArr = contractString.split(\" \"),\n      maxHorizon = \"\",\n      // setting first horizon as empty string\n  comeAcrossTruncate = false;\n\n  for (var i = 0; i < strArr.length; ++i) {\n    if (strArr[i] === \"truncate\") {\n      // obtain c from 'truncate t c'\n      var truncDate = strArr[i + 1],\n          oscs = obtainSubContractString(strArr, i + 2),\n          c = oscs[0],\n          prevHorizon = getHorizon(c),\n          // obtain c's previous horizon\n      currentHor = (0, _stringmanipulation.lTrimDoubleQuotes)((0, _stringmanipulation.rTrimDoubleQuotes)(truncDate)); // compare previous horizon with new horizon t and get min\n\n      if ((0, _stringmanipulation.greaterDate)(currentHor, prevHorizon)) {\n        currentHor = prevHorizon;\n      }\n\n      comeAcrossTruncate = true;\n\n      if (maxHorizon === \"\" || (0, _stringmanipulation.greaterDate)(currentHor, maxHorizon)) {\n        maxHorizon = currentHor;\n      }\n\n      i += oscs[1];\n    } else if (strArr[i] === \"and\" || strArr[i] === \"or\") {\n      // have reached end of subcontract\n      if (!comeAcrossTruncate) {\n        // if we have not come across a \"truncate\" then this subcontract's horizon is infinite\n        return \"infinite\";\n      }\n\n      comeAcrossTruncate = false;\n    } else if (i === strArr.length - 1 && !comeAcrossTruncate) {\n      return \"infinite\";\n    }\n  }\n\n  return maxHorizon;\n}\n\nfunction decompose(termArr) {\n  var openingParens = 0,\n      closingParens = 0,\n      contractString = \"\",\n      contractParsed = \"\",\n      parseStack = [],\n      contractsStack = [],\n      connectiveStack = [],\n      //---\n  closingParensStack = [],\n      mostBalancedConj = \"\",\n      mostBalancedConjBalance = termArr.length - 1,\n      conjWaitingToBeMatched = false; // set to true when reading conjunction and then set to false when reading another conjunction or reaching end\n\n  for (var i = 0; i < termArr.length; ++i) {\n    var term = termArr[i];\n\n    if (term === \"and\" || term === \"or\") {\n      // we have reached the end of a subcontract whenever 'and' is read\n      if (openingParens === closingParens) {\n        // found outer most conjunct\n        mostBalancedConj = term;\n        contractsStack[0] = contractParsed;\n        contractsStack[1] = termArr.slice(i + 1).join(' ');\n        return [contractsStack[0], contractsStack[1], mostBalancedConj];\n      } else if (openingParens > closingParens && openingParens - closingParens < mostBalancedConjBalance) {\n        mostBalancedConjBalance = openingParens - closingParens;\n        mostBalancedConj = term;\n        var combinatorString = parseStack[parseStack.length - 1];\n        var closingParensString = closingParensStack[closingParensStack.length - 1];\n\n        if (contractString !== \"\") {\n          if (combinatorString !== undefined) {\n            if (mostBalancedConj === \"or\") {\n              contractsStack[0] = contractString;\n              stringToAddToBeginning = combinatorString + \" ( \";\n              stringToAddToEnd = closingParensString;\n            } else {\n              contractsStack[0] = combinatorString + \" ( \" + contractString + closingParensString;\n            }\n          } else if (closingParensString !== undefined) {\n            if (mostBalancedConj === \"or\") {\n              contractsStack[0] = contractString;\n              stringToAddToEnd = closingParensString;\n            } else {\n              contractsStack[0] = contractString + closingParensString;\n            }\n          } else {\n            contractsStack[0] = contractString;\n          }\n        }\n\n        contractString = \"\";\n      } else {\n        connectiveStack.push(term); // ---\n      }\n\n      conjWaitingToBeMatched = true;\n    } else if (term === \"zero\" || term === \"one\") {\n      contractString = contractString === \"\" ? term : contractString + \" \" + term;\n      var combinatorString = parseStack[parseStack.length - 1];\n      var closingParensString = closingParensStack[closingParensStack.length - 1];\n\n      if (conjWaitingToBeMatched) {\n        if (combinatorString !== undefined && closingParensString !== undefined) {\n          if (mostBalancedConj === \"or\") {\n            contractsStack[1] = contractString;\n            stringToAddToBeginning = combinatorString + \" ( \";\n            stringToAddToEnd = closingParensString;\n          } else {\n            contractsStack[1] = combinatorString + \" ( \" + contractString + closingParensString;\n          }\n        } else {\n          contractsStack[1] = contractsStack[1] !== undefined ? contractsStack[1] + \" \" + connectiveStack.pop() + \" \" + contractString : contractString; // ---\n        }\n\n        conjWaitingToBeMatched = false;\n        contractString = \"\";\n      } else {\n        if (combinatorString !== undefined && closingParensString !== undefined) {\n          if (mostBalancedConj === \"or\") {\n            contractsStack[0] = contractString;\n            stringToAddToBeginning = combinatorString + \" ( \";\n            stringToAddToEnd = closingParensString;\n          } else if (mostBalancedConj === \"and\") {\n            contractsStack[0] = combinatorString + \" ( \" + contractString + closingParensString;\n          } else {\n            // we have not encountered any connective yet ie give ( one or zero )\n            // need to look ahead to see if next connective is 'and' / 'or'\n            var con = (0, _stringmanipulation.findNextConnective)(termArr, i);\n\n            if (con === \"or\") {\n              contractsStack[0] = contractString;\n              stringToAddToBeginning = combinatorString + \" ( \";\n              stringToAddToEnd = closingParensString;\n            } else {\n              contractsStack[0] = combinatorString + \" ( \" + contractString + closingParensString;\n            }\n          }\n        } else {\n          contractsStack[0] = contractString;\n        }\n\n        contractString = \"\";\n      }\n    } else if (term === \")\") {\n      // as soon as closing paren is read we have found a contract\n      ++closingParens;\n      var combinatorString = parseStack.pop();\n      var closingParensString = closingParensStack.pop();\n    } else if (term === \"(\") {\n      ++openingParens;\n\n      if (contractString !== \"\") {\n        if (parseStack.length > 0) {\n          parseStack.push(parseStack[parseStack.length - 1] + \" ( \" + contractString);\n        } else {\n          parseStack.push(contractString);\n        }\n\n        contractString = \"\";\n      }\n\n      if (termArr[i - 1] !== \"and\" && i !== 0) {\n        if (closingParensStack.length === 0) {\n          closingParensStack.push(\" )\");\n        } else {\n          closingParensStack.push(closingParensStack[closingParensStack.length - 1] + \" )\");\n        }\n      }\n    } else {\n      contractString = contractString === \"\" ? term : contractString + \" \" + term;\n    }\n\n    contractParsed = contractParsed === \"\" ? term : contractParsed + \" \" + term;\n  } // this happens if there is a balanced or conjunction at the end and the second part still needs to be added\n\n\n  if (contractString !== \"\") {\n    contractsStack.push(contractString);\n  }\n\n  return [contractsStack[0], contractsStack[1], mostBalancedConj];\n}\n\nfunction getValue(contractString, horizonToCheck) {\n  var termArr = contractString.split(\" \"),\n      currentString = \"\",\n      combinatorStack = [],\n      valuesStack = [],\n      currentVal,\n      horizonsStack = []; // pushes horizons of each c whenever we push combinators\n\n  for (var i = 0; i < termArr.length; ++i) {\n    var term = termArr[i];\n\n    if (term === \"(\") {\n      if (currentString !== \"\") {\n        combinatorStack.push(currentString);\n        currentString = \"\";\n      }\n    } else if (term === \")\") {\n      // whenever we read this we can evaluate current contract string and pop 1 comb off the combinators stack to apply\n      currentVal = getLowestLevelContractValue(currentString, horizonToCheck);\n\n      if (combinatorStack.length > 0) {\n        var str = combinatorStack.pop() + \" \" + currentVal.toString();\n        currentVal = getLowestLevelContractValue(str, horizonToCheck);\n      }\n\n      if (currentVal !== undefined) {\n        currentString = i === termArr.length - 1 ? \"\" : currentVal.toString();\n      } // apply combinator to it and call getValue again\n\n    } else if (term === \"get\") {\n      var oscs = obtainSubContractString(termArr, i + 1);\n      var subContractString = oscs[0];\n      var tempValue = getValue(subContractString, horizonToCheck);\n      currentVal = (0, _stringmanipulation.sameDayAsCurrentDate)(getHorizon(subContractString), horizonToCheck) ? tempValue : 0;\n\n      if (currentVal !== undefined) {\n        currentString = i === termArr.length - 1 ? \"\" : currentVal.toString();\n      }\n\n      i += oscs[1];\n    } else {\n      currentString = currentString === \"\" ? term : currentString + \" \" + term;\n    }\n  }\n\n  if (currentString !== \"\") {\n    currentVal = getLowestLevelContractValue(currentString, horizonToCheck);\n  }\n\n  return currentVal;\n}\n\nfunction getLowestLevelContractValue(contractString, horizonToCheck) {\n  if (contractString.includes(\" or \")) {\n    // it will only contain one or the other, not both\n    var arr = contractString.split(\" or \");\n    return Math.max(getLowestLevelContractValue(arr[0], horizonToCheck), getLowestLevelContractValue(arr[1], horizonToCheck));\n  } else if (contractString.includes(\" and \")) {\n    var arr = contractString.split(\" and \");\n    return getLowestLevelContractValue(arr[0], horizonToCheck) + getLowestLevelContractValue(arr[1], horizonToCheck);\n  } else {\n    // string does not contain connective ie we are in lowest-level subcontract\n    if ((0, _generalfunctions.isNumeric)(contractString)) {\n      return parseFloat(contractString);\n    } else if (contractString === \"zero\" || contractString.includes(\" zero \") || contractString === \"0\" || contractString.includes(\" 0 \")) {\n      return 0;\n    } else if (contractString === \"one\") {\n      return 1;\n    } else {\n      var value = 1;\n      var horizon = getHorizon(contractString);\n      var termArr = contractString.split(\" \");\n\n      for (var i = 0; i < termArr.length; ++i) {\n        if (termArr[i] === \"scaleK\") {\n          if (termArr[i + 1].includes(\"x\")) {\n            // value dependent on some observable values\n            var arr = termArr[i + 1].split(\"x\");\n\n            for (var j = 0; j < arr.length; ++j) {\n              if ((0, _generalfunctions.isNumeric)(arr[j])) {\n                value = value * parseFloat(arr[j]);\n              } else {\n                // we encountered an observable\n                if (arr[j] === \"libor3m\") {\n                  // rounding because Parity can only handle integers\n                  value = Math.round(value * (0, _oracles.getOracleByAddress)(agreedOracleAddress).getLiborSpotRate());\n                } else if (arr[j] === \"tempInLondon\") {\n                  value = Math.round(value * (0, _oracles.getOracleByAddress)(agreedOracleAddress).getTempInLondon());\n                }\n              }\n            }\n          } else {\n            value = value * parseFloat(termArr[i + 1]);\n          }\n\n          ++i;\n        } else if (termArr[i] === \"give\") {\n          value = -value;\n        } else if ((0, _generalfunctions.isNumeric)(termArr[i])) {\n          value = value * parseFloat(termArr[i]);\n        }\n      }\n\n      if ((0, _stringmanipulation.beforeCurrentDate)(horizon, horizonToCheck)) {\n        // ie contract has expired, its horizon is before horizonToCheck\n        return 0;\n      } else {\n        // contract's horizon is after the horizon given, so it is valid\n        return value;\n      }\n    }\n  }\n}\n\nglobal.processContract = function (inputString, initialDecomposition) {\n  ++uniqueID;\n\n  if (initialDecomposition) {\n    // This is the case only when this function is triggered by the 'make transaction' button\n    contractsBeingDecomposed = 1;\n    removeChildren(\"button_choices_container\"); // NEEDED?\n\n    acquireBtnToBeDisabled1 = true;\n    acquireBtnToBeDisabled2 = true;\n  }\n\n  document.getElementById(\"transaction_status\").innerHTML = \"\";\n  inputString = cleanUpBeforeDecomp(inputString);\n\n  if (inputString === \"error\" || !parsesSuccessfullyForSyntax(inputString)) {\n    return;\n  }\n\n  var termArr = inputString.split(\" \"); // check if inputstring contains 'or' else execute right away\n\n  var orMatches = inputString.match(/^(.*)\\sor\\s(.*)$/);\n\n  if (orMatches !== null) {\n    // keep track of the current most balanced conj AND its external combinators\n    var decomposedResult = decompose(termArr),\n        part1 = decomposedResult[0],\n        part2 = decomposedResult[1],\n        mostBalancedConj = decomposedResult[2];\n\n    if (mostBalancedConj === \"and\") {\n      ++contractsBeingDecomposed;\n      processContract(part1, false);\n      processContract(part2, false);\n    } else {\n      addChoices([part1, part2], uniqueID);\n    }\n  } else {\n    // input does not contain 'or'\n    var contractsArr = decomposeAnds(inputString); // calling this for performance reasons - decomposeAnds will not recursively call itself\n\n    contractsBeingDecomposed = contractsBeingDecomposed + contractsArr.length - 1;\n    createContractEntries(contractsArr);\n  }\n};\n\nfunction createValuationSelect(tr, id) {\n  var td;\n  tr.appendChild(td = document.createElement(\"td\"));\n  var div = document.createElement(\"div\");\n  td.appendChild(div);\n  div.className = \"valuation_cell_data\";\n  var date = new Date(),\n      d = date.getDate(),\n      m = date.getMonth(),\n      y = date.getFullYear();\n  var selectDay = document.createElement(\"select\");\n  selectDay.className = \"select_valuation\";\n  selectDay.id = \"day_select_\" + id;\n\n  selectDay.onchange = function () {\n    updateValuationValue(id);\n  };\n\n  div.appendChild(selectDay);\n\n  for (var i = 1; i <= 31; i++) {\n    var option = document.createElement(\"option\");\n    option.value = i;\n    option.text = i;\n    selectDay.appendChild(option);\n  }\n\n  selectDay.value = d;\n  var selectMonth = document.createElement(\"select\");\n  selectMonth.className = \"select_valuation\";\n  selectMonth.id = \"month_select_\" + id;\n\n  selectMonth.onchange = function () {\n    var selectedMonth = selectMonth.value;\n    updateSelectableDaysFromMonth(selectedMonth, id);\n    updateValuationValue(id);\n  };\n\n  div.appendChild(selectMonth);\n\n  for (var i = 1; i <= 12; i++) {\n    var option = document.createElement(\"option\");\n    option.value = i;\n    option.text = i;\n    selectMonth.appendChild(option);\n  }\n\n  selectMonth.value = m + 1;\n  var selectYear = document.createElement(\"select\");\n  selectYear.className = \"select_valuation_year\";\n  selectYear.id = \"year_select_\" + id;\n\n  selectYear.onchange = function () {\n    var selectedYear = selectYear.value;\n    updateSelectableDaysFromYear(selectedYear, id);\n    updateValuationValue(id);\n  };\n\n  div.appendChild(selectYear);\n\n  for (var i = 2019; i <= 2040; i++) {\n    var option = document.createElement(\"option\");\n    option.value = i;\n    option.text = i;\n    selectYear.appendChild(option);\n  }\n\n  selectYear.value = y;\n  var valueLabel = document.createElement(\"p\");\n  td.appendChild(valueLabel);\n  valueLabel.id = \"p_value_\" + id;\n  valueLabel.className = \"p_value\";\n  updateValuationValue(id);\n}\n\nfunction updateValuationValue(id) {\n  var day = (0, _stringmanipulation.padNumber)(document.getElementById(\"day_select_\" + id).value),\n      month = (0, _stringmanipulation.padNumber)(document.getElementById(\"month_select_\" + id).value),\n      year = document.getElementById(\"year_select_\" + id).value,\n      c = getAllSubcontracts(id);\n  document.getElementById(\"p_value_\" + id).innerHTML = getValue(c, day + \"/\" + month + \"/\" + year + \"-\" + \"12:00:00\").toString() + \"ETH\";\n}\n\nfunction getAllSubcontracts(superKey) {\n  var finalContractString = \"\";\n\n  if (superContractsMap.has(superKey)) {\n    var _iteratorNormalCompletion7 = true;\n    var _didIteratorError7 = false;\n    var _iteratorError7 = undefined;\n\n    try {\n      for (var _iterator7 = superContractsMap[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n        var _step7$value = _slicedToArray(_step7.value, 2),\n            superContractId = _step7$value[0],\n            contractsSet = _step7$value[1];\n\n        if (superContractId === superKey) {\n          var _iteratorNormalCompletion8 = true;\n          var _didIteratorError8 = false;\n          var _iteratorError8 = undefined;\n\n          try {\n            for (var _iterator8 = contractsSet[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n              var contract = _step8.value;\n              finalContractString = finalContractString === \"\" ? contract.contractString : finalContractString + \" and \" + contract.contractString;\n            }\n          } catch (err) {\n            _didIteratorError8 = true;\n            _iteratorError8 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion8 && _iterator8[\"return\"] != null) {\n                _iterator8[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError8) {\n                throw _iteratorError8;\n              }\n            }\n          }\n        }\n      }\n    } catch (err) {\n      _didIteratorError7 = true;\n      _iteratorError7 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion7 && _iterator7[\"return\"] != null) {\n          _iterator7[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError7) {\n          throw _iteratorError7;\n        }\n      }\n    }\n\n    return finalContractString;\n  } else {\n    return \"zero\"; // all contracts have already expired\n  }\n}\n\nfunction updateSelectableDaysFromMonth(selectedMonth, id) {\n  var selectDay = document.getElementById(\"day_select_\" + id);\n  var selectYear = document.getElementById(\"year_select_\" + id);\n\n  if (selectedMonth === \"1\" || selectedMonth === \"3\" || selectedMonth === \"5\" || selectedMonth === \"7\" || selectedMonth === \"8\" || selectedMonth === \"10\" || selectedMonth === \"12\") {\n    // 31 days\n    for (var i = selectDay.options.length + 1; i <= 31; ++i) {\n      // add items\n      var option = document.createElement(\"option\");\n      option.value = i;\n      option.text = i;\n      selectDay.appendChild(option);\n    }\n  } else if (selectedMonth === \"2\") {\n    if (selectYear === \"2020\" || selectYear === \"2024\" || selectYear === \"2028\" || selectYear === \"2032\" || selectYear === \"2036\" || selectYear === \"2040\") {\n      // leap year - 29 days in Feb\n      if (parseInt(selectDay.value) > 29) {\n        selectDay.value = 29;\n      }\n\n      while (selectDay.options.length > 29) {\n        selectDay.remove(29);\n      }\n\n      if (selectDay.options.length === 28) {\n        var option = document.createElement(\"option\");\n        option.value = \"29\";\n        option.text = \"29\";\n        selectDay.appendChild(option);\n      }\n    } else {\n      // 28 days in Feb\n      if (parseInt(selectDay.value) > 28) {\n        selectDay.value = 28;\n      }\n\n      while (selectDay.options.length > 28) {\n        selectDay.remove(28);\n      }\n    }\n  } else {\n    // 30 days\n    if (parseInt(selectDay.value) > 30) {\n      selectDay.value = 30;\n    }\n\n    if (selectDay.options.length > 30) {\n      selectDay.remove(30);\n    }\n\n    for (var i = selectDay.options.length + 1; i <= 30; ++i) {\n      // add items\n      var option = document.createElement(\"option\");\n      option.value = i;\n      option.text = i;\n      selectDay.appendChild(option);\n    }\n  }\n}\n\nfunction updateSelectableDaysFromYear(selectedYear, id) {\n  var selectDay = document.getElementById(\"day_select_\" + id);\n  var selectMonth = document.getElementById(\"month_select_\" + id);\n\n  if (selectMonth.value === \"2\") {\n    if (selectedYear === \"2020\" || selectedYear === \"2024\" || selectedYear === \"2028\" || selectedYear === \"2032\" || selectedYear === \"2036\" || selectedYear === \"2040\") {\n      // leap year - 29 days in Feb\n      if (parseInt(selectDay.value) > 29) {\n        selectDay.value = 29;\n      }\n\n      while (selectDay.options.length > 29) {\n        // remove items first\n        selectDay.remove(29);\n      }\n\n      if (selectDay.options.length === 28) {\n        var option = document.createElement(\"option\");\n        option.value = \"29\";\n        option.text = \"29\";\n        selectDay.appendChild(option);\n      }\n    } else {\n      // 28 days in Feb\n      if (parseInt(selectDay.value) > 28) {\n        selectDay.value = 28;\n      }\n\n      while (selectDay.options.length > 28) {\n        selectDay.remove(28);\n      }\n    }\n  }\n}\n\nfunction createAcquireButton(tr, id) {\n  var td;\n  tr.appendChild(td = document.createElement(\"td\")); //Create array of options to be added\n\n  var btn = document.createElement('input');\n  btn.type = \"button\";\n  btn.className = \"acquire_button button\";\n  btn.id = \"acquire_button_\" + id;\n  btn.value = \"acquire\";\n\n  btn.onclick = function (_) {\n    executeSuperContract(id);\n  };\n\n  td.appendChild(btn); // if either of these is true then we want the acquire button to be disabled\n\n  if (acquireBtnToBeDisabled1 || acquireBtnToBeDisabled2) {\n    btn.disabled = true;\n  }\n}\n\nfunction addChoices(contractsStack, divId) {\n  var contract2 = contractsStack.pop();\n  var contract1 = contractsStack.pop();\n  createSection(divId);\n  createButton((0, _stringmanipulation.rTrimWhiteSpace)((0, _stringmanipulation.lTrimWhiteSpace)(contract1)), stringToAddToBeginning, stringToAddToEnd, 1, divId);\n  createOrLabel(divId);\n  createButton((0, _stringmanipulation.rTrimWhiteSpace)((0, _stringmanipulation.lTrimWhiteSpace)(contract2)), stringToAddToBeginning, stringToAddToEnd, 2, divId);\n  stringToAddToBeginning = \"\";\n  stringToAddToEnd = \"\";\n}\n\nfunction createContractEntries(contractsArr) {\n  // acquire button should be disabled if either all contracts are expired or all contracts are to be acquired at horizon ie 'get'\n  for (var i = 0; i < contractsArr.length; ++i) {\n    var conString = (0, _stringmanipulation.cleanParens)((0, _stringmanipulation.lTrimWhiteSpace)((0, _stringmanipulation.rTrimWhiteSpace)(contractsArr[i])));\n\n    if (!conString.includes(\"get\")) {\n      // at least one contract is not acquired at its horizon\n      acquireBtnToBeDisabled1 = false;\n    }\n\n    if (!(0, _stringmanipulation.beforeCurrentDate)(getHorizon(conString), \"\")) {\n      // at least one subcontract has not expired yet\n      acquireBtnToBeDisabled2 = false;\n    }\n\n    createContractObject(conString);\n  }\n}\n\nfunction decomposeAnds(contractString) {\n  // keep two stacks: one for combinators and one for closing parenthesis to be added\n  var termArr = contractString.split(\" \"),\n      openingParens = 0,\n      contractString = \"\",\n      parseStack = [],\n      finalContractsArr = [],\n      closingParensStack = [];\n\n  for (var i = 0; i < termArr.length; ++i) {\n    var term = termArr[i];\n\n    if (term === \"and\") {\n      // we have reached the end of a subcontract whenever 'and' is read\n      if (contractString !== \"\") {\n        if (openingParens === 0) {\n          finalContractsArr.push(contractString);\n        } else if (parseStack.length > 0) {\n          finalContractsArr.push(parseStack[parseStack.length - 1] + \" ( \" + contractString + closingParensStack[closingParensStack.length - 1]);\n        } else if (closingParensStack.length > 0) {\n          finalContractsArr.push(contractString + closingParensStack[closingParensStack.length - 1]);\n        } else {\n          finalContractsArr.push(contractString);\n        }\n\n        contractString = \"\";\n      }\n    } else if (term === \")\") {\n      // as soon as closing paren is read we have found a contract\n      --openingParens;\n      var combinatorString = parseStack.pop();\n      var closingParensString = closingParensStack.pop();\n\n      if (contractString !== \"\") {\n        if (combinatorString !== undefined && closingParensString !== undefined) {\n          finalContractsArr.push(combinatorString + \" ( \" + contractString + closingParensString);\n        } else {\n          finalContractsArr.push(contractString);\n        }\n\n        contractString = \"\";\n      }\n    } else if (term === \"(\") {\n      ++openingParens;\n\n      if (contractString !== \"\") {\n        if (parseStack.length > 0) {\n          parseStack.push(parseStack[parseStack.length - 1] + \" ( \" + contractString);\n        } else {\n          parseStack.push(contractString);\n        }\n\n        contractString = \"\";\n      }\n\n      if (termArr[i - 1] !== \"and\" && i !== 0) {\n        if (closingParensStack.length === 0) {\n          closingParensStack.push(\" )\");\n        } else {\n          closingParensStack.push(closingParensStack[closingParensStack.length - 1] + \" )\");\n        }\n      }\n    } else {\n      contractString = contractString === \"\" ? term : contractString + \" \" + term;\n    }\n  } // this happens if there is a balanced or conjunction at the end and the second part still needs to be added\n\n\n  if (contractString !== \"\") {\n    finalContractsArr.push(contractString);\n  }\n\n  return finalContractsArr;\n}\n\nfunction parsesSuccessfullyForSyntax(contractString) {\n  var strArr = contractString.split(\" \");\n\n  for (var i = 0; i < strArr.length; ++i) {\n    var term = strArr[i],\n        prevTerm = strArr[i - 1],\n        nextTerm = strArr[i + 1];\n\n    switch (term) {\n      case \"zero\":\n        if (i < strArr.length - 1 && nextTerm !== \"and\" && nextTerm !== \"or\" && nextTerm !== \")\") {\n          document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": \" + term;\n          return false;\n        }\n\n        break;\n\n      case \"one\":\n        if (i < strArr.length - 1 && nextTerm !== \"and\" && nextTerm !== \"or\" && nextTerm !== \")\") {\n          document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": \" + term;\n          return false;\n        }\n\n        break;\n\n      case \"and\":\n        if (i > 0 && prevTerm !== \")\" && prevTerm !== \"one\" && prevTerm !== \"zero\" || nextTerm === \")\" || nextTerm === \"and\" || nextTerm === \"or\" || (0, _stringmanipulation.isDate)((0, _stringmanipulation.lTrimDoubleQuotes)((0, _stringmanipulation.rTrimDoubleQuotes)(nextTerm))) || (0, _generalfunctions.isNumeric)(nextTerm) || observablesArr.includes(nextTerm)) {\n          document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": \" + term;\n          return false;\n        }\n\n        break;\n\n      case \"or\":\n        if (i > 0 && prevTerm !== \")\" && prevTerm !== \"one\" && prevTerm !== \"zero\" || nextTerm === \")\" || nextTerm === \"and\" || nextTerm === \"or\" || (0, _stringmanipulation.isDate)((0, _stringmanipulation.lTrimDoubleQuotes)((0, _stringmanipulation.rTrimDoubleQuotes)(nextTerm))) || (0, _generalfunctions.isNumeric)(nextTerm) || observablesArr.includes(nextTerm)) {\n          document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": \" + term;\n          return false;\n        }\n\n        break;\n\n      case \"truncate\":\n        if (i > strArr.length - 3 || i < strArr.length - 1 && !(0, _stringmanipulation.isDate)((0, _stringmanipulation.lTrimDoubleQuotes)((0, _stringmanipulation.rTrimDoubleQuotes)(nextTerm)))) {\n          document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": truncate should be followed by a date in the following pattern: 'dd/mm/yyyy hh:mm:ss'.\";\n          return false;\n        }\n\n        break;\n\n      case \"get\":\n        if (i < strArr.length - 1 && nextTerm !== \"(\") {\n          document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": get should be followed by opening parenthesis.\";\n          return false;\n        }\n\n        break;\n\n      case \"scaleK\":\n        if (i > strArr.length - 3 || i < strArr.length - 1 && !(0, _generalfunctions.isNumeric)(nextTerm) && !observablesArr.includes(nextTerm)) {\n          document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": scaleK should be followed by an integer or an observable.\";\n          return false;\n        }\n\n        break;\n\n      case \"give\":\n        if (i === strArr.length - 1 || i < strArr.length - 1 && nextTerm !== \"(\") {\n          document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": give should be followed by opening parenthesis.\";\n          return false;\n        }\n\n        break;\n\n      case \"(\":\n        if (i > strArr.length - 3 || prevTerm === \"one\" || prevTerm === \"zero\" || prevTerm === \")\" || prevTerm === \"scaleK\" || prevTerm === \"truncate\" || nextTerm === \"and\" || nextTerm === \"or\" || nextTerm === \")\" || (0, _stringmanipulation.isDate)((0, _stringmanipulation.lTrimDoubleQuotes)((0, _stringmanipulation.rTrimDoubleQuotes)(nextTerm))) || (0, _generalfunctions.isNumeric)(nextTerm) || observablesArr.includes(nextTerm)) {\n          document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": \" + term;\n          return false;\n        }\n\n        break;\n\n      case \")\":\n        if (i > 0 && prevTerm !== \")\" && prevTerm !== \"one\" && prevTerm !== \"zero\" || i < 2 || i < strArr.length - 1 && nextTerm !== \")\" && nextTerm !== \"and\" && nextTerm !== \"or\") {\n          document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": \" + term;\n          return false;\n        }\n\n        break;\n\n      default:\n        if ((0, _generalfunctions.isNumeric)(term) || observablesArr.includes(term)) {\n          if (i === 0 || i === strArr.length - 1 || prevTerm !== \"scaleK\" || nextTerm !== \"(\") {\n            document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": a float/observable value should be after scaleK and the float/observable should be followed by parenthesis.\";\n            return false;\n          }\n        } else if ((0, _stringmanipulation.isDate)((0, _stringmanipulation.lTrimDoubleQuotes)((0, _stringmanipulation.rTrimDoubleQuotes)(term)))) {\n          if (i === 0 || i === strArr.length - 1 || prevTerm !== \"truncate\" || nextTerm !== \"(\") {\n            document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": a date should be after truncate and the date should be followed by parenthesis.\";\n            return false;\n          }\n        } else {\n          document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": \" + term;\n          return false;\n        }\n\n    }\n  }\n\n  return true;\n}\n\nfunction createContractObject(inputString) {\n  // this is a lowest-level subcontract, ie. it contains only 1 occurrence zero/one\n  var giveOccurrences = 0,\n      getOccurrences = 0,\n      getHasAppeared = false,\n      // to make sure gets are followed by a truncate\n  amount = \"1\",\n      contractObsArr = [];\n\n  if (inputString.includes(\" zero \")) {\n    amount = \"0\";\n  }\n\n  var horizonDate = getHorizon(inputString);\n  var newStr = inputString.replace(/[()]/g, ''); // removing parenthesis\n\n  var strArr = newStr.split(\" \");\n\n  for (var i = 0; i < strArr.length; ++i) {\n    var str = strArr[i];\n\n    if (str === \"give\") {\n      ++giveOccurrences;\n    } else if (str === \"scaleK\" && amount !== \"0\") {\n      if ((0, _generalfunctions.isNumeric)(strArr[i + 1])) {\n        amount = (parseFloat(amount) * parseFloat(strArr[i + 1])).toString();\n        ++i;\n      } else if (observablesArr.includes(strArr[i + 1])) {\n        contractObsArr.push(strArr[i + 1]);\n        ++i;\n      }\n    } else if (str === \"get\") {\n      getHasAppeared = true;\n      ++getOccurrences;\n    } else if (str === \"truncate\") {\n      // to make sure gets are followed by a truncate\n      getHasAppeared = false;\n    }\n  }\n\n  if (getHasAppeared) {\n    document.getElementById(\"transaction_status\").innerHTML = \"Syntax error: get must be followed by truncate.\";\n    addSuperContractRow();\n    return;\n  }\n\n  var recipient = giveOccurrences % 2 === 0 ? 0 : 1,\n      acquireAtHorizon = getOccurrences % 2 === 0 ? \"no\" : \"yes\",\n      contractString = (0, _contract.createNewContractString)(amount, contractObsArr, recipient, horizonDate, acquireAtHorizon);\n  var contract = new _contract.Contract(numberOfContracts.toString() + \".\" + numberOfSubContracts.toString(), amount, contractObsArr, recipient, contractString, (0, _contract.translateContract)(recipient, amount, contractObsArr, horizonDate, acquireAtHorizon), horizonDate, acquireAtHorizon, \"waiting to be executed\");\n  var balanceLabel = recipient === 1 ? document.getElementById(\"holder_balance_p\").innerHTML.split() : document.getElementById(\"counter_party_balance_p\").innerHTML;\n  var regex = new RegExp(\"(Balance:\\\\s)(.+)(ETH)\");\n  var matchObj = regex.exec(balanceLabel); // cannot check Rust balance as this will cause a delay. However, this is fine since label balance gets updated directly after transfer\n\n  var balance = parseFloat(matchObj[2]); // uncomment this for testing, comment below - > there will be no super contract row\n  // createTableRow(contract); // TESTING\n\n  if (balance >= parseFloat(amount) && enoughBalanceForCapacity(contract, balance)) {\n    createTableRow(contract);\n    ++numberOfSubContracts;\n\n    if (horizonDate !== \"infinite\" && (0, _stringmanipulation.beforeCurrentDate)(contract.horizonDate, \"\")) {\n      // add expired label\n      document.getElementById(\"td_status_\" + contract.id).innerHTML = \"expired\";\n    } else {\n      addToSuperContracts(superContractsMap, numberOfContracts.toString(), contract); // contract is only added to pending contracts map if it is still valid\n\n      document.getElementById(\"td_status_\" + contract.id).innerHTML = \"waiting to be executed\";\n    }\n\n    addSuperContractRow();\n  } else {\n    document.getElementById(\"transaction_status\").innerHTML = \"Insufficient funds. The sending party does not have enough Ether in their account. Please deposit before adding additional contracts.\";\n    addSuperContractRow();\n  }\n}\n\nfunction addSuperContractRow() {\n  --contractsBeingDecomposed;\n\n  if (!document.getElementById(\"button_choices_container\").hasChildNodes() && contractsBeingDecomposed === 0 && numberOfSubContracts !== 0) {\n    // now we can add the super contract row\n    var tr = document.getElementById(\"my_table\").insertRow(1);\n    tr.className = \"super_contract_row\";\n    var td;\n    tr.appendChild(td = document.createElement(\"td\"));\n    var superContractKey = numberOfContracts.toString();\n    td.innerHTML = superContractKey;\n\n    for (var i = 0; i < 5; ++i) {\n      tr.appendChild(td = document.createElement(\"td\"));\n    }\n\n    createValuationSelect(tr, superContractKey);\n    createAcquireButton(tr, superContractKey);\n    ++numberOfContracts;\n    numberOfSubContracts = 0;\n  }\n}\n\nfunction addToSuperContracts(map, superKey, contract) {\n  if (map.has(superKey)) {\n    var _iteratorNormalCompletion9 = true;\n    var _didIteratorError9 = false;\n    var _iteratorError9 = undefined;\n\n    try {\n      for (var _iterator9 = map[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n        var _step9$value = _slicedToArray(_step9.value, 2),\n            superContractId = _step9$value[0],\n            contractsSet = _step9$value[1];\n\n        if (superContractId === superKey) {\n          var newSet = contractsSet;\n          newSet.add(contract);\n          map.set(superContractId, newSet);\n          break;\n        }\n      }\n    } catch (err) {\n      _didIteratorError9 = true;\n      _iteratorError9 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion9 && _iterator9[\"return\"] != null) {\n          _iterator9[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError9) {\n          throw _iteratorError9;\n        }\n      }\n    }\n  } else {\n    var newSet = new Set();\n    newSet.add(contract);\n    map.set(superKey, newSet);\n  }\n\n  console.log(\"SupercontractsMap after adding a contract\");\n  console.log(map);\n}\n\nfunction deleteFromSuperContracts(map, superKey, contract) {\n  var _iteratorNormalCompletion10 = true;\n  var _didIteratorError10 = false;\n  var _iteratorError10 = undefined;\n\n  try {\n    for (var _iterator10 = map[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n      var _step10$value = _slicedToArray(_step10.value, 2),\n          superContractId = _step10$value[0],\n          contractsSet = _step10$value[1];\n\n      if (superContractId === superKey) {\n        var newSet = contractsSet;\n        newSet[\"delete\"](contract);\n        map.set(superContractId, newSet);\n\n        if (newSet.size === 0) {\n          map[\"delete\"](superContractId);\n          document.getElementById(\"acquire_button_\" + superContractId).disabled = true;\n        }\n\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError10 = true;\n    _iteratorError10 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion10 && _iterator10[\"return\"] != null) {\n        _iterator10[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError10) {\n        throw _iteratorError10;\n      }\n    }\n  }\n\n  console.log(\"SupercontractsMap after deleting a contract\");\n  console.log(map);\n}\n\nfunction executeSuperContract(superKey) {\n  var _iteratorNormalCompletion11 = true;\n  var _didIteratorError11 = false;\n  var _iteratorError11 = undefined;\n\n  try {\n    for (var _iterator11 = superContractsMap[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n      var _step11$value = _slicedToArray(_step11.value, 2),\n          superContractId = _step11$value[0],\n          contractsSet = _step11$value[1];\n\n      if (superContractId === superKey) {\n        var _iteratorNormalCompletion12 = true;\n        var _didIteratorError12 = false;\n        var _iteratorError12 = undefined;\n\n        try {\n          for (var _iterator12 = contractsSet[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n            var contract = _step12.value;\n\n            if (contract.toBeExecutedAtHorizon !== \"yes\") {\n              executeSingleContract(contract);\n            }\n          }\n        } catch (err) {\n          _didIteratorError12 = true;\n          _iteratorError12 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion12 && _iterator12[\"return\"] != null) {\n              _iterator12[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError12) {\n              throw _iteratorError12;\n            }\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError11 = true;\n    _iteratorError11 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion11 && _iterator11[\"return\"] != null) {\n        _iterator11[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError11) {\n        throw _iteratorError11;\n      }\n    }\n  }\n}\n\nfunction executeSingleContract(contract) {\n  var obsArr = contract.observablesArr;\n\n  if (obsArr.length > 0) {\n    for (var i = 0; i < obsArr.length; ++i) {\n      if (obsArr[i] === \"libor3m\") {\n        // rounding because Parity can only handle integers\n        contract.amount = Math.round(parseFloat(contract.amount) * (0, _oracles.getOracleByAddress)(agreedOracleAddress).getLiborSpotRate()).toString();\n      } else if (obsArr[i] === \"tempInLondon\") {\n        contract.amount = Math.round(parseFloat(contract.amount) * (0, _oracles.getOracleByAddress)(agreedOracleAddress).getTempInLondon()).toString();\n      }\n    }\n  }\n\n  (0, _deploy.holderAddress)().then(function (holderAddress) {\n    (0, _deploy.counterPartyAddress)().then(function (counterPartyAddress) {\n      if (contract.recipient == 0) {\n        // owner receives\n        createMoveFile(counterPartyAddress, holderAddress, parseFloat(contract.amount));\n        callTransferFunction(contract, counterPartyAddress, holderAddress);\n      } else {\n        // counter party receives\n        createMoveFile(holderAddress, counterPartyAddress, parseFloat(contract.amount));\n        callTransferFunction(contract, holderAddress, counterPartyAddress);\n      }\n\n      if (document.getElementById(\"td_status_\" + contract.id).innerHTML !== \"successful\") {\n        document.getElementById(\"td_status_\" + contract.id).innerHTML = \"not accepted by user\";\n      }\n    });\n  });\n}\n\nfunction callTransferFunction(contract, fromAddress, toAddress) {\n  (0, _deploy.balanceOfAddress)(fromAddress).then(function (balance) {\n    if (balance >= parseFloat(contract.amount)) {\n      (0, _deploy.transfer)(fromAddress, toAddress, parseFloat(contract.amount)).then(function (transferTxHash) {\n        // do not need to watch for transfer event as we do checks here.. watching the event may cause delays\n        (0, _deploy.waitForReceipt)(transferTxHash).then(function (_) {\n          console.log(fromAddress + \" has transferred \" + contract.amount + \" Ether to \" + toAddress);\n          document.getElementById(\"td_status_\" + contract.id).innerHTML = \"successful\";\n          deleteFromSuperContracts(superContractsMap, contract.id.split(\".\")[0], contract);\n          retrieveBalances();\n        });\n      });\n    } else {\n      document.getElementById(\"td_status_\" + contract.id).innerHTML = \"insufficient funds\";\n\n      if ((0, _stringmanipulation.beforeCurrentDate)(contract.horizonDate, \"\")) {\n        document.getElementById(\"td_status_\" + contract.id).innerHTML = \"expired\";\n        deleteFromSuperContracts(superContractsMap, contract.id.split(\".\")[0], contract);\n      }\n    }\n  });\n}\n\nfunction enoughBalanceForCapacity(contract, balance) {\n  // compute sum of transactions in Map\n  var sum = 0;\n  var _iteratorNormalCompletion13 = true;\n  var _didIteratorError13 = false;\n  var _iteratorError13 = undefined;\n\n  try {\n    for (var _iterator13 = superContractsMap[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n      var _step13$value = _slicedToArray(_step13.value, 2),\n          superContractId = _step13$value[0],\n          contractsSet = _step13$value[1];\n\n      var _iteratorNormalCompletion14 = true;\n      var _didIteratorError14 = false;\n      var _iteratorError14 = undefined;\n\n      try {\n        for (var _iterator14 = contractsSet[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n          var contractInMap = _step14.value;\n          sum += parseFloat(contractInMap.amount);\n        }\n      } catch (err) {\n        _didIteratorError14 = true;\n        _iteratorError14 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion14 && _iterator14[\"return\"] != null) {\n            _iterator14[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError14) {\n            throw _iteratorError14;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError13 = true;\n    _iteratorError13 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion13 && _iterator13[\"return\"] != null) {\n        _iterator13[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError13) {\n        throw _iteratorError13;\n      }\n    }\n  }\n\n  if (contract.recipient === 0) {\n    // owner is recipient - if sum is +ve then that means holder is receiving and counter party paying\n    sum = -sum; // negate the sum for the counterparty\n  } // subtract final sum + new tx amount from balance and check if >= 0\n\n\n  if (balance - (sum + parseFloat(contract.amount)) >= 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction createMoveFile(sender_address, recipient_address, amount) {\n  var textToWrite = \"//! no-execute\\n\" + \"import 0x0.LibraAccount;\\n\" + \"import 0x0.LibraCoin;\\n \\n\" + \"main(payee: address) {\\n\" + \"\\t let coin: R#LibraCoin.T;\\n\" + \"\\t let account_exists: bool;\\n\" + \"\\t let recipient: address;\\n\" + \"\\t let sender: address;\\n\" + \"\\t sender = \" + sender_address + \";\\n\" + \"\\t recipient = \" + recipient_address + \";\\n\" + \"\\t coin = LibraAccount.withdraw_from_sender(\" + amount + \");\\n\" + \"\\t account_exists = LibraAccount.exists(copy(recipient));\\n\" + \"\\t if (!move(account_exists)) {\\n\" + \"\\t \\t create_account(copy(recipient));\\n\" + \"\\t }\\n\" + \"\\t LibraAccount.deposit(move(recipient), move(coin));\\n\" + \"\\t return;\\n\" + \"}\";\n  var textFileAsBlob = new Blob([textToWrite], {\n    type: 'text/plain'\n  });\n  var downloadLink = document.createElement(\"a\");\n  downloadLink.download = \"script.mvir\";\n  downloadLink.innerHTML = \"Download Move File\";\n\n  if (window.webkitURL != null) {\n    // Chrome allows the link to be clicked\n    // without actually adding it to the DOM.\n    downloadLink.href = window.webkitURL.createObjectURL(textFileAsBlob);\n  } else {\n    // Firefox requires the link to be added to the DOM\n    // before it can be clicked.\n    downloadLink.href = window.URL.createObjectURL(textFileAsBlob);\n    downloadLink.onclick = destroyClickedElement;\n    downloadLink.style.display = \"none\";\n    document.body.appendChild(downloadLink);\n  } //downloadLink.click(); // commented for testing purposes\n\n\n  console.log(\"Created and downloaded .mvir file.\");\n}\n\nfunction retrieveBalances() {\n  (0, _deploy.holderBalance)().then(function (hBalance) {\n    document.getElementById(\"holder_balance_p\").innerHTML = \"Balance: \" + hBalance + \"ETH\";\n    (0, _deploy.counterPartyBalance)().then(function (cBalance) {\n      document.getElementById(\"counter_party_balance_p\").innerHTML = \"Balance: \" + cBalance + \"ETH\";\n    });\n  });\n}\n\nfunction createTableRow(contract) {\n  var table = document.getElementById(\"my_table\");\n  var tr = table.insertRow(1);\n  tr.className = \"standard_row\";\n  var td;\n  tr.appendChild(td = document.createElement(\"td\"));\n  td.innerHTML = contract.id;\n  tr.appendChild(td = document.createElement(\"td\"));\n  td.innerHTML = (0, _stringmanipulation.changeDateFormatBack)(contract.contractString);\n  tr.appendChild(td = document.createElement(\"td\"));\n  td.innerHTML = (0, _stringmanipulation.changeDateFormatBack)(contract.meaningOfContractString);\n  tr.appendChild(td = document.createElement(\"td\"));\n  td.innerHTML = (0, _stringmanipulation.changeDateFormatBack)(contract.horizonDate);\n  tr.appendChild(td = document.createElement(\"td\"));\n  td.innerHTML = contract.toBeExecutedAtHorizon;\n  tr.appendChild(td = document.createElement(\"td\"));\n  td.id = \"td_status_\" + contract.id;\n  td.innerHTML = contract.status;\n}\n\nfunction ownsRights(contractOwnerInt) {\n  var ownerAddress = contractOwnerInt === 0 ? document.getElementById(\"holder_address\").value : document.getElementById(\"counter_party_address\").value;\n\n  if ((0, _deploy.getSelectedMetaMaskAccount)().toUpperCase() === ownerAddress.toUpperCase()) {\n    return true;\n  } else {\n    document.getElementById(\"transaction_status\").innerHTML = \"Please change the currently selected MetaMask account to the owner of the contract you are trying to make a choice on.\";\n    return false;\n  }\n}\n\nfunction createButton(contractString, beginningString, endString, buttonId, divId) {\n  var occ = (0, _generalfunctions.occurrences)(beginningString, \"give \", false);\n  var contractOwnerInt = occ % 2 === 0 ? 0 : 1;\n  var button = document.createElement(\"button\");\n  button.id = \"choices_button_\" + buttonId;\n  button.className = \"choices_button\";\n  button.innerHTML = (0, _stringmanipulation.cleanParens)(contractString);\n  var finalContractString = beginningString + button.innerHTML + endString; // 2. Append somewhere\n\n  var container = document.getElementById(\"section_\" + divId.toString());\n  container.appendChild(button); // 3. Add event handler\n\n  button.addEventListener(\"click\", function () {\n    if (ownsRights(contractOwnerInt)) {\n      // party must own the rights of the contract to make choice\n      removeChildren(\"section_\" + divId);\n      container.remove();\n      processContract(finalContractString, false);\n    }\n  });\n}\n\nfunction createSection(divId) {\n  var div = document.createElement(\"div\");\n  div.id = \"section_\" + divId.toString();\n  var para = document.createElement(\"p\");\n  var node = document.createTextNode(\"Contract choice:\");\n  para.appendChild(node);\n  div.appendChild(para);\n  var bottomContainer = document.getElementById(\"button_choices_container\");\n  bottomContainer.appendChild(div);\n}\n\nfunction createOrLabel(divId) {\n  var para = document.createElement(\"p\");\n  para.className = \"p_small\";\n  var node = document.createTextNode(\"OR\");\n  para.appendChild(node);\n  var container = document.getElementById(\"section_\" + divId.toString());\n  container.appendChild(para);\n}\n\nfunction removeChildren(containerString) {\n  var e = document.getElementById(containerString);\n  var child = e.lastElementChild;\n\n  while (child) {\n    e.removeChild(child);\n    child = e.lastElementChild;\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.mjs"
      ],
      "names": [
        "numberOfSubContracts",
        "numberOfContracts",
        "superContractsMap",
        "Map",
        "agreedOracleAddress",
        "account1Deposited",
        "account2Deposited",
        "definitionsMap",
        "observablesArr",
        "uniqueID",
        "acquireBtnToBeDisabled1",
        "acquireBtnToBeDisabled2",
        "contractsBeingDecomposed",
        "stringToAddToBeginning",
        "stringToAddToEnd",
        "window",
        "addEventListener",
        "addDepositSelectOptions",
        "update",
        "runClock",
        "res",
        "evaluate",
        "$select",
        "$",
        "i",
        "append",
        "val",
        "html",
        "global",
        "addDefinition",
        "inputString",
        "document",
        "getElementById",
        "innerHTML",
        "replace",
        "matches",
        "match",
        "Error",
        "strArr",
        "split",
        "part1",
        "part2",
        "part1Arr",
        "part2Arr",
        "length",
        "term",
        "includes",
        "nonExistingTerm",
        "has",
        "set",
        "key",
        "value",
        "valueArr",
        "e",
        "console",
        "log",
        "COMPARISONOPERATOR",
        "replaceUserDefinitions",
        "mapOfDefinitions",
        "strSplit",
        "keys",
        "Array",
        "from",
        "intersection",
        "filter",
        "regex",
        "RegExp",
        "matchObj1",
        "exec",
        "get",
        "lhs",
        "newValue",
        "endPartArr",
        "lhsArr",
        "j",
        "matchObj2",
        "splice",
        "indexOf",
        "lastIndexOf",
        "join",
        "correctConstruct",
        "obtainSubContractString",
        "array",
        "indexToStartFrom",
        "stringToReturn",
        "openingParens",
        "cleanUpBeforeDecomp",
        "ifMatches",
        "evaluateConditionals",
        "getDefinitionsText",
        "extractAllSubHorizons",
        "contract1",
        "contract2",
        "comparisonOperator",
        "setOfDates",
        "Set",
        "maxHorizon",
        "getHorizon",
        "add",
        "contract1HorArr",
        "contract2HorArr",
        "currentHor",
        "superContractId",
        "contractsSet",
        "contract",
        "horizonDate",
        "toBeExecutedAtHorizon",
        "executeSingleContract",
        "id",
        "deleteFromSuperContracts",
        "now",
        "Date",
        "timeToNextTick",
        "getSeconds",
        "getMilliseconds",
        "setTimeout",
        "callDepositFunction",
        "addr",
        "depositAmount",
        "getSelectedDeposit",
        "senderAddress",
        "toUpperCase",
        "then",
        "holderDepositTxHash",
        "_",
        "disabled",
        "retrieveBalances",
        "createContractFunction",
        "localHolderAddress",
        "localCounterPartyAddress",
        "undefined",
        "instantiationTxHash",
        "instantiationReceipt",
        "contractAddress",
        "getSelectedOracle",
        "getInputString",
        "termArr",
        "ifsToBeMatched",
        "closingParens",
        "contractString",
        "ifCondition",
        "ifStack",
        "noOfOpeningParensStack",
        "firstPartStack",
        "compOpStack",
        "insideCondition",
        "nextTerm",
        "prevTerm",
        "toString",
        "push",
        "bool1",
        "bool2",
        "firstPart",
        "pop",
        "compOp",
        "cons",
        "alt",
        "stringToEval",
        "bool",
        "findConsequentResult1",
        "lengthOfCons",
        "findConsequentResult2",
        "lengthOfAlt",
        "slicedCond",
        "slice",
        "lastIndex",
        "slicedCompOp1",
        "slicedCompOp2",
        "slicedCompOp3",
        "secondPart",
        "ifConditionVal",
        "horizon1",
        "horizon2",
        "value1",
        "getValue",
        "value2",
        "horizonsSet",
        "hor",
        "string",
        "comeAcrossTruncate",
        "truncDate",
        "oscs",
        "c",
        "prevHorizon",
        "decompose",
        "contractParsed",
        "parseStack",
        "contractsStack",
        "connectiveStack",
        "closingParensStack",
        "mostBalancedConj",
        "mostBalancedConjBalance",
        "conjWaitingToBeMatched",
        "combinatorString",
        "closingParensString",
        "con",
        "horizonToCheck",
        "currentString",
        "combinatorStack",
        "valuesStack",
        "currentVal",
        "horizonsStack",
        "getLowestLevelContractValue",
        "str",
        "subContractString",
        "tempValue",
        "arr",
        "Math",
        "max",
        "parseFloat",
        "horizon",
        "round",
        "getLiborSpotRate",
        "getTempInLondon",
        "processContract",
        "initialDecomposition",
        "removeChildren",
        "parsesSuccessfullyForSyntax",
        "orMatches",
        "decomposedResult",
        "addChoices",
        "contractsArr",
        "decomposeAnds",
        "createContractEntries",
        "createValuationSelect",
        "tr",
        "td",
        "appendChild",
        "createElement",
        "div",
        "className",
        "date",
        "d",
        "getDate",
        "m",
        "getMonth",
        "y",
        "getFullYear",
        "selectDay",
        "onchange",
        "updateValuationValue",
        "option",
        "text",
        "selectMonth",
        "selectedMonth",
        "updateSelectableDaysFromMonth",
        "selectYear",
        "selectedYear",
        "updateSelectableDaysFromYear",
        "valueLabel",
        "day",
        "month",
        "year",
        "getAllSubcontracts",
        "superKey",
        "finalContractString",
        "options",
        "parseInt",
        "remove",
        "createAcquireButton",
        "btn",
        "type",
        "onclick",
        "executeSuperContract",
        "divId",
        "createSection",
        "createButton",
        "createOrLabel",
        "conString",
        "createContractObject",
        "finalContractsArr",
        "giveOccurrences",
        "getOccurrences",
        "getHasAppeared",
        "amount",
        "contractObsArr",
        "newStr",
        "addSuperContractRow",
        "recipient",
        "acquireAtHorizon",
        "Contract",
        "balanceLabel",
        "matchObj",
        "balance",
        "enoughBalanceForCapacity",
        "createTableRow",
        "addToSuperContracts",
        "hasChildNodes",
        "insertRow",
        "superContractKey",
        "map",
        "newSet",
        "size",
        "obsArr",
        "holderAddress",
        "counterPartyAddress",
        "createMoveFile",
        "callTransferFunction",
        "fromAddress",
        "toAddress",
        "transferTxHash",
        "sum",
        "contractInMap",
        "sender_address",
        "recipient_address",
        "textToWrite",
        "textFileAsBlob",
        "Blob",
        "downloadLink",
        "download",
        "webkitURL",
        "href",
        "createObjectURL",
        "URL",
        "destroyClickedElement",
        "style",
        "display",
        "body",
        "hBalance",
        "cBalance",
        "table",
        "meaningOfContractString",
        "status",
        "ownsRights",
        "contractOwnerInt",
        "ownerAddress",
        "beginningString",
        "endString",
        "buttonId",
        "occ",
        "button",
        "container",
        "para",
        "node",
        "createTextNode",
        "bottomContainer",
        "containerString",
        "child",
        "lastElementChild",
        "removeChild"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js",
      "sourcesContent": [
        "/**\n * @author Noah-Vincenz Noeh <noah-vincenz.noeh18@imperial.ac.uk>\n */\n\n/* jshint esversion: 6 */\n\nimport {\n  cleanParens,\n  addSpacing,\n  addParens,\n  openingParensAmount,\n  closingParensAmount,\n  lTrimWhiteSpace,\n  rTrimWhiteSpace,\n  lTrimParen,\n  rTrimParen,\n  lTrimDoubleQuotes,\n  rTrimDoubleQuotes,\n  lTrimBrace,\n  rTrimBrace,\n  changeDateFormat,\n  changeDateFormatBack,\n  trimSemiColon,\n  padNumber,\n  findNextConnective,\n  findConsequent,\n  isDate,\n  sameDayAsCurrentDate,\n  greaterDate,\n  equalDates,\n  beforeCurrentDate,\n  computeDateString,\n  concatenate\n} from \"./stringmanipulation.mjs\";\n\nimport {\n  Contract,\n  translateContract,\n  createNewContractString\n} from \"./contract.mjs\";\n\nimport {\n  depositCollateral,\n  getSelectedMetaMaskAccount,\n  getSelectedNetwork,\n  holderBalance,\n  counterPartyBalance,\n  holderAddress,\n  counterPartyAddress,\n  balanceOfAddress,\n  transfer,\n  waitForReceipt,\n  setDefaultAccount,\n  setSmartContractInstance,\n  instantiateNew,\n  watchTransferEvent\n} from \"./deploy/deploy.mjs\"\n\nimport {\n  Oracle,\n  createOracles,\n  getOracleByAddress\n} from \"./oracles.mjs\";\n\nimport {\n  sleep,\n  occurrences,\n  isNumeric,\n  printStack\n} from \"./generalfunctions.mjs\"\n\nvar numberOfSubContracts = 0,\n    numberOfContracts = 0,\n    superContractsMap = new Map(), // map from superContract id to set of contract objects contained within super contract\n    agreedOracleAddress,\n    account1Deposited = false,\n    account2Deposited = false,\n    definitionsMap = new Map(),\n    observablesArr = [\"libor3m\", \"tempInLondon\"],\n    uniqueID = 0, // id to keep track of divs for contract choices (and remove these)\n    acquireBtnToBeDisabled1 = true,\n    acquireBtnToBeDisabled2 = true,\n    contractsBeingDecomposed = 1,\n    stringToAddToBeginning = \"\",\n    stringToAddToEnd = \"\";\n\nwindow.addEventListener('load', function() {  // commented for testing purposes\n    /*\n    document.getElementById(\"deposit_button1\").disabled = true;\n    document.getElementById(\"deposit_button2\").disabled = true;\n    document.getElementById(\"make_transaction_button\").disabled = true;\n    document.getElementById(\"select_deposit\").disabled = true;\n    document.getElementById(\"transaction_input_textarea\").disabled = true;\n    */\n    addDepositSelectOptions();\n    createOracles();\n    // start timer\n    update();\n    runClock();\n    var res = evaluate(\"( truncate \\\"23/12/2017-23:33:33\\\" ( one ) and truncate \\\"26/12/2017-23:33:33\\\" ( one ) )\", \">\", \"truncate \\\"24/12/2017-23:33:33\\\" ( one )\");\n});\n\nfunction addDepositSelectOptions() {\n    var $select = $(\".custom_select\");\n    for (var i = 1; i <= 100; ++i) {\n        $select.append($('<option></option>').val(i).html(i));\n    }\n}\n\nglobal.addDefinition = function(inputString) {\n    try {\n        document.getElementById(\"add_definitions_status\").innerHTML = \"\";\n        // remove multiple whitespaces\n        inputString = inputString.replace(/  +/gm, \" \");\n        // pattern matching for semantics\n        var matches = inputString.match(/^.+\\s?=\\s?.+;$/);\n        if (inputString === \"\" || matches === null) {\n            document.getElementById(\"add_definitions_status\").innerHTML = \"Please provide a valid definition.\";\n            throw new Error(\"Please provide a valid definition.\");\n        }\n        document.getElementById(\"input_added_textarea\").innerHTML = \"\";\n        var strArr = inputString.split(\"=\"),\n            part1 = rTrimWhiteSpace(strArr[0]),\n            part2 = trimSemiColon(lTrimWhiteSpace(strArr[1])),\n            part1Arr = part1.split(\" \"),\n            part2Arr = part2.split(\" \");\n\n        // check semantics of second part\n        for (var i = 0; i < part2Arr.length; ++i) {\n            var term = part2Arr[i];\n            if (!part1.includes(term) && nonExistingTerm(term) && !definitionsMap.has(term)) {\n                document.getElementById(\"add_definitions_status\").innerHTML = \"Please provide a valid definition.\";\n                throw new Error(\"Please provide a valid definition.\");\n            }\n        }\n        // or just use first word - add checking and then tell user that first term must be definition\n        // need to find word in lhs string thats not in rhs and not one of the existing terms & add definition to map\n        for (var i = 0; i < part1Arr.length; ++i) {\n            var term = part1Arr[i];\n            if (!part2.includes(term) && nonExistingTerm(term)) {\n                definitionsMap.set(term, part1 + \"=\" + part2);\n            }\n        }\n        for (var [key, value] of definitionsMap) { // need to do this in order to allow overwriting of definitions\n            var valueArr = value.split(\"=\");\n            document.getElementById(\"input_added_textarea\").innerHTML += (key + \": \" + valueArr[0] + \" = \" + valueArr[1] + \"\\n\");\n        }\n    } catch(e) {\n        console.log(\"Invalid definition provided.\")\n        return;\n    }\n};\n\nexport function nonExistingTerm(term) {\n    if (term !== \"give\" && term !== \"truncate\" && term !== \"get\" && term !== \"one\"\n    && term !== \"zero\" && term !== \"scaleK\" && term !== \"one\" && !COMPARISONOPERATOR(term)\n    && term !== \"&&\" && term !== \"if\" && term !== \"||\" && !isNumeric(term) && term !== \"(\" && term !== \")\"\n    && !isDate(lTrimDoubleQuotes(rTrimDoubleQuotes(term))) && term !== \"else\" && term !== \"}\"\n    && term !== \"{\" && term !== \"and\" && term !== \"or\" && !observablesArr.includes(term)) {\n        return true;\n    }\n    return false;\n}\n\nexport function replaceUserDefinitions(inputString, mapOfDefinitions) {\n    var strSplit = inputString.split(\" \"),\n        keys = Array.from(mapOfDefinitions.keys()),\n        intersection = strSplit.filter(value => keys.includes(value));     // check if any definition appears in inputString\n\n    while(intersection.length !== 0) {\n        for(var i = 0; i < intersection.length; ++i) {\n            // check for if any definition appears in inputString\n            var regex = new RegExp(\"(.*)(\" + intersection[i] + \")(.*)\"),\n                matchObj1 = regex.exec(inputString), // find matching part in string\n                value = mapOfDefinitions.get(intersection[i]),\n                valueArr = value.split(\"=\"),\n                lhs = valueArr[0],\n                newValue = valueArr[1],\n                endPartArr = lTrimWhiteSpace(matchObj1[2] + matchObj1[3]).split(\" \"),\n                lhsArr = lhs.split(\" \"); // do not need to trim by whitespace here as we add no whitespace when adding definitions\n\n            for (var j = 1; j < lhsArr.length; ++j) { // skipping first index as this is definition\n                regex = new RegExp(\"(.+\\\\s)?(\" + lhsArr[j] + \")(\\\\s.+)?\");\n                var matchObj2 = regex.exec(newValue);\n                newValue = matchObj2[1] + endPartArr[j] + matchObj2[3];\n            }\n            endPartArr.splice(0, lhsArr.length);\n\n            if (newValue.indexOf(\"one\") !== newValue.lastIndexOf(\"one\")\n              || newValue.indexOf(\"zero\") !== newValue.lastIndexOf(\"zero\")\n              || ( newValue.includes(\"one\") && newValue.includes(\"zero\") ) ) { // value consists of multiple contracts - add parenthesis\n                inputString = endPartArr.length > 0 ? matchObj1[1] + \" ( \" + newValue + \" ) \" + endPartArr.join(\" \") : matchObj1[1] + \" ( \" + newValue + \")\";\n            } else {\n                // need to add the whitespace as we trimmed it previously\n                inputString = endPartArr.length > 0 ? matchObj1[1] + newValue + \" \" + endPartArr.join(\" \") : matchObj1[1] + newValue;\n            }\n        }\n        strSplit = inputString.split(\" \");\n        intersection = strSplit.filter(value => keys.includes(value));\n    }\n    return inputString;\n}\n\n\nfunction correctConstruct(inputString) {\n    if (inputString === \"\") {\n        document.getElementById(\"transaction_status\").innerHTML = \"Please provide some contract input.\";\n        return false;\n    }\n    if (openingParensAmount(inputString) !== closingParensAmount(inputString)) {\n        document.getElementById(\"transaction_status\").innerHTML = \"The contract is not constructed properly. Parenthesis mismatch.\";\n        return false;\n    }\n    if (!inputString.includes(\"one\") && !inputString.includes(\"zero\")) {\n        document.getElementById(\"transaction_status\").innerHTML = \"The contract is not constructed properly. A contract must include either 'one' or 'zero'.\";\n        return false;\n    }\n    if (inputString.includes(\"get\") && !inputString.includes(\"truncate\")) {\n        document.getElementById(\"transaction_status\").innerHTML = \"The contract is not constructed properly. A contract cannot contain 'get' without 'truncate'.\";\n        return false;\n    }\n    return true;\n}\n\nfunction obtainSubContractString(array, indexToStartFrom) {\n    // returns subcontractString and the number of items in the string\n    var stringToReturn = \"\";\n    if (array[indexToStartFrom] === \"(\") {\n        var openingParens = 1;\n        for (var i = indexToStartFrom + 1; i < array.length; ++i) {\n            // if string starts with opening paren wait until get balanced closing paren\n            var term = array[i];\n            stringToReturn = stringToReturn === \"\" ? term : stringToReturn + \" \" + term;\n            if (term === \"(\") {\n                ++openingParens;\n            } else if (term === \")\") {\n                --openingParens;\n            }\n            if (openingParens === 0) {\n                return [stringToReturn, i + 1 - indexToStartFrom];\n            }\n        }\n    } else {\n        // else wait until reading 'zero' or 'one' OR a number in the case it is called by getValue and has been replaced by a numbe\n        for (var i = indexToStartFrom; i < array.length; ++i) {\n            var term = array[i];\n            stringToReturn = stringToReturn === \"\" ? term : stringToReturn + \" \" + term;\n            if (term === \"one\" || term === \"zero\" || isNumeric(term)) { // ---\n                return [stringToReturn, i + 1 - indexToStartFrom];\n            }\n        }\n    }\n}\n\nexport function cleanUpBeforeDecomp(inputString) {\n    // add dash between date day and time for processing purposes\n    inputString = changeDateFormat(inputString);\n    // replacing own definitions with map values\n    inputString = replaceUserDefinitions(inputString, definitionsMap);\n    if (!correctConstruct(inputString)) {\n        return \"error\";\n    }\n    // remove linebreaks, then multiple whitespaces\n    inputString = inputString.replace(/(\\r\\n|\\n|\\r)/gm, \" \").replace(/  +/gm, \" \");\n    // add spacing before and after parenthesis\n    inputString = lTrimWhiteSpace(rTrimWhiteSpace(addSpacing(inputString)));\n    // evaluate & replace if clauses\n    var ifMatches = inputString.match(/^(.*\\sif\\s.*)|(if\\s.*)$/);\n    if (ifMatches !== null) {\n        inputString = rTrimWhiteSpace(lTrimWhiteSpace(evaluateConditionals(inputString))); // may return \"error\"\n    }\n    return inputString;\n}\n\nglobal.getDefinitionsText = function() {\n    return document.getElementById(\"add_input_textarea\").value;\n}\n\n\nexport function extractAllSubHorizons(contract1, contract2, comparisonOperator) {\n    var setOfDates = new Set();\n    // whenever we reach one or zero we need to find their horizon ie we need to get the horizons of all lowest level subcontracts\n    // simply by finding all truncate occurrences.. this is when a contracts value will change as some contract will expire\n    var maxHorizon = \"\";\n    if (comparisonOperator === \">=\" || comparisonOperator === \"==\") {\n        maxHorizon = getHorizon(contract2); // we only want to check for times that are <= maxHorizon\n    } else {\n        maxHorizon = getHorizon(contract1); // we only want to check for times that are <= maxHorizon\n    }\n    setOfDates.add(maxHorizon);\n    if (comparisonOperator === \"==\") {\n        return setOfDates;\n    }\n    var contract1HorArr = contract1.split(\" \"),\n        contract2HorArr = contract2.split(\" \");\n    for (var i = 0; i < contract1HorArr.length; ++i) {\n        var term = contract1HorArr[i];\n        if (term === \"truncate\") {\n            var currentHor = lTrimDoubleQuotes(rTrimDoubleQuotes(contract1HorArr[i + 1]));\n            if (greaterDate(maxHorizon, currentHor)) {\n                setOfDates.add(currentHor);\n            }\n        }\n    }\n    for (var i = 0; i < contract2HorArr.length; ++i) {\n        var term = contract2HorArr[i];\n        if (term === \"truncate\") {\n            var currentHor = lTrimDoubleQuotes(rTrimDoubleQuotes(contract2HorArr[i + 1]));\n            if (greaterDate(maxHorizon, currentHor)) {\n                setOfDates.add(currentHor);\n            }\n        }\n    }\n    return setOfDates;\n}\n\nfunction update() {\n    // loop through all contracts and check if their time == current time and if so check if get or not\n    // if get: then execute\n    // if not get: then disable acquire button\n    for (var [superContractId, contractsSet] of superContractsMap) {\n        for (let contract of contractsSet) {\n            if (contract.horizonDate !== \"infinite\" && beforeCurrentDate(contract.horizonDate, \"\")) {\n                if (contract.toBeExecutedAtHorizon === \"yes\") { // contract contains 'get' - must be executed now\n                    executeSingleContract(contract);\n                } else { // contract just contains 'truncate' and not 'get'\n                    document.getElementById(\"td_status_\" + contract.id).innerHTML = \"expired\";\n                    deleteFromSuperContracts(superContractsMap, superContractId, contract);\n                }\n            }\n        }\n    }\n}\n\nfunction runClock() { // every 60 seconds we check for expired contracts\n    var now = new Date(),\n        timeToNextTick = (60 - now.getSeconds()) * 1000 - now.getMilliseconds();\n\n    setTimeout(function() {\n        update();\n        runClock();\n    }, timeToNextTick);\n}\n\nglobal.callDepositFunction = function(id) {\n    document.getElementById(\"create_contract_status\").innerHTML = \"\";\n    var addr = \"\";\n    if (id === 1) {\n        addr = \"holder_address\";\n    } else {\n        addr = \"counter_party_address\";\n    }\n    var depositAmount = getSelectedDeposit(),\n        senderAddress = document.getElementById(addr).value;\n\n    if (getSelectedMetaMaskAccount().toUpperCase() === senderAddress.toUpperCase()) {\n        depositCollateral(senderAddress, depositAmount).then(holderDepositTxHash => {\n            waitForReceipt(holderDepositTxHash).then(_ => {\n                console.log(\"Deposit of \" + depositAmount + \" Ether has been added to \" + addr + \" account.\");\n                document.getElementById(\"select_deposit\").disabled = true;\n                if (id === 1) {\n                    account1Deposited = true;\n                } else {\n                    account2Deposited = true;\n                }\n                if (account1Deposited && account2Deposited) {\n                    document.getElementById(\"make_transaction_button\").disabled = false;\n                }\n                retrieveBalances();\n            });\n        });\n    } else {\n        document.getElementById(\"create_contract_status\").innerHTML = \"Please change the currently selected MetaMask account to the one you would like to deposit to.\";\n    }\n}\n\nglobal.createContractFunction = function() {\n    document.getElementById(\"create_contract_status\").innerHTML = \"\";\n    var localHolderAddress = document.getElementById(\"holder_address\").value,\n        localCounterPartyAddress = document.getElementById(\"counter_party_address\").value;\n\n    if (localHolderAddress === localCounterPartyAddress) {\n        document.getElementById(\"create_contract_status\").innerHTML = \"Holder address and counter party address cannot be the same\";\n        return;\n    }\n    // check if getSelectedMetaMaskAccount returns valid result, if not log error telling user to log in\n    if(getSelectedMetaMaskAccount() === undefined) {\n        document.getElementById(\"create_contract_status\").innerHTML = \"Please log into MetaMask.\";\n        return;\n    }\n    // check if the parity dev net is selected\n    if (getSelectedNetwork() !== \"17\") {\n        document.getElementById(\"create_contract_status\").innerHTML = \"Please select the Parity development chain network.\";\n        return;\n    }\n    if (getSelectedMetaMaskAccount().toUpperCase() === localHolderAddress.toUpperCase()) {\n        setDefaultAccount(localHolderAddress);\n        instantiateNew(localHolderAddress, localCounterPartyAddress).then(instantiationTxHash => {\n            waitForReceipt(instantiationTxHash).then(instantiationReceipt => {\n                setSmartContractInstance(instantiationReceipt.contractAddress);\n                document.getElementById(\"create_contract_button\").disabled = true;\n                document.getElementById(\"select_oracle\").disabled = true;\n                document.getElementById(\"holder_address\").disabled = true;\n                document.getElementById(\"counter_party_address\").disabled = true;\n                document.getElementById(\"deposit_button1\").disabled = false;\n                document.getElementById(\"deposit_button2\").disabled = false;\n                document.getElementById(\"select_deposit\").disabled = false;\n                agreedOracleAddress = getSelectedOracle();\n            });\n        });\n    } else {\n        document.getElementById(\"create_contract_status\").innerHTML = \"Please change the currently selected MetaMask account to the contract holder account.\";\n    }\n}\n\nfunction getSelectedDeposit() {\n    return document.getElementById(\"select_deposit\").value;\n}\n\nfunction getSelectedOracle() {\n    return document.getElementById(\"select_oracle\").value;\n}\n\nglobal.getInputString = function() {\n    return document.getElementById(\"transaction_input_textarea\").value;\n};\n\nexport function evaluateConditionals(inputString) {\n    var termArr = inputString.split(\" \"),\n        ifsToBeMatched = 0,\n        openingParens = 0,\n        closingParens = 0,\n        contractString = \"\",\n        ifCondition = \"\",\n        ifStack = [],\n        noOfOpeningParensStack = [],\n        firstPartStack = [],\n        compOpStack = [],\n        insideCondition = false;\n\n    for (var i = 0; i < termArr.length; ++i) {\n        var term = termArr[i],\n            nextTerm = termArr[i + 1], // for syntax checking\n            prevTerm = termArr[i - 1]; // for syntax checking\n\n        if (term === \"if\") {\n            if (i > termArr.length - 9 || nextTerm !== \"(\"\n              || (i > 0 && prevTerm !== \"(\" && prevTerm !== \"{\" && prevTerm !== \"and\" && prevTerm !== \"or\" && !COMPARISONOPERATOR(prevTerm)) ) {\n                document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": \" + term;\n                return \"error\";\n            }\n            if (ifsToBeMatched > 0 && ifCondition !== \"\") {\n                ifStack.push(ifCondition);\n                ifCondition = \"\";\n            }\n            noOfOpeningParensStack.push(openingParens - closingParens);\n            ++ifsToBeMatched;\n            insideCondition = true;\n        } else if (term === \")\") {\n            if ((i < termArr.length - 1 && nextTerm !== \")\" && nextTerm !== \"and\" && nextTerm !== \"or\" && nextTerm !== \"{\" && !COMPARISONOPERATOR(nextTerm) && nextTerm !== \"||\" && nextTerm !== \"&&\")\n              || i < 2 || ( i > 0 && prevTerm !== \"one\" && prevTerm !== \"zero\" && prevTerm !== \"}\" && prevTerm !== \")\" )) {\n                document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": \" + term;\n                return \"error\";\n            }\n            ++closingParens;\n            var bool1 = noOfOpeningParensStack.length === 0 && openingParens === closingParens && ifsToBeMatched !== 0,\n                bool2 = (openingParens - noOfOpeningParensStack[noOfOpeningParensStack.length - 1]) === closingParens;\n            if (bool1 || bool2) { // have reached end of the if condition\n                insideCondition = false;\n                var firstPart = firstPartStack.pop(),\n                    compOp = compOpStack.pop(),\n                    cons = \"\", // consequence\n                    alt = \"\", // alternative\n                    stringToEval = firstPart + \" \" + compOp + \" \" + ifCondition,\n                    bool = evaluate(firstPart, compOp, ifCondition);\n                    if (bool === undefined) {\n                        document.getElementById(\"transaction_status\").innerHTML = \"Conditional statement syntax error.\";\n                        return \"error\";\n                    }\n\n                ifCondition = \"\";\n                if (bool) {\n                    var findConsequentResult1 = findConsequent(termArr, i + 2); // +2 to skip {\n                    cons = findConsequentResult1[0];\n                    var lengthOfCons = findConsequentResult1[1];\n                    if (ifsToBeMatched > 1) {\n                        ifCondition = ifStack.length > 0 ? ifStack.pop() + \" \" + cons : cons;\n                    } else {\n                        contractString = contractString === \"\" ? cons : contractString + \" \" + cons;\n                    }\n                    // now need to fast forward in string ie skip indices\n                    if (termArr[i + lengthOfCons + 2] !== \"else\") {\n                        i = i + lengthOfCons + 1; // +1 to skip {}\n                    } else {\n                        var findConsequentResult2 = findConsequent(termArr, i + findConsequentResult1[1] + 4); // +4 because of 'else' + {\n                        alt = findConsequentResult2[0];\n                        var lengthOfAlt = findConsequentResult2[1];\n                        i = i + lengthOfCons + lengthOfAlt + 3; // +3 to skip {}{}\n                    }\n                } else { // boolean returns false\n                    var findConsequentResult1 = findConsequent(termArr, i + 2); // +2 to skip {\n                    cons = findConsequentResult1[0];\n                    var lengthOfCons = findConsequentResult1[1];\n                    if (termArr[i + lengthOfCons + 2] !== \"else\") { // if no 'else' given\n                        i = i + lengthOfCons + 1; // +1 to skip {}\n                        if (ifsToBeMatched > 1) { // append result (nothing) to ifCondition\n                            if (ifStack.length > 0) {\n                                ifCondition = ifStack.pop();\n                                var slicedCond = ifCondition.slice(-3);\n                                if (slicedCond === \"and\" || slicedCond === \" or\") { // check if last term was a connective\n                                    var lastIndex = ifCondition.lastIndexOf(\" \");\n                                    ifCondition = ifCondition.slice(0, lastIndex);\n                                }\n                                // check if last term was a comp op\n                                var slicedCompOp1 = ifCondition.slice(-4); // when compOp is 4 symbols long\n                                var slicedCompOp2 = ifCondition.slice(-2); // when compOp is 2 symbols long\n                                var slicedCompOp3 = ifCondition.slice(-1); // when compOp is 1 symbol long\n                                if (COMPARISONOPERATOR(slicedCond) || COMPARISONOPERATOR(slicedCompOp1) || COMPARISONOPERATOR(slicedCompOp2) || COMPARISONOPERATOR(slicedCompOp3)) { // check if last term was a connective\n                                    document.getElementById(\"transaction_status\").innerHTML = \"Comparison operator error: Please provide an alternative to your conditional statement.\";\n                                    return \"error\";\n                                }\n                            } else {\n                                ifCondition = \"\";\n                            }\n                        } else { // append result (nothing) to contractString\n                            var slicedCond = contractString.slice(-3);\n                            if (slicedCond === \"and\" || slicedCond === \" or\") { // check if last term was a connective\n                                var lastIndex = contractString.lastIndexOf(\" \");\n                                contractString = contractString.slice(0, lastIndex);\n                            }\n                            // check if last term was a comp op\n                            var slicedCompOp1 = ifCondition.slice(-4); // when compOp is 4 symbols long\n                            var slicedCompOp2 = ifCondition.slice(-2); // when compOp is 2 symbols long\n                            var slicedCompOp3 = ifCondition.slice(-1); // when compOp is 1 symbol long\n                            if (COMPARISONOPERATOR(slicedCond) || COMPARISONOPERATOR(slicedCompOp1) || COMPARISONOPERATOR(slicedCompOp2) || COMPARISONOPERATOR(slicedCompOp3)) { // check if last term was a connective\n                                document.getElementById(\"transaction_status\").innerHTML = \"Comparison operator error: Please provide an alternative to your conditional statement.\";\n                                return \"error\";\n                            }\n                        }\n                        // check if next term is a comp op\n                        if (COMPARISONOPERATOR(termArr[i + 1])) { // check if next term is a connective\n                            document.getElementById(\"transaction_status\").innerHTML = \"Comparison operator error: Please provide an alternative to your conditional statement.\";\n                            return \"error\";\n                        }\n                        if (termArr[i + 1] === \"and\" || termArr[i + 1] === \"or\") { // check if next term is a connective\n                            ++i;\n                        }\n                    } else { // there is an alternative\n                        var findConsequentResult2 = findConsequent(termArr, i + findConsequentResult1[1] + 4); // +4 because of 'else' + {\n                        alt = findConsequentResult2[0];\n                        var lengthOfAlt = findConsequentResult2[1];\n                        i = i + lengthOfCons + lengthOfAlt + 3; // +4 to skip {}{}\n                        if (ifsToBeMatched > 1) {\n                            ifCondition = ifStack.length > 0 ? ifStack.pop() + \" \" + alt : alt;\n                        } else {\n                            contractString = contractString === \"\" ? alt : contractString + \" \" + alt;\n                        }\n                    }\n                }\n                --ifsToBeMatched;\n                noOfOpeningParensStack.pop();\n            } else if (ifsToBeMatched > 0 || insideCondition) { // we are inside ifCondition and do not want to add to final string\n                //ifCondition = ifCondition === \"\" ? term : ifCondition + \" \" + term;\n            } else { // we are not inside ifCondition and can append to contractString\n                contractString = contractString === \"\" ? term : contractString + \" \" + term;\n            }\n        } else if (term === \"(\") {\n            if (i > termArr.length - 3 || nextTerm === \")\" || COMPARISONOPERATOR(nextTerm)\n              || nextTerm === \"&&\" || nextTerm === \"||\" || nextTerm === \"{\" || isDate(lTrimDoubleQuotes(rTrimDoubleQuotes(nextTerm)))\n              || nextTerm === \"}\" || nextTerm === \"or\" || nextTerm === \"and\" || nextTerm === \"else\"\n              || isNumeric(nextTerm) || observablesArr.includes(nextTerm)\n              || (i > 0 && (prevTerm === \")\" || prevTerm === \"one\" || prevTerm === \"zero\"\n              || prevTerm === \"truncate\" || prevTerm === \"scaleK\" || prevTerm === \"else\" || prevTerm === \"}\"))) {\n                document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": \" + term;\n                return \"error\";\n            }\n            ++openingParens;\n            if (termArr[i - 1] !== \"if\") {\n                if (ifsToBeMatched > 0 || insideCondition) { // we are inside ifCondition and do not want to add to final string\n                    //ifCondition = ifCondition === \"\" ? term : ifCondition + \" \" + term;\n                } else { // we are not inside ifCondition and can append to contractString\n                    contractString = contractString === \"\" ? term : contractString + \" \" + term;\n                }\n            }\n        } else if (COMPARISONOPERATOR(term)) {\n            if (firstPartStack.length > 0 && firstPartStack.length === ifsToBeMatched) {\n                firstPartStack.push(firstPartStack.pop() + \" \" + compOpStack.pop() + \" \" + ifCondition);\n            } else {\n                firstPartStack.push(ifCondition);\n            }\n            compOpStack.push(term);\n            ifCondition = \"\";\n        } else if (term === \"||\" || term === \"&&\") {\n            if (prevTerm !== \")\" || nextTerm !== \"(\") {\n                document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": \" + term;\n                return \"error\";\n            }\n            var firstPart = firstPartStack.pop(),\n                compOp = compOpStack.pop(),\n                secondPart = ifCondition,\n                ifConditionVal = evaluate(firstPart, compOp, secondPart);\n                //ifConditionVal = evaluate(lTrimParen(rTrimParen(firstPart)), compOp, secondPart);\n                if (ifConditionVal === undefined) {\n                    document.getElementById(\"transaction_status\").innerHTML = \"Conditional statement syntax error.\";\n                    return \"error\";\n                }\n\n            // keep opening paren\n            ifCondition = firstPart.slice(0, 1) === \"(\" && secondPart.slice(-1) !== \")\" ? \"(\" + ifConditionVal + \" \" + term : ifConditionVal + \" \" + term;\n            if ((ifConditionVal && term === \"&&\") || (!ifConditionVal && term === \"||\")) {\n                // keep opening paren\n                ifCondition = firstPart.slice(0, 1) === \"(\" && secondPart.slice(-1) !== \")\" ? \"(\" : \"\";\n            }\n        } else if (nonExistingTerm(term)) {\n            // give error for non-existing term\n            document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": \" + term;\n            return \"error\";\n        } else {\n            if (ifsToBeMatched > 0) { // we are inside ifCondition and do not want to add to final string\n                ifCondition = ifCondition === \"\" ? term : ifCondition + \" \" + term;\n            } else { // we are not inside ifCondition and can append to contractString\n                contractString = contractString === \"\" ? term : contractString + \" \" + term;\n            }\n        }\n    }\n    return contractString;\n}\n\nexport function evaluate(part1, comparisonOperator, part2) {\n    if (comparisonOperator === \"{>}\" || comparisonOperator === \"{<}\" || comparisonOperator === \"{==}\" || comparisonOperator === \"{>=}\" || comparisonOperator === \"{<=}\") {\n        // Horizon Comparison\n\n        // can only compare two contracts - cannot have a logical operator between two contracts\n        // if no truncate included then horizon is infinite\n        var horizon1 = getHorizon(part1),\n            horizon2 = getHorizon(part2);\n        switch(comparisonOperator) {\n            case \"{>=}\":\n                return !greaterDate(horizon2, horizon1);\n            case \"{>}\":\n                return greaterDate(horizon1, horizon2);\n            case \"{<=}\":\n                return !greaterDate(horizon1, horizon2);\n            case \"{<}\":\n                return greaterDate(horizon2, horizon1);\n            case \"{==}\":\n                return equalDates(horizon1, horizon2);\n            default:\n        }\n    }\n    else if (comparisonOperator === \"[>]\" || comparisonOperator === \"[<]\" || comparisonOperator === \"[==]\" || comparisonOperator === \"[>=]\" || comparisonOperator === \"[<=]\") {\n        // Value Comparison\n        // can only compare two contracts - cannot have a logical operator between two contracts\n        var value1 = getValue(part1, \"\"),\n            value2 = getValue(part2, \"\");\n        switch(comparisonOperator) {\n            case \"[>=]\":\n                return value1 >= value2;\n            case \"[>]\":\n                return value1 > value2;\n            case \"[<=]\":\n                return value1 <= value2;\n            case \"[<]\":\n                return value1 < value2;\n            case \"[==]\":\n                return value1 === value2;\n            default:\n        }\n    } else if (comparisonOperator === \">=\" || comparisonOperator === \">\" || comparisonOperator === \"<=\" || comparisonOperator === \"<\" || comparisonOperator === \"==\") {\n        // Dominance Comparison\n        var horizon1 = getHorizon(part1),\n            horizon2 = getHorizon(part2);\n        // go through all dates and call getValue with date parameter\n        switch(comparisonOperator) {\n            case \">=\":\n                if (!greaterDate(horizon2, horizon1)) {\n                    var horizonsSet = extractAllSubHorizons(part1, part2, comparisonOperator);\n                    for (let hor of horizonsSet) {\n                        var value1 = getValue(part1, hor),\n                            value2 = getValue(part2, hor);\n                        if (value1 < value2) {\n                            return false;\n                        }\n                    }\n                    return true;\n                } else {\n                    return false;\n                }\n                break;\n            case \">\":\n                return evaluate(part1, \">=\", part2) && !evaluate(part1, \"==\", part2);\n            case \"<=\":\n                if (!greaterDate(horizon1, horizon2)) {\n                    var horizonsSet = extractAllSubHorizons(part1, part2, comparisonOperator);\n                    for (let hor of horizonsSet) {\n                        var value1 = getValue(part1, hor),\n                            value2 = getValue(part2, hor);\n                        if (value1 > value2) {\n                            return false;\n                        }\n                    }\n                    return true;\n                } else {\n                    return false;\n                }\n                break;\n            case \"<\":\n                return evaluate(part1, \"<=\", part2) && !evaluate(part1, \"==\", part2);\n            case \"==\":\n                if (equalDates(horizon2, horizon1)) {\n                    console.log(\"Both have equal dates\");\n                    var horizonsSet = extractAllSubHorizons(part1, part2, comparisonOperator);\n                    for (let hor of horizonsSet) {\n                        console.log(\"hor: \" + hor);\n                        var value1 = getValue(part1, hor),\n                            value2 = getValue(part2, hor);\n                        if (value1 !== value2) {\n                            return false;\n                        }\n                    }\n                    return true;\n                } else {\n                    return false;\n                }\n                break;\n            default:\n        }\n    }\n}\n\nfunction COMPARISONOPERATOR(string) {\n    if (string === \"{>}\" || string === \"{<}\" || string === \"{==}\" || string === \"{>=}\" || string === \"{<=}\"\n      || string === \"[>]\" || string === \"[<]\" || string === \"[==]\" || string === \"[>=]\" || string === \"[<=]\"\n      || string === \">=\" || string === \"==\" || string === \"<=\" || string === \">\" || string === \"<\") {\n        return true;\n    }\n    return false;\n}\n\nexport function getHorizon(contractString) {\n    // Loops through the whole contract once to find the largest horizon\n    // Find minimum horizon, but beforeCurrentDate() must return false\n    var strArr = contractString.split(\" \"),\n        maxHorizon = \"\", // setting first horizon as empty string\n        comeAcrossTruncate = false;\n    for (var i = 0; i < strArr.length; ++i) {\n        if (strArr[i] === \"truncate\") {\n            // obtain c from 'truncate t c'\n            var truncDate = strArr[i + 1],\n                oscs = obtainSubContractString(strArr, i + 2),\n                c = oscs[0],\n                prevHorizon = getHorizon(c), // obtain c's previous horizon\n                currentHor = lTrimDoubleQuotes(rTrimDoubleQuotes(truncDate)); // compare previous horizon with new horizon t and get min\n            if (greaterDate(currentHor, prevHorizon)) {\n                currentHor = prevHorizon;\n            }\n            comeAcrossTruncate = true;\n            if (maxHorizon === \"\" || greaterDate(currentHor, maxHorizon)) {\n                maxHorizon = currentHor;\n            }\n            i += oscs[1];\n        } else if (strArr[i] === \"and\" || strArr[i] === \"or\") { // have reached end of subcontract\n            if (!comeAcrossTruncate) { // if we have not come across a \"truncate\" then this subcontract's horizon is infinite\n                return \"infinite\";\n            }\n            comeAcrossTruncate = false;\n        } else if (i === strArr.length - 1 && !comeAcrossTruncate) {\n            return \"infinite\";\n        }\n    }\n    return maxHorizon;\n}\n\nfunction decompose(termArr) {\n    var openingParens = 0,\n        closingParens = 0,\n        contractString = \"\",\n        contractParsed = \"\",\n        parseStack = [],\n        contractsStack = [],\n        connectiveStack = [], //---\n        closingParensStack = [],\n        mostBalancedConj = \"\",\n        mostBalancedConjBalance = termArr.length - 1,\n        conjWaitingToBeMatched = false; // set to true when reading conjunction and then set to false when reading another conjunction or reaching end\n\n    for (var i = 0; i < termArr.length; ++i) {\n        var term = termArr[i];\n        if (term === \"and\" || term === \"or\") { // we have reached the end of a subcontract whenever 'and' is read\n            if (openingParens === closingParens) { // found outer most conjunct\n                mostBalancedConj = term;\n                contractsStack[0] = contractParsed;\n                contractsStack[1] = termArr.slice(i + 1).join(' ');\n                return [contractsStack[0], contractsStack[1], mostBalancedConj];\n            } else if (openingParens > closingParens && (openingParens - closingParens) < mostBalancedConjBalance) {\n                mostBalancedConjBalance = openingParens - closingParens;\n                mostBalancedConj = term;\n                var combinatorString = parseStack[parseStack.length - 1];\n                var closingParensString = closingParensStack[closingParensStack.length - 1];\n                if (contractString !== \"\") {\n                    if (combinatorString !== undefined) {\n                        if (mostBalancedConj === \"or\") {\n                            contractsStack[0] = contractString;\n                            stringToAddToBeginning = combinatorString + \" ( \";\n                            stringToAddToEnd = closingParensString;\n                        } else {\n                            contractsStack[0] = combinatorString + \" ( \" + contractString + closingParensString;\n                        }\n                    } else if (closingParensString !== undefined){\n                        if (mostBalancedConj === \"or\") {\n                            contractsStack[0] = contractString;\n                            stringToAddToEnd = closingParensString;\n                        } else {\n                            contractsStack[0] = contractString + closingParensString;\n                        }\n                    } else {\n                        contractsStack[0] = contractString;\n                    }\n                }\n                contractString = \"\";\n            } else {\n                connectiveStack.push(term); // ---\n            }\n            conjWaitingToBeMatched = true;\n        } else if (term === \"zero\" || term === \"one\") {\n            contractString = contractString === \"\" ? term : contractString + \" \" + term;\n            var combinatorString = parseStack[parseStack.length - 1];\n            var closingParensString = closingParensStack[closingParensStack.length - 1];\n            if (conjWaitingToBeMatched) {\n                if (combinatorString !== undefined && closingParensString !== undefined) {\n                    if (mostBalancedConj === \"or\") {\n                        contractsStack[1] = contractString;\n                        stringToAddToBeginning = combinatorString + \" ( \";\n                        stringToAddToEnd = closingParensString;\n                    } else {\n                        contractsStack[1] = combinatorString + \" ( \" + contractString + closingParensString;\n                    }\n                } else {\n                    contractsStack[1] = contractsStack[1] !== undefined ? contractsStack[1] + \" \" + connectiveStack.pop() + \" \" + contractString : contractString; // ---\n                }\n                conjWaitingToBeMatched = false;\n                contractString = \"\";\n            } else {\n                if (combinatorString !== undefined && closingParensString !== undefined) {\n                    if (mostBalancedConj === \"or\") {\n                        contractsStack[0] = contractString;\n                        stringToAddToBeginning = combinatorString + \" ( \";\n                        stringToAddToEnd = closingParensString;\n                    } else if (mostBalancedConj === \"and\") {\n                        contractsStack[0] = combinatorString + \" ( \" + contractString + closingParensString;\n                    } else { // we have not encountered any connective yet ie give ( one or zero )\n                        // need to look ahead to see if next connective is 'and' / 'or'\n                        var con = findNextConnective(termArr, i);\n                        if (con === \"or\") {\n                            contractsStack[0] = contractString;\n                            stringToAddToBeginning = combinatorString + \" ( \";\n                            stringToAddToEnd = closingParensString;\n                        } else {\n                            contractsStack[0] = combinatorString + \" ( \" + contractString + closingParensString;\n                        }\n                    }\n                } else {\n                    contractsStack[0] = contractString;\n                }\n                contractString = \"\";\n            }\n        } else if (term === \")\") {\n            // as soon as closing paren is read we have found a contract\n            ++closingParens;\n            var combinatorString = parseStack.pop();\n            var closingParensString = closingParensStack.pop();\n        } else if (term === \"(\") {\n            ++openingParens;\n            if (contractString !== \"\") {\n                if (parseStack.length > 0) {\n                    parseStack.push(parseStack[parseStack.length - 1] + \" ( \" + contractString);\n                } else {\n                    parseStack.push(contractString);\n                }\n                contractString = \"\";\n            }\n            if (termArr[i - 1] !== \"and\" && i !== 0) {\n                if (closingParensStack.length === 0) {\n                    closingParensStack.push(\" )\");\n                } else {\n                    closingParensStack.push(closingParensStack[closingParensStack.length - 1] + \" )\");\n                }\n            }\n        } else {\n            contractString = contractString === \"\" ? term : contractString + \" \" + term;\n        }\n        contractParsed = contractParsed === \"\" ? term : contractParsed + \" \" + term;\n    }\n    // this happens if there is a balanced or conjunction at the end and the second part still needs to be added\n    if (contractString !== \"\") {\n        contractsStack.push(contractString);\n    }\n    return [contractsStack[0], contractsStack[1], mostBalancedConj];\n}\n\nexport function getValue(contractString, horizonToCheck) {\n    var termArr = contractString.split(\" \"),\n        currentString = \"\",\n        combinatorStack = [],\n        valuesStack = [],\n        currentVal,\n        horizonsStack = []; // pushes horizons of each c whenever we push combinators\n\n    for (var i = 0; i < termArr.length; ++i) {\n        var term = termArr[i];\n        if (term === \"(\") {\n            if (currentString !== \"\") {\n                combinatorStack.push(currentString);\n                currentString = \"\";\n            }\n        } else if (term === \")\") { // whenever we read this we can evaluate current contract string and pop 1 comb off the combinators stack to apply\n            currentVal = getLowestLevelContractValue(currentString, horizonToCheck);\n            if (combinatorStack.length > 0) {\n                var str = combinatorStack.pop() + \" \" + currentVal.toString();\n                currentVal = getLowestLevelContractValue(str, horizonToCheck);\n            }\n            if (currentVal !== undefined) {\n                currentString = i === termArr.length - 1 ? \"\" : currentVal.toString();\n            }\n            // apply combinator to it and call getValue again\n        } else if (term === \"get\") {\n            var oscs = obtainSubContractString(termArr, i + 1);\n            var subContractString = oscs[0];\n            var tempValue = getValue(subContractString, horizonToCheck);\n            currentVal = sameDayAsCurrentDate(getHorizon(subContractString), horizonToCheck) ? tempValue : 0;\n\n            if (currentVal !== undefined) {\n                currentString = i === termArr.length - 1 ? \"\" : currentVal.toString();\n            }\n            i += oscs[1];\n        } else {\n            currentString = currentString === \"\" ? term : currentString + \" \" + term;\n        }\n    }\n    if (currentString !== \"\") {\n        currentVal = getLowestLevelContractValue(currentString, horizonToCheck);\n    }\n    return currentVal;\n}\n\nfunction getLowestLevelContractValue(contractString, horizonToCheck) {\n    if (contractString.includes(\" or \")) { // it will only contain one or the other, not both\n        var arr = contractString.split(\" or \");\n        return Math.max(getLowestLevelContractValue(arr[0], horizonToCheck), getLowestLevelContractValue(arr[1], horizonToCheck));\n    } else if (contractString.includes(\" and \")) {\n        var arr = contractString.split(\" and \");\n        return getLowestLevelContractValue(arr[0], horizonToCheck) + getLowestLevelContractValue(arr[1], horizonToCheck);\n    } else {\n        // string does not contain connective ie we are in lowest-level subcontract\n        if (isNumeric(contractString)) {\n            return parseFloat(contractString);\n        } else if (contractString === \"zero\" || contractString.includes(\" zero \") || contractString === \"0\" || contractString.includes(\" 0 \")) {\n            return 0;\n        } else if (contractString === \"one\") {\n            return 1;\n        } else {\n            var value = 1;\n            var horizon = getHorizon(contractString);\n            var termArr = contractString.split(\" \");\n            for (var i = 0; i < termArr.length; ++i) {\n                if (termArr[i] === \"scaleK\") {\n                    if (termArr[i + 1].includes(\"x\")) { // value dependent on some observable values\n                        var arr = termArr[i + 1].split(\"x\");\n                        for (var j = 0; j < arr.length; ++j) {\n                            if (isNumeric(arr[j])) {\n                                value = value * parseFloat(arr[j]);\n                            } else { // we encountered an observable\n                                if (arr[j] === \"libor3m\") {\n                                    // rounding because Parity can only handle integers\n                                    value = Math.round(value * getOracleByAddress(agreedOracleAddress).getLiborSpotRate());\n                                } else if (arr[j] === \"tempInLondon\") {\n                                    value = Math.round(value * getOracleByAddress(agreedOracleAddress).getTempInLondon());\n                                }\n                            }\n                        }\n                    } else {\n                        value = value * parseFloat(termArr[i + 1]);\n                    }\n                    ++i;\n                } else if (termArr[i] === \"give\") {\n                    value = -value;\n                } else if (isNumeric(termArr[i])) {\n                    value = value * parseFloat(termArr[i]);\n                }\n            }\n            if (beforeCurrentDate(horizon, horizonToCheck)) { // ie contract has expired, its horizon is before horizonToCheck\n                return 0;\n            } else { // contract's horizon is after the horizon given, so it is valid\n                return value;\n            }\n\n        }\n    }\n}\n\nglobal.processContract = function(inputString, initialDecomposition) {\n    ++uniqueID;\n    if (initialDecomposition) {\n        // This is the case only when this function is triggered by the 'make transaction' button\n        contractsBeingDecomposed = 1;\n        removeChildren(\"button_choices_container\"); // NEEDED?\n        acquireBtnToBeDisabled1 = true;\n        acquireBtnToBeDisabled2 = true;\n    }\n    document.getElementById(\"transaction_status\").innerHTML = \"\";\n    inputString = cleanUpBeforeDecomp(inputString);\n    if (inputString === \"error\" || !parsesSuccessfullyForSyntax(inputString)) {\n        return;\n    }\n    var termArr = inputString.split(\" \");\n    // check if inputstring contains 'or' else execute right away\n    var orMatches = inputString.match(/^(.*)\\sor\\s(.*)$/);\n    if (orMatches !== null) {\n        // keep track of the current most balanced conj AND its external combinators\n        var decomposedResult = decompose(termArr),\n            part1 = decomposedResult[0],\n            part2 = decomposedResult[1],\n            mostBalancedConj = decomposedResult[2];\n        if (mostBalancedConj === \"and\") {\n            ++contractsBeingDecomposed;\n            processContract(part1, false);\n            processContract(part2, false);\n        } else {\n            addChoices([part1, part2], uniqueID);\n        }\n    }\n    else { // input does not contain 'or'\n        var contractsArr = decomposeAnds(inputString); // calling this for performance reasons - decomposeAnds will not recursively call itself\n        contractsBeingDecomposed = contractsBeingDecomposed + contractsArr.length - 1;\n        createContractEntries(contractsArr);\n    }\n};\n\nfunction createValuationSelect(tr, id) {\n    var td;\n    tr.appendChild(td = document.createElement(\"td\"));\n    var div = document.createElement(\"div\");\n    td.appendChild(div);\n    div.className = \"valuation_cell_data\";\n\n    var date = new Date(),\n        d = date.getDate(),\n        m = date.getMonth(),\n        y = date.getFullYear();\n\n    var selectDay = document.createElement(\"select\");\n    selectDay.className = \"select_valuation\";\n    selectDay.id = \"day_select_\" + id;\n    selectDay.onchange = function() {\n        updateValuationValue(id);\n    }\n    div.appendChild(selectDay);\n    for (var i = 1; i <= 31; i++) {\n        var option = document.createElement(\"option\");\n        option.value = i;\n        option.text = i;\n        selectDay.appendChild(option);\n    }\n    selectDay.value = d;\n\n    var selectMonth = document.createElement(\"select\");\n    selectMonth.className = \"select_valuation\";\n    selectMonth.id = \"month_select_\" + id;\n    selectMonth.onchange = function() {\n        var selectedMonth = selectMonth.value;\n        updateSelectableDaysFromMonth(selectedMonth, id);\n        updateValuationValue(id);\n    };\n    div.appendChild(selectMonth);\n    for (var i = 1; i <= 12; i++) {\n        var option = document.createElement(\"option\");\n        option.value = i;\n        option.text = i;\n        selectMonth.appendChild(option);\n    }\n    selectMonth.value = m + 1;\n\n    var selectYear = document.createElement(\"select\");\n    selectYear.className = \"select_valuation_year\";\n    selectYear.id = \"year_select_\" + id;\n    selectYear.onchange = function() {\n        var selectedYear = selectYear.value;\n        updateSelectableDaysFromYear(selectedYear, id);\n        updateValuationValue(id);\n    };\n    div.appendChild(selectYear);\n    for (var i = 2019; i <= 2040; i++) {\n        var option = document.createElement(\"option\");\n        option.value = i;\n        option.text = i;\n        selectYear.appendChild(option);\n    }\n    selectYear.value = y;\n\n    var valueLabel = document.createElement(\"p\");\n    td.appendChild(valueLabel);\n    valueLabel.id = \"p_value_\" + id;\n    valueLabel.className = \"p_value\";\n    updateValuationValue(id);\n}\n\nfunction updateValuationValue(id) {\n    var day = padNumber(document.getElementById(\"day_select_\" + id).value),\n        month = padNumber(document.getElementById(\"month_select_\" + id).value),\n        year = document.getElementById(\"year_select_\" + id).value,\n        c = getAllSubcontracts(id);\n    document.getElementById(\"p_value_\" + id).innerHTML = getValue(c, day + \"/\" + month + \"/\" + year + \"-\" + \"12:00:00\").toString() + \"ETH\";\n}\n\nfunction getAllSubcontracts(superKey) {\n    var finalContractString = \"\";\n    if (superContractsMap.has(superKey)) {\n        for (var [superContractId, contractsSet] of superContractsMap) {\n            if (superContractId === superKey) {\n                for (let contract of contractsSet) {\n                    finalContractString = finalContractString === \"\" ? contract.contractString : finalContractString + \" and \" + contract.contractString;\n                }\n            }\n        }\n        return finalContractString;\n    } else {\n        return \"zero\"; // all contracts have already expired\n    }\n}\n\nfunction updateSelectableDaysFromMonth(selectedMonth, id) {\n    var selectDay = document.getElementById(\"day_select_\" + id);\n    var selectYear = document.getElementById(\"year_select_\" + id);\n    if (selectedMonth === \"1\" || selectedMonth === \"3\" || selectedMonth === \"5\"\n      || selectedMonth === \"7\" || selectedMonth === \"8\" || selectedMonth === \"10\"\n      || selectedMonth === \"12\") { // 31 days\n        for (var i = selectDay.options.length + 1; i <= 31; ++i) { // add items\n          var option = document.createElement(\"option\");\n          option.value = i;\n          option.text = i;\n          selectDay.appendChild(option);\n        }\n    }\n    else if (selectedMonth === \"2\") {\n        if (selectYear === \"2020\" || selectYear === \"2024\" || selectYear === \"2028\"\n          || selectYear === \"2032\" || selectYear === \"2036\" || selectYear === \"2040\") { // leap year - 29 days in Feb\n            if (parseInt(selectDay.value) > 29) {\n                selectDay.value = 29;\n            }\n            while (selectDay.options.length > 29) {\n                selectDay.remove(29);\n            }\n            if (selectDay.options.length === 28) {\n                var option = document.createElement(\"option\");\n                option.value = \"29\";\n                option.text = \"29\";\n                selectDay.appendChild(option);\n            }\n        } else { // 28 days in Feb\n            if (parseInt(selectDay.value) > 28) {\n                selectDay.value = 28;\n            }\n            while (selectDay.options.length > 28) {\n                selectDay.remove(28);\n            }\n        }\n    }\n    else { // 30 days\n        if (parseInt(selectDay.value) > 30) {\n            selectDay.value = 30;\n        }\n        if (selectDay.options.length > 30) {\n            selectDay.remove(30);\n        }\n        for (var i = selectDay.options.length + 1; i <= 30; ++i) { // add items\n          var option = document.createElement(\"option\");\n          option.value = i;\n          option.text = i;\n          selectDay.appendChild(option);\n        }\n    }\n}\n\nfunction updateSelectableDaysFromYear(selectedYear, id) {\n    var selectDay = document.getElementById(\"day_select_\" + id);\n    var selectMonth = document.getElementById(\"month_select_\" + id);\n    if (selectMonth.value === \"2\") {\n        if (selectedYear === \"2020\" || selectedYear === \"2024\" || selectedYear === \"2028\"\n          || selectedYear === \"2032\" || selectedYear === \"2036\" || selectedYear === \"2040\") { // leap year - 29 days in Feb\n            if (parseInt(selectDay.value) > 29) {\n                selectDay.value = 29;\n            }\n            while (selectDay.options.length > 29) { // remove items first\n                selectDay.remove(29);\n            }\n            if (selectDay.options.length === 28) {\n                var option = document.createElement(\"option\");\n                option.value = \"29\";\n                option.text = \"29\";\n                selectDay.appendChild(option);\n            }\n        } else { // 28 days in Feb\n            if (parseInt(selectDay.value) > 28) {\n                selectDay.value = 28;\n            }\n            while (selectDay.options.length > 28) {\n                selectDay.remove(28);\n            }\n        }\n    }\n}\n\nfunction createAcquireButton(tr, id) {\n    var td;\n    tr.appendChild(td = document.createElement(\"td\"));\n    //Create array of options to be added\n    var btn = document.createElement('input');\n    btn.type = \"button\";\n    btn.className = \"acquire_button button\";\n    btn.id = \"acquire_button_\" + id;\n    btn.value = \"acquire\";\n    btn.onclick = _ => {\n        executeSuperContract(id);\n    };\n    td.appendChild(btn);\n    // if either of these is true then we want the acquire button to be disabled\n    if (acquireBtnToBeDisabled1 || acquireBtnToBeDisabled2) {\n        btn.disabled = true;\n    }\n}\n\nfunction addChoices(contractsStack, divId) {\n    var contract2 = contractsStack.pop();\n    var contract1 = contractsStack.pop();\n    createSection(divId);\n    createButton(rTrimWhiteSpace(lTrimWhiteSpace(contract1)), stringToAddToBeginning, stringToAddToEnd, 1, divId);\n    createOrLabel(divId);\n    createButton(rTrimWhiteSpace(lTrimWhiteSpace(contract2)), stringToAddToBeginning, stringToAddToEnd, 2, divId);\n    stringToAddToBeginning = \"\";\n    stringToAddToEnd = \"\";\n}\n\nfunction createContractEntries(contractsArr) {\n    // acquire button should be disabled if either all contracts are expired or all contracts are to be acquired at horizon ie 'get'\n    for (var i = 0; i < contractsArr.length; ++i) {\n        var conString = cleanParens(lTrimWhiteSpace(rTrimWhiteSpace(contractsArr[i])));\n        if (!conString.includes(\"get\")) { // at least one contract is not acquired at its horizon\n            acquireBtnToBeDisabled1 = false;\n        }\n        if (!beforeCurrentDate(getHorizon(conString), \"\")) { // at least one subcontract has not expired yet\n            acquireBtnToBeDisabled2 = false;\n        }\n        createContractObject(conString);\n    }\n}\n\nexport function decomposeAnds(contractString) {\n    // keep two stacks: one for combinators and one for closing parenthesis to be added\n    var termArr = contractString.split(\" \"),\n        openingParens = 0,\n        contractString = \"\",\n        parseStack = [],\n        finalContractsArr = [],\n        closingParensStack = [];\n    for (var i = 0; i < termArr.length; ++i) {\n        var term = termArr[i];\n        if (term === \"and\") { // we have reached the end of a subcontract whenever 'and' is read\n            if (contractString !== \"\") {\n\n                if (openingParens === 0) {\n                    finalContractsArr.push(contractString);\n                } else if (parseStack.length > 0) {\n                    finalContractsArr.push(parseStack[parseStack.length - 1] + \" ( \" + contractString + closingParensStack[closingParensStack.length - 1]);\n                } else if (closingParensStack.length > 0) {\n                    finalContractsArr.push(contractString + closingParensStack[closingParensStack.length - 1]);\n                } else {\n                    finalContractsArr.push(contractString);\n                }\n                contractString = \"\";\n            }\n        } else if (term === \")\") {\n            // as soon as closing paren is read we have found a contract\n            --openingParens;\n            var combinatorString = parseStack.pop();\n            var closingParensString = closingParensStack.pop();\n            if (contractString !== \"\") {\n                if (combinatorString !== undefined && closingParensString !== undefined) {\n                    finalContractsArr.push(combinatorString + \" ( \" + contractString + closingParensString);\n                } else {\n                    finalContractsArr.push(contractString);\n                }\n                contractString = \"\";\n            }\n        } else if (term === \"(\") {\n            ++openingParens;\n            if (contractString !== \"\") {\n                if (parseStack.length > 0) {\n                    parseStack.push(parseStack[parseStack.length - 1] + \" ( \" + contractString);\n                } else {\n                    parseStack.push(contractString);\n                }\n                contractString = \"\";\n            }\n            if (termArr[i - 1] !== \"and\" && i !== 0) {\n                if (closingParensStack.length === 0) {\n                    closingParensStack.push(\" )\");\n                } else {\n                    closingParensStack.push(closingParensStack[closingParensStack.length - 1] + \" )\");\n                }\n            }\n        } else {\n            contractString = contractString === \"\" ? term : contractString + \" \" + term;\n        }\n    }\n    // this happens if there is a balanced or conjunction at the end and the second part still needs to be added\n    if (contractString !== \"\") {\n        finalContractsArr.push(contractString);\n    }\n    return finalContractsArr;\n}\n\nfunction parsesSuccessfullyForSyntax(contractString) {\n    var strArr = contractString.split(\" \");\n    for (var i = 0; i < strArr.length; ++i) {\n        var term = strArr[i],\n            prevTerm = strArr[i - 1],\n            nextTerm = strArr[i + 1];\n        switch (term) {\n            case \"zero\":\n                if (i < strArr.length - 1 && nextTerm !== \"and\" && nextTerm !== \"or\" && nextTerm !== \")\") {\n                    document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": \" + term;\n                    return false;\n                }\n                break;\n            case \"one\":\n                if (i < strArr.length - 1 && nextTerm !== \"and\" && nextTerm !== \"or\" && nextTerm !== \")\") {\n                    document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": \" + term;\n                    return false;\n                }\n                break;\n            case \"and\":\n                if ((i > 0 && prevTerm !== \")\" && prevTerm !== \"one\" && prevTerm !== \"zero\")\n                  || nextTerm === \")\" || nextTerm === \"and\" || nextTerm === \"or\" || isDate(lTrimDoubleQuotes(rTrimDoubleQuotes(nextTerm)))\n                  || isNumeric(nextTerm) || observablesArr.includes(nextTerm)) {\n                    document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": \" + term;\n                    return false;\n                }\n                break;\n            case \"or\":\n                if ((i > 0 && prevTerm !== \")\" && prevTerm !== \"one\" && prevTerm !== \"zero\")\n                  || nextTerm === \")\" || nextTerm === \"and\" || nextTerm === \"or\" || isDate(lTrimDoubleQuotes(rTrimDoubleQuotes(nextTerm)))\n                  || isNumeric(nextTerm) || observablesArr.includes(nextTerm)) {\n                    document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": \" + term;\n                    return false;\n                }\n                break;\n            case \"truncate\":\n                if (i > strArr.length - 3 || (i < strArr.length - 1 && !isDate(lTrimDoubleQuotes(rTrimDoubleQuotes(nextTerm))))) {\n                    document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": truncate should be followed by a date in the following pattern: 'dd/mm/yyyy hh:mm:ss'.\";\n                    return false;\n                }\n                break;\n            case \"get\":\n                if (i < strArr.length - 1 && nextTerm !== \"(\") {\n                    document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": get should be followed by opening parenthesis.\";\n                    return false;\n                }\n                break;\n            case \"scaleK\":\n                if (i > strArr.length - 3 || (i < strArr.length - 1 && !isNumeric(nextTerm) && !observablesArr.includes(nextTerm))) {\n                    document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": scaleK should be followed by an integer or an observable.\";\n                    return false;\n                }\n                break;\n\n            case \"give\":\n                if (i === strArr.length - 1 || (i < strArr.length - 1 && nextTerm !== \"(\")) {\n                    document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": give should be followed by opening parenthesis.\";\n                    return false;\n                }\n                break;\n            case \"(\":\n                if (i > strArr.length - 3 || prevTerm === \"one\" || prevTerm === \"zero\" || prevTerm === \")\"\n                  || prevTerm === \"scaleK\" || prevTerm === \"truncate\" || nextTerm === \"and\" || nextTerm === \"or\"\n                  || nextTerm === \")\" || isDate(lTrimDoubleQuotes(rTrimDoubleQuotes(nextTerm)))\n                  || isNumeric(nextTerm) || observablesArr.includes(nextTerm)) {\n                    document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": \" + term;\n                    return false;\n                }\n                break;\n            case \")\":\n                if ((i > 0 && prevTerm !== \")\" && prevTerm !== \"one\" && prevTerm !== \"zero\")\n                  || i < 2 || (i < strArr.length - 1 && nextTerm !== \")\" && nextTerm !== \"and\" && nextTerm !== \"or\")) {\n                    document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": \" + term;\n                    return false;\n                }\n                break;\n            default:\n                if (isNumeric(term) || observablesArr.includes(term)) {\n                    if (i === 0 || i === strArr.length - 1 || prevTerm !== \"scaleK\" || nextTerm !== \"(\") {\n                        document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": a float/observable value should be after scaleK and the float/observable should be followed by parenthesis.\";\n                        return false;\n                    }\n                } else if (isDate(lTrimDoubleQuotes(rTrimDoubleQuotes(term)))) {\n                    if (i === 0 || i === strArr.length - 1 || prevTerm !== \"truncate\" || nextTerm !== \"(\") {\n                        document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": a date should be after truncate and the date should be followed by parenthesis.\";\n                        return false;\n                    }\n                } else {\n                    document.getElementById(\"transaction_status\").innerHTML = \"Syntax error at term \" + i.toString() + \": \" + term;\n                    return false;\n                }\n        }\n    }\n    return true;\n}\n\nfunction createContractObject(inputString) {\n    // this is a lowest-level subcontract, ie. it contains only 1 occurrence zero/one\n\n    var giveOccurrences = 0,\n        getOccurrences = 0,\n        getHasAppeared = false, // to make sure gets are followed by a truncate\n        amount = \"1\",\n        contractObsArr = [];\n    if (inputString.includes(\" zero \")) {\n        amount = \"0\";\n    }\n    var horizonDate = getHorizon(inputString);\n    var newStr = inputString.replace(/[()]/g, ''); // removing parenthesis\n    var strArr = newStr.split(\" \");\n    for (var i = 0; i < strArr.length; ++i) {\n        var str = strArr[i];\n        if (str === \"give\") {\n            ++giveOccurrences;\n        } else if (str === \"scaleK\" && amount !== \"0\") {\n            if (isNumeric(strArr[i + 1])) {\n                amount = ( parseFloat(amount) * parseFloat(strArr[i + 1]) ).toString();\n                ++i;\n            } else if (observablesArr.includes(strArr[i + 1])) {\n                contractObsArr.push(strArr[i + 1]);\n                ++i;\n            }\n        } else if (str === \"get\") {\n            getHasAppeared = true;\n            ++getOccurrences;\n        } else if (str === \"truncate\") { // to make sure gets are followed by a truncate\n            getHasAppeared = false;\n        }\n    }\n    if (getHasAppeared) {\n        document.getElementById(\"transaction_status\").innerHTML = \"Syntax error: get must be followed by truncate.\";\n        addSuperContractRow();\n        return;\n    }\n    var recipient = giveOccurrences % 2 === 0 ? 0 : 1,\n        acquireAtHorizon = getOccurrences % 2 === 0 ? \"no\" : \"yes\",\n        contractString = createNewContractString(amount, contractObsArr, recipient, horizonDate, acquireAtHorizon);\n    const contract = new Contract(numberOfContracts.toString() + \".\" + numberOfSubContracts.toString(), amount, contractObsArr, recipient, contractString,\n       translateContract(recipient, amount, contractObsArr, horizonDate, acquireAtHorizon),\n       horizonDate, acquireAtHorizon, \"waiting to be executed\");\n\n    var balanceLabel = recipient === 1 ? document.getElementById(\"holder_balance_p\").innerHTML.split() : document.getElementById(\"counter_party_balance_p\").innerHTML;\n    const regex = new RegExp(\"(Balance:\\\\s)(.+)(ETH)\");\n    var matchObj = regex.exec(balanceLabel); // cannot check Rust balance as this will cause a delay. However, this is fine since label balance gets updated directly after transfer\n    var balance = parseFloat(matchObj[2]);\n    // uncomment this for testing, comment below - > there will be no super contract row\n    // createTableRow(contract); // TESTING\n    if (balance >= parseFloat(amount) && enoughBalanceForCapacity(contract, balance)) {\n        createTableRow(contract);\n        ++numberOfSubContracts;\n        if (horizonDate !== \"infinite\" && beforeCurrentDate(contract.horizonDate, \"\")) {\n            // add expired label\n            document.getElementById(\"td_status_\" + contract.id).innerHTML = \"expired\";\n        } else {\n            addToSuperContracts(superContractsMap, numberOfContracts.toString(), contract); // contract is only added to pending contracts map if it is still valid\n            document.getElementById(\"td_status_\" + contract.id).innerHTML = \"waiting to be executed\";\n        }\n        addSuperContractRow();\n    } else {\n        document.getElementById(\"transaction_status\").innerHTML = \"Insufficient funds. The sending party does not have enough Ether in their account. Please deposit before adding additional contracts.\";\n        addSuperContractRow();\n    }\n}\n\nfunction addSuperContractRow() {\n    --contractsBeingDecomposed;\n    if (!document.getElementById(\"button_choices_container\").hasChildNodes() && contractsBeingDecomposed === 0 && numberOfSubContracts !== 0) {\n        // now we can add the super contract row\n        let tr = document.getElementById(\"my_table\").insertRow(1);\n        tr.className = \"super_contract_row\";\n        var td;\n        tr.appendChild(td = document.createElement(\"td\"));\n        var superContractKey = numberOfContracts.toString();\n        td.innerHTML = superContractKey;\n        for (var i = 0; i < 5; ++i) {\n            tr.appendChild(td = document.createElement(\"td\"));\n        }\n        createValuationSelect(tr, superContractKey);\n        createAcquireButton(tr, superContractKey);\n        ++numberOfContracts;\n        numberOfSubContracts = 0;\n    }\n}\n\nfunction addToSuperContracts(map, superKey, contract) {\n    if (map.has(superKey)) {\n        for (var [superContractId, contractsSet] of map) {\n            if (superContractId === superKey) {\n                var newSet = contractsSet;\n                newSet.add(contract);\n                map.set(superContractId, newSet);\n                break;\n            }\n        }\n    } else {\n        var newSet = new Set();\n        newSet.add(contract);\n        map.set(superKey, newSet);\n    }\n    console.log(\"SupercontractsMap after adding a contract\");\n    console.log(map);\n}\n\nfunction deleteFromSuperContracts(map, superKey, contract) {\n    for (var [superContractId, contractsSet] of map) {\n        if (superContractId === superKey) {\n            var newSet = contractsSet;\n            newSet.delete(contract);\n            map.set(superContractId, newSet);\n            if (newSet.size === 0) {\n                map.delete(superContractId);\n                document.getElementById(\"acquire_button_\" + superContractId).disabled = true;\n            }\n            break;\n        }\n    }\n    console.log(\"SupercontractsMap after deleting a contract\");\n    console.log(map);\n}\n\nfunction executeSuperContract(superKey) {\n    for (var [superContractId, contractsSet] of superContractsMap) {\n        if (superContractId === superKey) {\n            for (let contract of contractsSet) {\n                if (contract.toBeExecutedAtHorizon !== \"yes\") {\n                    executeSingleContract(contract);\n                }\n            }\n        }\n    }\n}\n\nfunction executeSingleContract(contract) {\n    var obsArr = contract.observablesArr;\n    if (obsArr.length > 0) {\n        for (var i = 0; i < obsArr.length; ++i) {\n            if (obsArr[i] === \"libor3m\") {\n                // rounding because Parity can only handle integers\n                contract.amount = (Math.round(parseFloat(contract.amount) * getOracleByAddress(agreedOracleAddress).getLiborSpotRate())).toString();\n            } else if (obsArr[i] === \"tempInLondon\") {\n                contract.amount = (Math.round(parseFloat(contract.amount) * getOracleByAddress(agreedOracleAddress).getTempInLondon())).toString();\n            }\n        }\n    }\n    holderAddress().then(holderAddress => {\n        counterPartyAddress().then(counterPartyAddress => {\n            if (contract.recipient == 0) { // owner receives\n                createMoveFile(counterPartyAddress, holderAddress, parseFloat(contract.amount));\n                callTransferFunction(contract, counterPartyAddress, holderAddress);\n            } else { // counter party receives\n                createMoveFile(holderAddress, counterPartyAddress, parseFloat(contract.amount));\n                callTransferFunction(contract, holderAddress, counterPartyAddress);\n            }\n            if (document.getElementById(\"td_status_\" + contract.id).innerHTML !== \"successful\") {\n                document.getElementById(\"td_status_\" + contract.id).innerHTML = \"not accepted by user\";\n            }\n        });\n    });\n}\n\nfunction callTransferFunction(contract, fromAddress, toAddress) {\n    balanceOfAddress(fromAddress).then(balance => {\n        if (balance >= parseFloat(contract.amount)) {\n            transfer(fromAddress, toAddress, parseFloat(contract.amount)).then(transferTxHash => {\n                // do not need to watch for transfer event as we do checks here.. watching the event may cause delays\n                waitForReceipt(transferTxHash).then( _ => {\n                    console.log(fromAddress + \" has transferred \" + contract.amount + \" Ether to \" + toAddress);\n                    document.getElementById(\"td_status_\" + contract.id).innerHTML = \"successful\";\n                    deleteFromSuperContracts(superContractsMap, contract.id.split(\".\")[0], contract);\n                    retrieveBalances();\n                });\n            });\n        } else {\n            document.getElementById(\"td_status_\" + contract.id).innerHTML = \"insufficient funds\";\n            if (beforeCurrentDate(contract.horizonDate, \"\")) {\n                document.getElementById(\"td_status_\" + contract.id).innerHTML = \"expired\";\n                deleteFromSuperContracts(superContractsMap, contract.id.split(\".\")[0], contract);\n            }\n        }\n    });\n}\n\nfunction enoughBalanceForCapacity(contract, balance) {\n    // compute sum of transactions in Map\n    var sum = 0;\n    for (var [superContractId, contractsSet] of superContractsMap) {\n        for (let contractInMap of contractsSet) {\n            sum += parseFloat(contractInMap.amount);\n        }\n    }\n    if (contract.recipient === 0) { // owner is recipient - if sum is +ve then that means holder is receiving and counter party paying\n        sum = -sum; // negate the sum for the counterparty\n    }\n    // subtract final sum + new tx amount from balance and check if >= 0\n    if ((balance - (sum + parseFloat(contract.amount))) >= 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction createMoveFile(sender_address, recipient_address, amount) {\n    var textToWrite = \"//! no-execute\\n\" +\n    \"import 0x0.LibraAccount;\\n\" +\n    \"import 0x0.LibraCoin;\\n \\n\" +\n    \"main(payee: address) {\\n\" +\n      \"\\t let coin: R#LibraCoin.T;\\n\" +\n      \"\\t let account_exists: bool;\\n\" +\n      \"\\t let recipient: address;\\n\" +\n      \"\\t let sender: address;\\n\" +\n      \"\\t sender = \" + sender_address + \";\\n\" +\n      \"\\t recipient = \" + recipient_address + \";\\n\" +\n      \"\\t coin = LibraAccount.withdraw_from_sender(\" + amount + \");\\n\" +\n      \"\\t account_exists = LibraAccount.exists(copy(recipient));\\n\" +\n      \"\\t if (!move(account_exists)) {\\n\" +\n      \"\\t \\t create_account(copy(recipient));\\n\" +\n      \"\\t }\\n\" +\n      \"\\t LibraAccount.deposit(move(recipient), move(coin));\\n\" +\n      \"\\t return;\\n\" +\n    \"}\";\n\n    var textFileAsBlob = new Blob([textToWrite], {type:'text/plain'});\n    var downloadLink = document.createElement(\"a\");\n    downloadLink.download = \"script.mvir\";\n    downloadLink.innerHTML = \"Download Move File\";\n    if (window.webkitURL != null) {\n        // Chrome allows the link to be clicked\n        // without actually adding it to the DOM.\n        downloadLink.href = window.webkitURL.createObjectURL(textFileAsBlob);\n    }\n    else {\n        // Firefox requires the link to be added to the DOM\n        // before it can be clicked.\n        downloadLink.href = window.URL.createObjectURL(textFileAsBlob);\n        downloadLink.onclick = destroyClickedElement;\n        downloadLink.style.display = \"none\";\n        document.body.appendChild(downloadLink);\n    }\n    //downloadLink.click(); // commented for testing purposes\n    console.log(\"Created and downloaded .mvir file.\");\n}\n\nfunction retrieveBalances() {\n    holderBalance().then(function(hBalance) {\n        document.getElementById(\"holder_balance_p\").innerHTML = \"Balance: \" + hBalance + \"ETH\";\n        counterPartyBalance().then(function(cBalance) {\n            document.getElementById(\"counter_party_balance_p\").innerHTML = \"Balance: \" + cBalance + \"ETH\";\n        });\n    });\n}\n\nfunction createTableRow(contract) {\n    var table = document.getElementById(\"my_table\");\n    let tr = table.insertRow(1);\n    tr.className = \"standard_row\";\n    var td;\n    tr.appendChild(td = document.createElement(\"td\"));\n    td.innerHTML = contract.id;\n    tr.appendChild(td = document.createElement(\"td\"));\n    td.innerHTML = changeDateFormatBack(contract.contractString);\n    tr.appendChild(td = document.createElement(\"td\"));\n    td.innerHTML = changeDateFormatBack(contract.meaningOfContractString);\n    tr.appendChild(td = document.createElement(\"td\"));\n    td.innerHTML = changeDateFormatBack(contract.horizonDate);\n    tr.appendChild(td = document.createElement(\"td\"));\n    td.innerHTML = contract.toBeExecutedAtHorizon;\n    tr.appendChild(td = document.createElement(\"td\"));\n    td.id = \"td_status_\" + contract.id;\n    td.innerHTML = contract.status;\n}\n\nfunction ownsRights(contractOwnerInt) {\n    var ownerAddress = contractOwnerInt === 0 ? document.getElementById(\"holder_address\").value : document.getElementById(\"counter_party_address\").value;\n    if (getSelectedMetaMaskAccount().toUpperCase() === ownerAddress.toUpperCase()) {\n        return true;\n    } else {\n        document.getElementById(\"transaction_status\").innerHTML = \"Please change the currently selected MetaMask account to the owner of the contract you are trying to make a choice on.\";\n        return false;\n    }\n}\n\nfunction createButton (contractString, beginningString, endString, buttonId, divId) {\n    var occ = occurrences(beginningString, \"give \", false);\n    var contractOwnerInt = occ % 2 === 0 ? 0 : 1;\n    var button = document.createElement(\"button\");\n    button.id = \"choices_button_\" + buttonId;\n    button.className = \"choices_button\";\n    button.innerHTML = cleanParens(contractString);\n    var finalContractString = beginningString + button.innerHTML + endString;\n    // 2. Append somewhere\n    var container = document.getElementById(\"section_\" + divId.toString());\n    container.appendChild(button);\n    // 3. Add event handler\n    button.addEventListener (\"click\", function() {\n        if (ownsRights(contractOwnerInt)) { // party must own the rights of the contract to make choice\n            removeChildren(\"section_\" + divId);\n            container.remove();\n            processContract(finalContractString, false);\n        }\n    });\n}\n\nfunction createSection(divId) {\n    var div = document.createElement(\"div\");\n    div.id = \"section_\" + divId.toString();\n    var para = document.createElement(\"p\");\n    var node = document.createTextNode(\"Contract choice:\");\n    para.appendChild(node);\n    div.appendChild(para);\n    var bottomContainer = document.getElementById(\"button_choices_container\");\n    bottomContainer.appendChild(div);\n}\n\nfunction createOrLabel(divId) {\n    var para = document.createElement(\"p\");\n    para.className = \"p_small\";\n    var node = document.createTextNode(\"OR\");\n    para.appendChild(node);\n    var container = document.getElementById(\"section_\" + divId.toString());\n    container.appendChild(para);\n}\n\nfunction removeChildren(containerString) {\n    var e = document.getElementById(containerString);\n    var child = e.lastElementChild;\n    while (child) {\n        e.removeChild(child);\n        child = e.lastElementChild;\n    }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566423908945
  },
  "{\"sourceRoot\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"filename\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/stringmanipulation.mjs\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/stringmanipulation.mjs",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/stringmanipulation.mjs",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/stringmanipulation.mjs",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js",
        "sourceFileName": "stringmanipulation.mjs"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cleanParens = cleanParens;\nexports.changeDateFormat = changeDateFormat;\nexports.changeDateFormatBack = changeDateFormatBack;\nexports.addSpacing = addSpacing;\nexports.addParens = addParens;\nexports.openingParensAmount = openingParensAmount;\nexports.closingParensAmount = closingParensAmount;\nexports.lTrimWhiteSpace = lTrimWhiteSpace;\nexports.rTrimWhiteSpace = rTrimWhiteSpace;\nexports.lTrimParen = lTrimParen;\nexports.rTrimParen = rTrimParen;\nexports.lTrimBrace = lTrimBrace;\nexports.rTrimBrace = rTrimBrace;\nexports.lTrimDoubleQuotes = lTrimDoubleQuotes;\nexports.rTrimDoubleQuotes = rTrimDoubleQuotes;\nexports.trimSemiColon = trimSemiColon;\nexports.padNumber = padNumber;\nexports.findNextConnective = findNextConnective;\nexports.findConsequent = findConsequent;\nexports.isDate = isDate;\nexports.sameDayAsCurrentDate = sameDayAsCurrentDate;\nexports.greaterDate = greaterDate;\nexports.equalDates = equalDates;\nexports.beforeCurrentDate = beforeCurrentDate;\nexports.computeDateString = computeDateString;\nexports.concatenate = concatenate;\n\n/**\n * @author Noah-Vincenz Noeh <noah-vincenz.noeh18@imperial.ac.uk>\n */\n\n/* jshint esversion: 6 */\n\n/**\n * Removes incorrect parenthesis from the start and end of a string and returns the modified string.\n * @param {string} str - The contract to modify.\n * @returns {string} The modified contract string.\n */\nfunction cleanParens(str) {\n  if (str === undefined) throw new Error(\"No string argument given.\");\n\n  if (str[str.length - 1] === \"(\") {\n    str = str.slice(0, -2);\n  }\n\n  if (str[0] === \")\") {\n    str = str.substr(2);\n  }\n\n  var strArr = str.split(\" \");\n\n  while (openingParensAmount(str) > closingParensAmount(str) && strArr[0] === \"(\") {\n    str = lTrimParen(str);\n    strArr = str.split(\" \");\n  }\n\n  while (openingParensAmount(str) < closingParensAmount(str) && strArr[strArr.length - 1] === \")\") {\n    str = rTrimParen(str);\n    strArr = str.split(\" \");\n  }\n\n  return str;\n}\n/**\n * Changes the date format of a string to one that separates date and time by '-' in order\n * to be able to split a contract by whitespaces.\n * @param {string} str - The contract to modify.\n * @returns {string} The modified contract string.\n */\n\n\nfunction changeDateFormat(str) {\n  if (str == undefined) throw new Error(\"No string argument given.\");\n  var regex = /(.*)(\\d\\d\\d\\d)\\s(\\d\\d)(.*)/;\n  var matchObj = regex.exec(str);\n\n  while (matchObj !== null) {\n    str = matchObj[1] + matchObj[2] + \"-\" + matchObj[3] + matchObj[4];\n    matchObj = regex.exec(str);\n  }\n\n  return str;\n}\n/**\n * Changes the date format of a string to one back to the original formate that\n * separates date and time by a whitespace.\n * @param {string} str - The contract to modify.\n * @returns {string} The modified contract string.\n */\n\n\nfunction changeDateFormatBack(str) {\n  if (str == undefined) throw new Error(\"No string argument given.\");\n  var regex = /(.*)(\\d\\d\\d\\d)-(\\d\\d)(.*)/;\n  var matchObj = regex.exec(str);\n\n  while (matchObj !== null) {\n    str = matchObj[1] + matchObj[2] + \" \" + matchObj[3] + matchObj[4];\n    matchObj = regex.exec(str);\n  }\n\n  return str;\n}\n/**\n * Adds spacing before and after parenthesis and curly braces in order to allow\n * splitting of a contract by whitespaces.\n * @param {string} str - The contract to modify.\n * @returns {string} The modified contract string.\n */\n\n\nfunction addSpacing(str) {\n  if (str == undefined) throw new Error(\"No string argument given.\"); // paren spacing\n\n  var regex1 = /(.*\\S)(\\()(.*)/;\n  var matchObj = regex1.exec(str);\n\n  while (matchObj !== null) {\n    str = matchObj[1] + \" \" + matchObj[2] + matchObj[3];\n    matchObj = regex1.exec(str);\n  }\n\n  var regex2 = /(.*\\S)(\\))(.*)/;\n  matchObj = regex2.exec(str);\n\n  while (matchObj !== null) {\n    str = matchObj[1] + \" \" + matchObj[2] + matchObj[3];\n    matchObj = regex2.exec(str);\n  }\n\n  var regex3 = /(.*)(\\()(\\S.*)/;\n  matchObj = regex3.exec(str);\n\n  while (matchObj !== null) {\n    str = matchObj[1] + matchObj[2] + \" \" + matchObj[3];\n    matchObj = regex3.exec(str);\n  }\n\n  var regex4 = /(.*)(\\))(\\S.*)/;\n  matchObj = regex4.exec(str);\n\n  while (matchObj !== null) {\n    str = matchObj[1] + matchObj[2] + \" \" + matchObj[3];\n    matchObj = regex4.exec(str);\n  } // braces spacing\n\n\n  var regex5 = /(.*\\S)({.*)/;\n  var matchObj = regex5.exec(str);\n\n  while (matchObj !== null) {\n    str = matchObj[1] + \" \" + matchObj[2];\n    matchObj = regex5.exec(str);\n  }\n\n  var regex6 = /(.*{)([^<>=\\s].*)/;\n  matchObj = regex6.exec(str);\n\n  while (matchObj !== null) {\n    str = matchObj[1] + \" \" + matchObj[2];\n    matchObj = regex6.exec(str);\n  }\n\n  var regex7 = /(.*[^<>=\\s])(}.*)/;\n  matchObj = regex7.exec(str);\n\n  while (matchObj !== null) {\n    str = matchObj[1] + \" \" + matchObj[2];\n    matchObj = regex7.exec(str);\n  }\n\n  var regex8 = /(.*})(\\S.*)/;\n  matchObj = regex8.exec(str);\n\n  while (matchObj !== null) {\n    str = matchObj[1] + \" \" + matchObj[2];\n    matchObj = regex8.exec(str);\n  }\n\n  return str;\n}\n/**\n * Adds parenthesis to the front of a string if a string has more closing parens then opening ones,\n * or to the end if it is the other way round.\n * @param {string} str - The string to modify.\n * @returns {string} The modified string.\n */\n\n\nfunction addParens(str) {\n  if (str == undefined) throw new Error(\"No string argument given.\");\n\n  while (openingParensAmount(str) > closingParensAmount(str)) {\n    str = str + \" )\";\n  }\n\n  while (openingParensAmount(str) < closingParensAmount(str)) {\n    str = \"( \" + str;\n  }\n\n  return str;\n}\n/**\n * Counts and returns the number of opening parenthesis contained inside a string.\n * @param {string} str - The string to iterate.\n * @returns {number} The number of opening parenthesis occurrences.\n */\n\n\nfunction openingParensAmount(str) {\n  if (str == undefined) throw new Error(\"No string argument given.\");\n  return str.split(\"(\").length - 1;\n}\n/**\n * Counts and returns the number of closing parenthesis contained inside a string.\n * @param {string} str - The string to iterate.\n * @returns {number} The number of closing parenthesis occurrences.\n */\n\n\nfunction closingParensAmount(str) {\n  if (str == undefined) throw new Error(\"No string argument given.\");\n  return str.split(\")\").length - 1;\n}\n/**\n * Removes whitespaces present at the beginning of a string.\n * @param {string} str - The string to modify.\n * @returns {string} The modified string.\n */\n\n\nfunction lTrimWhiteSpace(str) {\n  if (str == undefined) throw new Error(\"No string argument given.\");\n  return str.replace(/^\\s+/g, '');\n}\n/**\n * Removes whitespaces present at the end of a string.\n * @param {string} str - The string to modify.\n * @returns {string} The modified string.\n */\n\n\nfunction rTrimWhiteSpace(str) {\n  if (str == undefined) throw new Error(\"No string argument given.\");\n  return str.replace(/\\s+$/g, '');\n}\n/**\n * Removes an opening parenthesis present at the beginning of a string and the following whitespace.\n * @param {string} str - The string to modify.\n * @returns {string} The modified string.\n */\n\n\nfunction lTrimParen(str) {\n  if (str == undefined) throw new Error(\"No string argument given.\");\n\n  if (str.indexOf(\"(\") === 0) {\n    return str.slice(2);\n  }\n\n  return str;\n}\n/**\n * Removes a closing parenthesis present at the end of a string and the preceding whitespace.\n * @param {string} str - The string to modify.\n * @returns {string} The modified string.\n */\n\n\nfunction rTrimParen(str) {\n  if (str == undefined) throw new Error(\"No string argument given.\");\n\n  if (str.lastIndexOf(\")\") === str.length - 1) {\n    return str.slice(0, -2);\n  }\n\n  return str;\n}\n/**\n * Removes an opening curly brace present at the beginning of a string and the following whitespace.\n * @param {string} str - The string to modify.\n * @returns {string} The modified string.\n */\n\n\nfunction lTrimBrace(str) {\n  if (str == undefined) throw new Error(\"No string argument given.\");\n\n  if (str.indexOf(\"{\") === 0) {\n    return str.slice(2);\n  }\n\n  return str;\n}\n/**\n * Removes a closing curly brace present at the end of a string and the preceding whitespace.\n * @param {string} str - The string to modify.\n * @returns {string} The modified string.\n */\n\n\nfunction rTrimBrace(str) {\n  if (str == undefined) throw new Error(\"No string argument given.\");\n\n  if (str.lastIndexOf(\"}\") === str.length - 1) {\n    return str.slice(0, -2);\n  }\n\n  return str;\n}\n/**\n * Removes double quotes present at the beginning of a string.\n * @param {string} str - The string to modify.\n * @returns {string} The modified string.\n */\n\n\nfunction lTrimDoubleQuotes(str) {\n  if (str == undefined) throw new Error(\"No string argument given.\");\n  return str.replace(/^\\\"/, '');\n}\n/**\n * Removes double quotes present at the end of a string.\n * @param {string} str - The string to modify.\n * @returns {string} The modified string.\n */\n\n\nfunction rTrimDoubleQuotes(str) {\n  if (str == undefined) throw new Error(\"No string argument given.\");\n  return str.replace(/\\\"$/, '');\n}\n/**\n * Removes a single semi-colon present at the end of a string.\n * @param {string} str - The string to modify.\n * @returns {string} The modified string.\n */\n\n\nfunction trimSemiColon(str) {\n  if (str == undefined) throw new Error(\"No string argument given.\");\n  return str.replace(/;$/g, '');\n}\n\nfunction padNumber(number) {\n  if (number.length === 1) {\n    return \"0\" + number;\n  }\n\n  return number;\n}\n\nfunction findNextConnective(contractStringArr, indexToStartFrom) {\n  for (var i = indexToStartFrom; i < contractStringArr.length; ++i) {\n    var term = contractStringArr[i];\n\n    if (term === \"and\" || term === \"or\") {\n      return term;\n    }\n  }\n\n  return \"\";\n}\n\nfunction findConsequent(contractStringArr, indexToStartFrom) {\n  var returnString = \"\";\n\n  for (var i = indexToStartFrom; i < contractStringArr.length; ++i) {\n    var term = contractStringArr[i];\n\n    if (term === \"}\") {\n      return [returnString, i - indexToStartFrom + 1];\n    } else {\n      returnString = returnString === \"\" ? term : returnString + \" \" + term;\n    }\n  }\n\n  return [\"\", 0];\n}\n\nfunction isDate(stringInput) {\n  function obtainSubContractString(array, indexToStartFrom) {\n    // returns subcontractString and the number of items in the string\n    var stringToReturn = \"\";\n\n    if (array[indexToStartFrom] === \"(\") {\n      var openingParens = 1;\n\n      for (var i = indexToStartFrom + 1; i < array.length; ++i) {\n        // if string starts with opening paren wait until get balanced closing paren\n        var term = array[i];\n        stringToReturn = stringToReturn === \"\" ? term : stringToReturn + \" \" + term;\n\n        if (term === \"(\") {\n          ++openingParens;\n        } else if (term === \")\") {\n          --openingParens;\n        }\n\n        if (openingParens === 0) {\n          return [stringToReturn, i + 1 - indexToStartFrom];\n        }\n      }\n    } else {\n      // else wait until reading 'zero' or 'one' OR a number in the case it is called by getValue and has been replaced by a numbe\n      for (var i = indexToStartFrom; i < array.length; ++i) {\n        var term = array[i];\n        stringToReturn = stringToReturn === \"\" ? term : stringToReturn + \" \" + term;\n\n        if (term === \"one\" || term === \"zero\" || isNumeric(term)) {\n          // ---\n          return [stringToReturn, i + 1 - indexToStartFrom];\n        }\n      }\n    }\n  }\n\n  if (stringInput === undefined) {\n    return false;\n  }\n\n  var matches = stringInput.match(/^((0[1-9])|([12][0-9])|(3[01]))\\/((0[1-9])|(1[0-2]))\\/(\\d\\d\\d\\d)-((0[0-9])|(1[0-9])|(2[0-3])):([0-5][0-9]):([0-5][0-9])$/);\n\n  if (matches === null) {\n    return false;\n  } else if (matches[0] === stringInput) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction sameDayAsCurrentDate(contractHorizon, horizonToCheck) {\n  var contractDay = contractHorizon.split(\"-\")[0].split(\"/\")[0],\n      contractMonth = contractHorizon.split(\"-\")[0].split(\"/\")[1],\n      contractYear = contractHorizon.split(\"-\")[0].split(\"/\")[2];\n\n  if (horizonToCheck === \"\") {\n    var todayDay = new Date().getDate().toString(),\n        todayMonth = new Date().getMonth(),\n        todayYear = new Date().getFullYear().toString();\n\n    if (contractDay === todayDay && contractMonth === padNumber((todayMonth + 1).toString()) && contractYear === todayYear) {\n      return true;\n    }\n\n    return false;\n  } else {\n    var toCompareDay = horizonToCheck.split(\"-\")[0].split(\"/\")[0],\n        toCompareMonth = horizonToCheck.split(\"-\")[0].split(\"/\")[1],\n        toCompareYear = horizonToCheck.split(\"-\")[0].split(\"/\")[2];\n\n    if (contractDay === toCompareDay && contractMonth === toCompareMonth && contractYear === toCompareYear) {\n      return true;\n    }\n\n    return false;\n  }\n}\n\nfunction greaterDate(dateString1, dateString2) {\n  // returns true if dateString1 > dateString2\n  if (dateString1 === \"infinite\" || dateString2 === \"infinite\") {\n    if (dateString1 === \"infinite\" && dateString2 === \"infinite\") {\n      return false;\n    } else if (dateString1 === \"infinite\") {\n      return true;\n    } else {\n      return false;\n    }\n  } // for first date\n\n\n  var contractDate1 = new Date(computeDateString(dateString1)); // for second date\n\n  var contractDate2 = new Date(computeDateString(dateString2));\n\n  if (contractDate1.getTime() > contractDate2.getTime()) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction equalDates(dateString1, dateString2) {\n  // for first date\n  if (dateString1 === \"infinite\" || dateString2 === \"infinite\") {\n    if (dateString1 === \"infinite\" && dateString2 === \"infinite\") {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  var contractDate1 = new Date(computeDateString(dateString1)); // for second date\n\n  var contractDate2 = new Date(computeDateString(dateString2));\n\n  if (contractDate1.getTime() === contractDate2.getTime()) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction beforeCurrentDate(contractDate, horizonToCheck) {\n  if (horizonToCheck === \"\") {\n    // we want to compare against the current date - so it is valid even if it is equal to\n    if (contractDate === \"infinite\") {\n      return false;\n    }\n\n    var contractDate = new Date(computeDateString(contractDate));\n    var todayDate = new Date();\n\n    if (contractDate.getTime() < todayDate.getTime()) {\n      // Note the =\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    // we want to compare against another date, not the current date\n    if (horizonToCheck === \"infinite\" || contractDate === \"infinite\") {\n      if (horizonToCheck === \"infinite\" && contractDate === \"infinite\") {\n        return false;\n      } else if (horizonToCheck === \"infinite\") {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    var contractDate = new Date(computeDateString(contractDate));\n    var dateToCompareAgainst = new Date(computeDateString(horizonToCheck));\n\n    if (contractDate.getTime() < dateToCompareAgainst.getTime()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nfunction computeDateString(dateString) {\n  var horizonArr = dateString.split(\"-\"),\n      dateArr = horizonArr[0].split(\"/\"),\n      timeArr = horizonArr[1].split(\":\"),\n      finalDateString = dateArr[2] + \"-\" + dateArr[1] + \"-\" + dateArr[0] + \"T\" + timeArr[0] + \":\" + timeArr[1] + \":\" + timeArr[2] + \"+01:00\"; // adding 15 seconds to the contract's expiry date to allow it to execute\n\n  return finalDateString;\n}\n\nfunction concatenate(arr1, arr2) {\n  for (var i = 0; i < arr2.length; ++i) {\n    arr1.push(arr2[i]);\n  }\n\n  return arr1;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "stringmanipulation.mjs"
      ],
      "names": [
        "cleanParens",
        "str",
        "undefined",
        "Error",
        "length",
        "slice",
        "substr",
        "strArr",
        "split",
        "openingParensAmount",
        "closingParensAmount",
        "lTrimParen",
        "rTrimParen",
        "changeDateFormat",
        "regex",
        "matchObj",
        "exec",
        "changeDateFormatBack",
        "addSpacing",
        "regex1",
        "regex2",
        "regex3",
        "regex4",
        "regex5",
        "regex6",
        "regex7",
        "regex8",
        "addParens",
        "lTrimWhiteSpace",
        "replace",
        "rTrimWhiteSpace",
        "indexOf",
        "lastIndexOf",
        "lTrimBrace",
        "rTrimBrace",
        "lTrimDoubleQuotes",
        "rTrimDoubleQuotes",
        "trimSemiColon",
        "padNumber",
        "number",
        "findNextConnective",
        "contractStringArr",
        "indexToStartFrom",
        "i",
        "term",
        "findConsequent",
        "returnString",
        "isDate",
        "stringInput",
        "obtainSubContractString",
        "array",
        "stringToReturn",
        "openingParens",
        "isNumeric",
        "matches",
        "match",
        "sameDayAsCurrentDate",
        "contractHorizon",
        "horizonToCheck",
        "contractDay",
        "contractMonth",
        "contractYear",
        "todayDay",
        "Date",
        "getDate",
        "toString",
        "todayMonth",
        "getMonth",
        "todayYear",
        "getFullYear",
        "toCompareDay",
        "toCompareMonth",
        "toCompareYear",
        "greaterDate",
        "dateString1",
        "dateString2",
        "contractDate1",
        "computeDateString",
        "contractDate2",
        "getTime",
        "equalDates",
        "beforeCurrentDate",
        "contractDate",
        "todayDate",
        "dateToCompareAgainst",
        "dateString",
        "horizonArr",
        "dateArr",
        "timeArr",
        "finalDateString",
        "concatenate",
        "arr1",
        "arr2",
        "push"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js",
      "sourcesContent": [
        "/**\n * @author Noah-Vincenz Noeh <noah-vincenz.noeh18@imperial.ac.uk>\n */\n\n/* jshint esversion: 6 */\n\n/**\n * Removes incorrect parenthesis from the start and end of a string and returns the modified string.\n * @param {string} str - The contract to modify.\n * @returns {string} The modified contract string.\n */\nexport function cleanParens(str) {\n    if (str === undefined) throw new Error(\"No string argument given.\");\n    if (str[str.length - 1] === \"(\") {\n        str = str.slice(0, -2);\n    }\n    if (str[0] === \")\") {\n        str = str.substr(2);\n    }\n    var strArr = str.split(\" \");\n    while (openingParensAmount(str) > closingParensAmount(str) && strArr[0] === \"(\") {\n        str = lTrimParen(str);\n        strArr = str.split(\" \");\n    }\n    while (openingParensAmount(str) < closingParensAmount(str) && strArr[strArr.length - 1] === \")\") {\n        str = rTrimParen(str);\n        strArr = str.split(\" \");\n    }\n    return str;\n}\n\n/**\n * Changes the date format of a string to one that separates date and time by '-' in order\n * to be able to split a contract by whitespaces.\n * @param {string} str - The contract to modify.\n * @returns {string} The modified contract string.\n */\nexport function changeDateFormat(str) {\n  if (str == undefined) throw new Error(\"No string argument given.\");\n  const regex = /(.*)(\\d\\d\\d\\d)\\s(\\d\\d)(.*)/;\n  var matchObj = regex.exec(str);\n  while (matchObj !== null) {\n      str = matchObj[1] + matchObj[2] + \"-\" + matchObj[3] + matchObj[4];\n      matchObj = regex.exec(str);\n  }\n  return str;\n}\n\n/**\n * Changes the date format of a string to one back to the original formate that\n * separates date and time by a whitespace.\n * @param {string} str - The contract to modify.\n * @returns {string} The modified contract string.\n */\nexport function changeDateFormatBack(str) {\n  if (str == undefined) throw new Error(\"No string argument given.\");\n  const regex = /(.*)(\\d\\d\\d\\d)-(\\d\\d)(.*)/;\n  var matchObj = regex.exec(str);\n  while (matchObj !== null) {\n      str = matchObj[1] + matchObj[2] + \" \" + matchObj[3] + matchObj[4];\n      matchObj = regex.exec(str);\n  }\n  return str;\n}\n\n/**\n * Adds spacing before and after parenthesis and curly braces in order to allow\n * splitting of a contract by whitespaces.\n * @param {string} str - The contract to modify.\n * @returns {string} The modified contract string.\n */\nexport function addSpacing(str) {\n    if (str == undefined) throw new Error(\"No string argument given.\");\n    // paren spacing\n    const regex1 = /(.*\\S)(\\()(.*)/;\n    var matchObj = regex1.exec(str);\n    while (matchObj !== null) {\n        str = matchObj[1] + \" \" + matchObj[2] + matchObj[3];\n        matchObj = regex1.exec(str)\n    }\n    const regex2 = /(.*\\S)(\\))(.*)/;\n    matchObj = regex2.exec(str);\n    while (matchObj !== null) {\n        str = matchObj[1] + \" \" + matchObj[2] + matchObj[3];\n        matchObj = regex2.exec(str)\n    }\n    const regex3 = /(.*)(\\()(\\S.*)/;\n    matchObj = regex3.exec(str);\n    while (matchObj !== null) {\n        str = matchObj[1] + matchObj[2] + \" \" + matchObj[3];\n        matchObj = regex3.exec(str)\n    }\n    const regex4 = /(.*)(\\))(\\S.*)/;\n    matchObj = regex4.exec(str);\n    while (matchObj !== null) {\n        str = matchObj[1] + matchObj[2] + \" \" + matchObj[3];\n        matchObj = regex4.exec(str)\n    }\n    // braces spacing\n    const regex5 = /(.*\\S)({.*)/;\n    var matchObj = regex5.exec(str);\n    while (matchObj !== null) {\n        str = matchObj[1] + \" \" + matchObj[2];\n        matchObj = regex5.exec(str)\n    }\n    const regex6 = /(.*{)([^<>=\\s].*)/;\n    matchObj = regex6.exec(str);\n    while (matchObj !== null) {\n        str = matchObj[1] + \" \" + matchObj[2];\n        matchObj = regex6.exec(str)\n    }\n    const regex7 = /(.*[^<>=\\s])(}.*)/;\n    matchObj = regex7.exec(str);\n    while (matchObj !== null) {\n        str = matchObj[1] + \" \" + matchObj[2];\n        matchObj = regex7.exec(str)\n    }\n    const regex8 = /(.*})(\\S.*)/;\n    matchObj = regex8.exec(str);\n    while (matchObj !== null) {\n        str = matchObj[1] + \" \" + matchObj[2];\n        matchObj = regex8.exec(str)\n    }\n    return str;\n}\n\n/**\n * Adds parenthesis to the front of a string if a string has more closing parens then opening ones,\n * or to the end if it is the other way round.\n * @param {string} str - The string to modify.\n * @returns {string} The modified string.\n */\nexport function addParens(str) {\n    if (str == undefined) throw new Error(\"No string argument given.\");\n    while (openingParensAmount(str) > closingParensAmount(str)) {\n        str = str + \" )\";\n    }\n    while (openingParensAmount(str) < closingParensAmount(str)) {\n        str = \"( \" + str;\n    }\n    return str;\n}\n\n/**\n * Counts and returns the number of opening parenthesis contained inside a string.\n * @param {string} str - The string to iterate.\n * @returns {number} The number of opening parenthesis occurrences.\n */\nexport function openingParensAmount(str) {\n    if (str == undefined) throw new Error(\"No string argument given.\");\n    return str.split(\"(\").length - 1;\n}\n\n/**\n * Counts and returns the number of closing parenthesis contained inside a string.\n * @param {string} str - The string to iterate.\n * @returns {number} The number of closing parenthesis occurrences.\n */\nexport function closingParensAmount(str) {\n    if (str == undefined) throw new Error(\"No string argument given.\");\n    return str.split(\")\").length - 1;\n}\n\n/**\n * Removes whitespaces present at the beginning of a string.\n * @param {string} str - The string to modify.\n * @returns {string} The modified string.\n */\nexport function lTrimWhiteSpace(str) {\n    if (str == undefined) throw new Error(\"No string argument given.\");\n    return str.replace(/^\\s+/g, '');\n}\n\n/**\n * Removes whitespaces present at the end of a string.\n * @param {string} str - The string to modify.\n * @returns {string} The modified string.\n */\nexport function rTrimWhiteSpace(str) {\n    if (str == undefined) throw new Error(\"No string argument given.\");\n    return str.replace(/\\s+$/g, '');\n}\n\n/**\n * Removes an opening parenthesis present at the beginning of a string and the following whitespace.\n * @param {string} str - The string to modify.\n * @returns {string} The modified string.\n */\nexport function lTrimParen(str) {\n    if (str == undefined) throw new Error(\"No string argument given.\");\n    if (str.indexOf(\"(\") === 0) {\n      return str.slice(2);\n    }\n    return str;\n}\n\n/**\n * Removes a closing parenthesis present at the end of a string and the preceding whitespace.\n * @param {string} str - The string to modify.\n * @returns {string} The modified string.\n */\nexport function rTrimParen(str) {\n    if (str == undefined) throw new Error(\"No string argument given.\");\n    if (str.lastIndexOf(\")\") === str.length - 1) {\n        return str.slice(0, -2);\n    }\n    return str;\n}\n\n/**\n * Removes an opening curly brace present at the beginning of a string and the following whitespace.\n * @param {string} str - The string to modify.\n * @returns {string} The modified string.\n */\nexport function lTrimBrace(str) {\n    if (str == undefined) throw new Error(\"No string argument given.\");\n    if (str.indexOf(\"{\") === 0) {\n      return str.slice(2);\n    }\n    return str;\n}\n\n/**\n * Removes a closing curly brace present at the end of a string and the preceding whitespace.\n * @param {string} str - The string to modify.\n * @returns {string} The modified string.\n */\nexport function rTrimBrace(str) {\n    if (str == undefined) throw new Error(\"No string argument given.\");\n    if (str.lastIndexOf(\"}\") === str.length - 1) {\n        return str.slice(0, -2);\n    }\n    return str;\n}\n\n/**\n * Removes double quotes present at the beginning of a string.\n * @param {string} str - The string to modify.\n * @returns {string} The modified string.\n */\nexport function lTrimDoubleQuotes(str) {\n    if (str == undefined) throw new Error(\"No string argument given.\");\n    return str.replace(/^\\\"/, '');\n}\n\n/**\n * Removes double quotes present at the end of a string.\n * @param {string} str - The string to modify.\n * @returns {string} The modified string.\n */\nexport function rTrimDoubleQuotes(str) {\n    if (str == undefined) throw new Error(\"No string argument given.\");\n    return str.replace(/\\\"$/, '');\n}\n\n/**\n * Removes a single semi-colon present at the end of a string.\n * @param {string} str - The string to modify.\n * @returns {string} The modified string.\n */\nexport function trimSemiColon(str) {\n    if (str == undefined) throw new Error(\"No string argument given.\");\n    return str.replace(/;$/g, '');\n}\n\nexport function padNumber(number) {\n    if (number.length === 1) {\n        return \"0\" + number;\n    }\n    return number;\n}\n\nexport function findNextConnective(contractStringArr, indexToStartFrom) {\n    for (var i = indexToStartFrom; i < contractStringArr.length; ++i) {\n        var term = contractStringArr[i];\n        if (term === \"and\" || term === \"or\") {\n            return term;\n        }\n    }\n    return \"\";\n}\n\nexport function findConsequent(contractStringArr, indexToStartFrom) {\n    var returnString = \"\";\n    for (var i = indexToStartFrom; i < contractStringArr.length; ++i) {\n        var term = contractStringArr[i];\n        if (term === \"}\") {\n            return [returnString, i - indexToStartFrom + 1];\n        } else {\n            returnString = returnString === \"\" ? term : returnString + \" \" + term;\n        }\n    }\n    return [\"\", 0];\n}\n\nexport function isDate(stringInput) {function obtainSubContractString(array, indexToStartFrom) {\n    // returns subcontractString and the number of items in the string\n    var stringToReturn = \"\";\n    if (array[indexToStartFrom] === \"(\") {\n        var openingParens = 1;\n        for (var i = indexToStartFrom + 1; i < array.length; ++i) {\n            // if string starts with opening paren wait until get balanced closing paren\n            var term = array[i];\n            stringToReturn = stringToReturn === \"\" ? term : stringToReturn + \" \" + term;\n            if (term === \"(\") {\n                ++openingParens;\n            } else if (term === \")\") {\n                --openingParens;\n            }\n            if (openingParens === 0) {\n                return [stringToReturn, i + 1 - indexToStartFrom];\n            }\n        }\n    } else {\n        // else wait until reading 'zero' or 'one' OR a number in the case it is called by getValue and has been replaced by a numbe\n        for (var i = indexToStartFrom; i < array.length; ++i) {\n            var term = array[i];\n            stringToReturn = stringToReturn === \"\" ? term : stringToReturn + \" \" + term;\n            if (term === \"one\" || term === \"zero\" || isNumeric(term)) { // ---\n                return [stringToReturn, i + 1 - indexToStartFrom];\n            }\n        }\n    }\n}\n    if (stringInput === undefined) {\n        return false;\n    }\n    var matches = stringInput.match(/^((0[1-9])|([12][0-9])|(3[01]))\\/((0[1-9])|(1[0-2]))\\/(\\d\\d\\d\\d)-((0[0-9])|(1[0-9])|(2[0-3])):([0-5][0-9]):([0-5][0-9])$/);\n    if (matches === null) {\n        return false;\n    } else if (matches[0] === stringInput) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function sameDayAsCurrentDate(contractHorizon, horizonToCheck) {\n    var contractDay = contractHorizon.split(\"-\")[0].split(\"/\")[0],\n        contractMonth = contractHorizon.split(\"-\")[0].split(\"/\")[1],\n        contractYear = contractHorizon.split(\"-\")[0].split(\"/\")[2];\n    if (horizonToCheck === \"\") {\n        var todayDay = new Date().getDate().toString(),\n            todayMonth = new Date().getMonth(),\n            todayYear = new Date().getFullYear().toString();\n        if (contractDay === todayDay && contractMonth === padNumber((todayMonth + 1).toString()) && contractYear === todayYear) {\n            return true;\n        }\n        return false;\n    } else {\n        var toCompareDay = horizonToCheck.split(\"-\")[0].split(\"/\")[0],\n            toCompareMonth = horizonToCheck.split(\"-\")[0].split(\"/\")[1],\n            toCompareYear = horizonToCheck.split(\"-\")[0].split(\"/\")[2];\n        if (contractDay === toCompareDay && contractMonth === toCompareMonth && contractYear === toCompareYear) {\n            return true;\n        }\n        return false;\n    }\n}\n\nexport function greaterDate(dateString1, dateString2) {\n    // returns true if dateString1 > dateString2\n    if (dateString1 === \"infinite\" || dateString2 === \"infinite\") {\n        if (dateString1 === \"infinite\" && dateString2 === \"infinite\") {\n            return false;\n        } else if (dateString1 === \"infinite\") {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    // for first date\n    var contractDate1 = new Date(computeDateString(dateString1));\n    // for second date\n    var contractDate2 = new Date(computeDateString(dateString2));\n    if (contractDate1.getTime() > contractDate2.getTime()) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function equalDates(dateString1, dateString2) {\n    // for first date\n    if (dateString1 === \"infinite\" || dateString2 === \"infinite\") {\n        if (dateString1 === \"infinite\" && dateString2 === \"infinite\") {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    var contractDate1 = new Date(computeDateString(dateString1));\n    // for second date\n    var contractDate2 = new Date(computeDateString(dateString2));\n\n    if (contractDate1.getTime() === contractDate2.getTime()) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function beforeCurrentDate(contractDate, horizonToCheck) {\n  if (horizonToCheck === \"\") { // we want to compare against the current date - so it is valid even if it is equal to\n      if (contractDate === \"infinite\") {\n          return false;\n      }\n      var contractDate = new Date(computeDateString(contractDate));\n      var todayDate = new Date();\n      if (contractDate.getTime() < todayDate.getTime()) { // Note the =\n          return true;\n      } else {\n          return false;\n      }\n  } else { // we want to compare against another date, not the current date\n      if (horizonToCheck === \"infinite\" || contractDate === \"infinite\") {\n          if (horizonToCheck === \"infinite\" && contractDate === \"infinite\") {\n              return false;\n          } else if (horizonToCheck === \"infinite\") {\n              return true;\n          } else {\n              return false;\n          }\n      }\n      var contractDate = new Date(computeDateString(contractDate));\n      var dateToCompareAgainst = new Date(computeDateString(horizonToCheck));\n      if (contractDate.getTime() < dateToCompareAgainst.getTime()) {\n          return true;\n      } else {\n          return false;\n      }\n  }\n}\n\nexport function computeDateString(dateString) {\n    var horizonArr = dateString.split(\"-\"),\n        dateArr = horizonArr[0].split(\"/\"),\n        timeArr = horizonArr[1].split(\":\"),\n        finalDateString = dateArr[2] + \"-\" + dateArr[1] + \"-\"\n    + dateArr[0] + \"T\" + timeArr[0] + \":\" + timeArr[1] + \":\"\n    + timeArr[2] + \"+01:00\"; // adding 15 seconds to the contract's expiry date to allow it to execute\n    return finalDateString;\n}\n\nexport function concatenate(arr1, arr2) {\n    for (var i = 0; i < arr2.length; ++i) {\n        arr1.push(arr2[i]);\n    }\n    return arr1;\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566423722187
  },
  "{\"sourceRoot\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"filename\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/contract.mjs\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/contract.mjs",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/contract.mjs",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/contract.mjs",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js",
        "sourceFileName": "contract.mjs"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.translateContract = translateContract;\nexports.createNewContractString = createNewContractString;\nexports.Contract = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @author Noah-Vincenz Noeh <noah-vincenz.noeh18@imperial.ac.uk>\n */\n\n/* jshint esversion: 6 */\nvar Contract = function Contract(id, amount, observablesArr, recipient, contractString, meaningOfContractString, horizonDate, toBeExecutedAtHorizon, status) {\n  _classCallCheck(this, Contract);\n\n  this.id = id;\n  this.amount = amount;\n  this.observablesArr = observablesArr;\n  this.recipient = recipient;\n  this.contractString = contractString;\n  this.meaningOfContractString = meaningOfContractString;\n  this.horizonDate = horizonDate;\n  this.toBeExecutedAtHorizon = toBeExecutedAtHorizon;\n  this.status = status;\n};\n\nexports.Contract = Contract;\n\nfunction translateContract(recipient, amount, observablesArr, horizonDate, acquireAtHorizon) {\n  var to = \"holder\";\n  var from = \"counter-party\";\n  var hDate = \"\";\n\n  if (recipient === 1) {\n    to = \"counter-party\";\n    from = \"holder\";\n  }\n\n  if (horizonDate !== \"infinite\") {\n    if (acquireAtHorizon === \"yes\") {\n      hDate = \" at \" + horizonDate;\n    } else {\n      hDate = \" before \" + horizonDate;\n    }\n  }\n\n  var adj = \" is\";\n\n  if (parseFloat(amount) !== 1) {\n    if (parseFloat(amount) === 0) {\n      adj = \" are\";\n    } else {\n      adj = \"s are\";\n    }\n  }\n\n  if (observablesArr.length > 0 && amount !== \"0\") {\n    for (var i = 0; i < observablesArr.length; ++i) {\n      amount = amount + \"x\" + observablesArr[i];\n    }\n\n    adj = \"s are\";\n  }\n\n  return amount + \" Ether\" + adj + \" transferred from the \" + from + \" address to the \" + to + \" address\" + hDate + \".\";\n}\n\nfunction createNewContractString(amount, obsArr, recipient, horizonDate, acquireAtHorizon) {\n  var stringToReturn = \"\";\n\n  if (amount === \"0\") {\n    stringToReturn = \"zero\";\n  } else if (amount === \"1\" && obsArr.length === 0) {\n    stringToReturn = \"one\";\n  } else {\n    if (obsArr.length > 0) {\n      for (var i = 0; i < obsArr.length; ++i) {\n        amount = amount + \"x\" + observablesArr[i];\n      }\n    }\n\n    stringToReturn = \"scaleK \" + amount + \" ( one )\";\n  }\n\n  if (horizonDate !== \"infinite\") {\n    stringToReturn = \"truncate \" + horizonDate + \" ( \" + stringToReturn + \" )\";\n  }\n\n  if (recipient === 1) {\n    stringToReturn = \"give ( \" + stringToReturn + \" )\";\n  }\n\n  if (acquireAtHorizon === \"yes\") {\n    stringToReturn = \"get ( \" + stringToReturn + \" )\";\n  }\n\n  return stringToReturn;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRyYWN0Lm1qcyJdLCJuYW1lcyI6WyJDb250cmFjdCIsImlkIiwiYW1vdW50Iiwib2JzZXJ2YWJsZXNBcnIiLCJyZWNpcGllbnQiLCJjb250cmFjdFN0cmluZyIsIm1lYW5pbmdPZkNvbnRyYWN0U3RyaW5nIiwiaG9yaXpvbkRhdGUiLCJ0b0JlRXhlY3V0ZWRBdEhvcml6b24iLCJzdGF0dXMiLCJ0cmFuc2xhdGVDb250cmFjdCIsImFjcXVpcmVBdEhvcml6b24iLCJ0byIsImZyb20iLCJoRGF0ZSIsImFkaiIsInBhcnNlRmxvYXQiLCJsZW5ndGgiLCJpIiwiY3JlYXRlTmV3Q29udHJhY3RTdHJpbmciLCJvYnNBcnIiLCJzdHJpbmdUb1JldHVybiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7OztBQUlBO0lBRWFBLFEsR0FDVCxrQkFBWUMsRUFBWixFQUFnQkMsTUFBaEIsRUFBd0JDLGNBQXhCLEVBQXdDQyxTQUF4QyxFQUFtREMsY0FBbkQsRUFBbUVDLHVCQUFuRSxFQUE0RkMsV0FBNUYsRUFBeUdDLHFCQUF6RyxFQUFnSUMsTUFBaEksRUFBd0k7QUFBQTs7QUFDcEksT0FBS1IsRUFBTCxHQUFVQSxFQUFWO0FBQ0EsT0FBS0MsTUFBTCxHQUFjQSxNQUFkO0FBQ0EsT0FBS0MsY0FBTCxHQUFzQkEsY0FBdEI7QUFDQSxPQUFLQyxTQUFMLEdBQWlCQSxTQUFqQjtBQUNBLE9BQUtDLGNBQUwsR0FBc0JBLGNBQXRCO0FBQ0EsT0FBS0MsdUJBQUwsR0FBK0JBLHVCQUEvQjtBQUNBLE9BQUtDLFdBQUwsR0FBbUJBLFdBQW5CO0FBQ0EsT0FBS0MscUJBQUwsR0FBNkJBLHFCQUE3QjtBQUNBLE9BQUtDLE1BQUwsR0FBY0EsTUFBZDtBQUNILEM7Ozs7QUFHRSxTQUFTQyxpQkFBVCxDQUEyQk4sU0FBM0IsRUFBc0NGLE1BQXRDLEVBQThDQyxjQUE5QyxFQUE4REksV0FBOUQsRUFBMkVJLGdCQUEzRSxFQUE2RjtBQUNoRyxNQUFJQyxFQUFFLEdBQUcsUUFB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SCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbm9haC12aW5jZW56bm9laC9EZXNrdG9wL0ZpbmFuY2lhbC1TbWFydC1Db250cmFjdHMvc3JjL2pzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAYXV0aG9yIE5vYWgtVmluY2VueiBOb2VoIDxub2FoLXZpbmNlbnoubm9laDE4QGltcGVyaWFsLmFjLnVrPlxuICovXG5cbi8qIGpzaGludCBlc3ZlcnNpb246IDYgKi9cblxuZXhwb3J0IGNsYXNzIENvbnRyYWN0IHtcbiAgICBjb25zdHJ1Y3RvcihpZCwgYW1vdW50LCBvYnNlcnZhYmxlc0FyciwgcmVjaXBpZW50LCBjb250cmFjdFN0cmluZywgbWVhbmluZ09mQ29udHJhY3RTdHJpbmcsIGhvcml6b25EYXRlLCB0b0JlRXhlY3V0ZWRBdEhvcml6b24sIHN0YXR1cykge1xuICAgICAgICB0aGlzLmlkID0gaWQ7XG4gICAgICAgIHRoaXMuYW1vdW50ID0gYW1vdW50O1xuICAgICAgICB0aGlzLm9ic2VydmFibGVzQXJyID0gb2JzZXJ2YWJsZXNBcnI7XG4gICAgICAgIHRoaXMucmVjaXBpZW50ID0gcmVjaXBpZW50O1xuICAgICAgICB0aGlzLmNvbnRyYWN0U3RyaW5nID0gY29udHJhY3RTdHJpbmc7XG4gICAgICAgIHRoaXMubWVhbmluZ09mQ29udHJhY3RTdHJpbmcgPSBtZWFuaW5nT2ZDb250cmFjdFN0cmluZztcbiAgICAgICAgdGhpcy5ob3Jpem9uRGF0ZSA9IGhvcml6b25EYXRlO1xuICAgICAgICB0aGlzLnRvQmVFeGVjdXRlZEF0SG9yaXpvbiA9IHRvQmVFeGVjdXRlZEF0SG9yaXpvbjtcbiAgICAgICAgdGhpcy5zdGF0dXMgPSBzdGF0dXM7XG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdHJhbnNsYXRlQ29udHJhY3QocmVjaXBpZW50LCBhbW91bnQsIG9ic2VydmFibGVzQXJyLCBob3Jpem9uRGF0ZSwgYWNxdWlyZUF0SG9yaXpvbikge1xuICAgIHZhciB0byA9IFwiaG9sZGVyXCI7XG4gICAgdmFyIGZyb20gPSBcImNvdW50ZXItcGFydHlcIjtcbiAgICB2YXIgaERhdGUgPSBcIlwiO1xuICAgIGlmIChyZWNpcGllbnQgPT09IDEpIHtcbiAgICAgICAgdG8gPSBcImNvdW50ZXItcGFydHlcIjtcbiAgICAgICAgZnJvbSA9IFwiaG9sZGVyXCI7XG4gICAgfVxuICAgIGlmIChob3Jpem9uRGF0ZSAhPT0gXCJpbmZpbml0ZVwiKSB7XG4gICAgICAgIGlmIChhY3F1aXJlQXRIb3Jpem9uID09PSBcInllc1wiKSB7XG4gICAgICAgICAgICBoRGF0ZSA9IFwiIGF0IFwiICsgaG9yaXpvbkRhdGU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBoRGF0ZSA9IFwiIGJlZm9yZSBcIiArIGhvcml6b25EYXRlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHZhciBhZGogPSBcIiBpc1wiO1xuICAgIGlmIChwYXJzZUZsb2F0KGFtb3VudCkgIT09IDEpIHtcbiAgICAgICAgaWYgKHBhcnNlRmxvYXQoYW1vdW50KSA9PT0gMCkge1xuICAgICAgICAgICAgYWRqID0gXCIgYXJlXCI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBhZGogPSBcInMgYXJlXCI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKG9ic2VydmFibGVzQXJyLmxlbmd0aCA+IDAgJiYgYW1vdW50ICE9PSBcIjBcIikge1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG9ic2VydmFibGVzQXJyLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICBhbW91bnQgPSBhbW91bnQgKyBcInhcIiArIG9ic2VydmFibGVzQXJyW2ldO1xuICAgICAgICB9XG4gICAgICAgIGFkaiA9IFwicyBhcmVcIjtcbiAgICB9XG4gICAgcmV0dXJuIGFtb3VudCArIFwiIEV0aGVyXCIgKyBhZGogKyBcIiB0cmFuc2ZlcnJlZCBmcm9tIHRoZSBcIiArIGZyb20gKyBcIiBhZGRyZXNzIHRvIHRoZSBcIiArIHRvICsgXCIgYWRkcmVzc1wiICsgaERhdGUgKyBcIi5cIjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU5ld0NvbnRyYWN0U3RyaW5nKGFtb3VudCwgb2JzQXJyLCByZWNpcGllbnQsIGhvcml6b25EYXRlLCBhY3F1aXJlQXRIb3Jpem9uKSB7XG4gICAgdmFyIHN0cmluZ1RvUmV0dXJuID0gXCJcIjtcbiAgICBpZiAoYW1vdW50ID09PSBcIjBcIikge1xuICAgICAgICBzdHJpbmdUb1JldHVybiA9IFwiemVyb1wiO1xuICAgIH0gZWxzZSBpZiAoYW1vdW50ID09PSBcIjFcIiAmJiBvYnNBcnIubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHN0cmluZ1RvUmV0dXJuID0gXCJvbmVcIjtcbiAgICB9IGVsc2Uge1xuICAgICAgICBpZiAob2JzQXJyLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb2JzQXJyLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgYW1vdW50ID0gYW1vdW50ICsgXCJ4XCIgKyBvYnNlcnZhYmxlc0FycltpXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBzdHJpbmdUb1JldHVybiA9IFwic2NhbGVLIFwiICsgYW1vdW50ICsgXCIgKCBvbmUgKVwiO1xuICAgIH1cbiAgICBpZiAoaG9yaXpvbkRhdGUgIT09IFwiaW5maW5pdGVcIikge1xuICAgICAgICBzdHJpbmdUb1JldHVybiA9IFwidHJ1bmNhdGUgXCIgKyBob3Jpem9uRGF0ZSArIFwiICggXCIgKyBzdHJpbmdUb1JldHVybiArIFwiIClcIjtcbiAgICB9XG4gICAgaWYgKHJlY2lwaWVudCA9PT0gMSkge1xuICAgICAgICBzdHJpbmdUb1JldHVybiA9IFwiZ2l2ZSAoIFwiICsgc3RyaW5nVG9SZXR1cm4gKyBcIiApXCJcbiAgICB9XG4gICAgaWYgKGFjcXVpcmVBdEhvcml6b24gPT09IFwieWVzXCIpIHtcbiAgICAgICAgc3RyaW5nVG9SZXR1cm4gPSBcImdldCAoIFwiICsgc3RyaW5nVG9SZXR1cm4gKyBcIiApXCJcbiAgICB9XG4gICAgcmV0dXJuIHN0cmluZ1RvUmV0dXJuO1xufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "contract.mjs"
      ],
      "names": [
        "Contract",
        "id",
        "amount",
        "observablesArr",
        "recipient",
        "contractString",
        "meaningOfContractString",
        "horizonDate",
        "toBeExecutedAtHorizon",
        "status",
        "translateContract",
        "acquireAtHorizon",
        "to",
        "from",
        "hDate",
        "adj",
        "parseFloat",
        "length",
        "i",
        "createNewContractString",
        "obsArr",
        "stringToReturn"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js",
      "sourcesContent": [
        "/**\n * @author Noah-Vincenz Noeh <noah-vincenz.noeh18@imperial.ac.uk>\n */\n\n/* jshint esversion: 6 */\n\nexport class Contract {\n    constructor(id, amount, observablesArr, recipient, contractString, meaningOfContractString, horizonDate, toBeExecutedAtHorizon, status) {\n        this.id = id;\n        this.amount = amount;\n        this.observablesArr = observablesArr;\n        this.recipient = recipient;\n        this.contractString = contractString;\n        this.meaningOfContractString = meaningOfContractString;\n        this.horizonDate = horizonDate;\n        this.toBeExecutedAtHorizon = toBeExecutedAtHorizon;\n        this.status = status;\n    }\n}\n\nexport function translateContract(recipient, amount, observablesArr, horizonDate, acquireAtHorizon) {\n    var to = \"holder\";\n    var from = \"counter-party\";\n    var hDate = \"\";\n    if (recipient === 1) {\n        to = \"counter-party\";\n        from = \"holder\";\n    }\n    if (horizonDate !== \"infinite\") {\n        if (acquireAtHorizon === \"yes\") {\n            hDate = \" at \" + horizonDate;\n        } else {\n            hDate = \" before \" + horizonDate;\n        }\n    }\n    var adj = \" is\";\n    if (parseFloat(amount) !== 1) {\n        if (parseFloat(amount) === 0) {\n            adj = \" are\";\n        } else {\n            adj = \"s are\";\n        }\n    }\n    if (observablesArr.length > 0 && amount !== \"0\") {\n        for (var i = 0; i < observablesArr.length; ++i) {\n            amount = amount + \"x\" + observablesArr[i];\n        }\n        adj = \"s are\";\n    }\n    return amount + \" Ether\" + adj + \" transferred from the \" + from + \" address to the \" + to + \" address\" + hDate + \".\";\n}\n\nexport function createNewContractString(amount, obsArr, recipient, horizonDate, acquireAtHorizon) {\n    var stringToReturn = \"\";\n    if (amount === \"0\") {\n        stringToReturn = \"zero\";\n    } else if (amount === \"1\" && obsArr.length === 0) {\n        stringToReturn = \"one\";\n    } else {\n        if (obsArr.length > 0) {\n            for (var i = 0; i < obsArr.length; ++i) {\n                amount = amount + \"x\" + observablesArr[i];\n            }\n        }\n        stringToReturn = \"scaleK \" + amount + \" ( one )\";\n    }\n    if (horizonDate !== \"infinite\") {\n        stringToReturn = \"truncate \" + horizonDate + \" ( \" + stringToReturn + \" )\";\n    }\n    if (recipient === 1) {\n        stringToReturn = \"give ( \" + stringToReturn + \" )\"\n    }\n    if (acquireAtHorizon === \"yes\") {\n        stringToReturn = \"get ( \" + stringToReturn + \" )\"\n    }\n    return stringToReturn;\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566424054758
  },
  "{\"sourceRoot\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/deploy\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"filename\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/deploy/deploy.mjs\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/deploy",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/deploy/deploy.mjs",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/deploy/deploy.mjs",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/deploy/deploy.mjs",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/deploy",
        "sourceFileName": "deploy.mjs"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSelectedMetaMaskAccount = getSelectedMetaMaskAccount;\nexports.getSelectedNetwork = getSelectedNetwork;\nexports.setDefaultAccount = setDefaultAccount;\nexports.setSmartContractInstance = setSmartContractInstance;\nexports.instantiateNew = instantiateNew;\nexports.depositCollateral = depositCollateral;\nexports.holderBalance = holderBalance;\nexports.counterPartyBalance = counterPartyBalance;\nexports.holderAddress = holderAddress;\nexports.counterPartyAddress = counterPartyAddress;\nexports.balanceOfAddress = balanceOfAddress;\nexports.watchTransferEvent = watchTransferEvent;\nexports.transfer = transfer;\nexports.waitForReceipt = waitForReceipt;\n\nvar _resources = require(\"./resources.mjs\");\n\n/**\n * @author Noah-Vincenz Noeh <noah-vincenz.noeh18@imperial.ac.uk>\n */\n\n/* jshint esversion: 6 */\nvar abi;\nvar codeHex;\nvar smartContract;\nvar smartContractInstance;\nwindow.addEventListener('load', function () {\n  if (typeof web3 !== 'undefined') {\n    console.log('Web3 Detected! ' + web3.currentProvider.constructor.name);\n    console.log(\"Web3 Version: \" + web3.version.api);\n    abi = _resources.ABI;\n    codeHex = web3.toHex(_resources.CODE_HEX);\n    smartContract = web3.eth.contract(abi);\n  } else {\n    console.log('No Web3 Detected... using HTTP Provider');\n    window.web3 = new Web3(new Web3.providers.HttpProvider(\"http://localhost:8545\"));\n  }\n});\n\nfunction getSelectedMetaMaskAccount() {\n  return web3.eth.accounts[0];\n}\n\nfunction getSelectedNetwork() {\n  return web3.version.network;\n}\n\nfunction setDefaultAccount(address) {\n  web3.eth.defaultAccount = address;\n}\n\nfunction setSmartContractInstance(contractAddress) {\n  smartContractInstance = smartContract.at(contractAddress);\n} // this does not exist for Kovan chain\n\n\nfunction unlockAccount(address) {\n  return new Promise(function (resolve, reject) {\n    web3.personal.unlockAccount(address, \"user\", web3.toHex(0), function (err, result) {\n      if (err) {\n        reject(err);\n      } else {\n        console.log(\"Account has been unlocked: \" + JSON.stringify(result));\n        resolve();\n      }\n    });\n  });\n}\n\nfunction instantiateNew(holderAddress, counterPartyAddress) {\n  return new Promise(function (resolve, reject) {\n    smartContract[\"new\"](holderAddress, counterPartyAddress, {\n      data: codeHex,\n      from: web3.eth.defaultAccount\n    }, function (err, contractInstance) {\n      //smartContract.new({data: dataIn, from: web3.eth.defaultAccount, gasPrice: 4000000000, gas: gasLimit}, function (err, contractInstance) {\n      if (err) {\n        reject(err);\n      } else {\n        var transactionHash = contractInstance.transactionHash;\n        console.log(\"TransactionHash: \" + transactionHash + \" waiting to be mined...\");\n        resolve(transactionHash);\n      }\n    });\n  });\n}\n\nfunction depositCollateral(senderAddress, amount) {\n  return new Promise(function (resolve, reject) {\n    smartContractInstance.depositCollateral(amount, {\n      from: senderAddress,\n      value: web3.toWei(amount, \"ether\")\n    }, function (err, result) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(result.toString(10));\n      }\n    });\n  });\n}\n\nfunction holderBalance() {\n  return new Promise(function (resolve, reject) {\n    smartContractInstance.holderBalance(function (err, result) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(web3.toDecimal(result));\n      }\n    });\n  });\n}\n\nfunction counterPartyBalance() {\n  return new Promise(function (resolve, reject) {\n    smartContractInstance.counterPartyBalance(function (err, result) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(web3.toDecimal(result));\n      }\n    });\n  });\n}\n\nfunction holderAddress() {\n  return new Promise(function (resolve, reject) {\n    smartContractInstance.holderAddress(function (err, result) {\n      if (err) {\n        reject(err);\n      } else {\n        var unpaddedAddr = web3.toHex(result.toString(10)); // pad address to length of 42\n\n        var paddedAddr = unpaddedAddr.split(\"0x\")[1].padStart(40, '0');\n        resolve(\"0x\" + paddedAddr);\n      }\n    });\n  });\n}\n\nfunction counterPartyAddress() {\n  return new Promise(function (resolve, reject) {\n    smartContractInstance.counterPartyAddress(function (err, result) {\n      if (err) {\n        reject(err);\n      } else {\n        var unpaddedAddr = web3.toHex(result.toString(10)); // pad address to length of 42\n\n        var paddedAddr = unpaddedAddr.split(\"0x\")[1].padStart(40, '0');\n        resolve(\"0x\" + paddedAddr);\n      }\n    });\n  });\n}\n\nfunction balanceOfAddress(address) {\n  return new Promise(function (resolve, reject) {\n    smartContractInstance.balanceOfAddress(web3.toChecksumAddress(address), function (err, result) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(web3.toDecimal(result));\n      }\n    });\n  });\n}\n\nfunction watchTransferEvent() {\n  return new Promise(function (resolve, reject) {\n    smartContractInstance.TransferEvent({}, function (err, event) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(event.args.result); // returns ints regarding state of transfer\n      }\n    });\n  });\n}\n\nfunction transfer(fromAddress, toAddress, amount) {\n  return new Promise(function (resolve, reject) {\n    smartContractInstance.transfer(fromAddress, toAddress, amount, function (err, result) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(result);\n      }\n    });\n  });\n}\n\nfunction waitForReceipt(transactionHash) {\n  return new Promise(function (resolve, reject) {\n    web3.eth.getTransactionReceipt(transactionHash, function (err, receipt) {\n      if (err) {\n        reject(err);\n      } else {\n        if (receipt !== null) {\n          // Transaction went through\n          resolve(receipt);\n        } else {\n          // Try again in 1 second\n          window.setTimeout(function () {\n            waitForReceipt(transactionHash);\n          }, 1000);\n        }\n      }\n    });\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "deploy.mjs"
      ],
      "names": [
        "abi",
        "codeHex",
        "smartContract",
        "smartContractInstance",
        "window",
        "addEventListener",
        "web3",
        "console",
        "log",
        "currentProvider",
        "constructor",
        "name",
        "version",
        "api",
        "ABI",
        "toHex",
        "CODE_HEX",
        "eth",
        "contract",
        "Web3",
        "providers",
        "HttpProvider",
        "getSelectedMetaMaskAccount",
        "accounts",
        "getSelectedNetwork",
        "network",
        "setDefaultAccount",
        "address",
        "defaultAccount",
        "setSmartContractInstance",
        "contractAddress",
        "at",
        "unlockAccount",
        "Promise",
        "resolve",
        "reject",
        "personal",
        "err",
        "result",
        "JSON",
        "stringify",
        "instantiateNew",
        "holderAddress",
        "counterPartyAddress",
        "data",
        "from",
        "contractInstance",
        "transactionHash",
        "depositCollateral",
        "senderAddress",
        "amount",
        "value",
        "toWei",
        "toString",
        "holderBalance",
        "toDecimal",
        "counterPartyBalance",
        "unpaddedAddr",
        "paddedAddr",
        "split",
        "padStart",
        "balanceOfAddress",
        "toChecksumAddress",
        "watchTransferEvent",
        "TransferEvent",
        "event",
        "args",
        "transfer",
        "fromAddress",
        "toAddress",
        "waitForReceipt",
        "getTransactionReceipt",
        "receipt",
        "setTimeout"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/deploy",
      "sourcesContent": [
        "/**\n * @author Noah-Vincenz Noeh <noah-vincenz.noeh18@imperial.ac.uk>\n */\n\n/* jshint esversion: 6 */\n\nimport {CODE_HEX, ABI} from \"./resources.mjs\";\n\nvar abi;\nvar codeHex;\nvar smartContract;\nvar smartContractInstance;\n\nwindow.addEventListener('load', function () {\n    if (typeof web3 !== 'undefined') {\n\n        console.log('Web3 Detected! ' + web3.currentProvider.constructor.name);\n        console.log(\"Web3 Version: \" + web3.version.api);\n        abi = ABI;\n        codeHex = web3.toHex(CODE_HEX);\n        smartContract = web3.eth.contract(abi);\n\n    } else {\n        console.log('No Web3 Detected... using HTTP Provider')\n        window.web3 = new Web3(new Web3.providers.HttpProvider(\"http://localhost:8545\"));\n    }\n});\n\nexport function getSelectedMetaMaskAccount() {\n    return web3.eth.accounts[0];\n}\n\nexport function getSelectedNetwork() {\n    return web3.version.network;\n}\n\nexport function setDefaultAccount(address) {\n    web3.eth.defaultAccount = address;\n}\n\nexport function setSmartContractInstance(contractAddress) {\n    smartContractInstance = smartContract.at(contractAddress);\n}\n\n// this does not exist for Kovan chain\nfunction unlockAccount(address) {\n    return new Promise (function (resolve, reject) {\n        web3.personal.unlockAccount(address, \"user\", web3.toHex(0), function(err, result) {\n            if (err) {\n              reject(err);\n            } else {\n              console.log(\"Account has been unlocked: \" + JSON.stringify(result));\n              resolve();\n            }\n        });\n    });\n}\n\nexport function instantiateNew (holderAddress, counterPartyAddress) {\n    return new Promise (function (resolve, reject) {\n        smartContract.new(holderAddress, counterPartyAddress, {data: codeHex, from: web3.eth.defaultAccount}, function (err, contractInstance) {\n        //smartContract.new({data: dataIn, from: web3.eth.defaultAccount, gasPrice: 4000000000, gas: gasLimit}, function (err, contractInstance) {\n            if (err) {\n                reject(err);\n            } else {\n                var transactionHash = contractInstance.transactionHash;\n                console.log(\"TransactionHash: \" + transactionHash + \" waiting to be mined...\");\n                resolve(transactionHash);\n            }\n        });\n    });\n}\n\nexport function depositCollateral(senderAddress, amount) {\n    return new Promise (function (resolve, reject) {\n        smartContractInstance.depositCollateral(amount, {from: senderAddress, value: web3.toWei(amount, \"ether\")}, function (err, result) {\n            if(err) {\n                  reject(err);\n            } else {\n                  resolve(result.toString(10));\n            }\n        });\n    });\n}\n\nexport function holderBalance() {\n    return new Promise (function (resolve, reject) {\n        smartContractInstance.holderBalance(function (err, result) {\n            if(err) {\n                  reject(err);\n            } else {\n                  resolve(web3.toDecimal(result));\n            }\n        });\n    });\n}\n\nexport function counterPartyBalance() {\n    return new Promise (function (resolve, reject) {\n        smartContractInstance.counterPartyBalance(function (err, result) {\n            if(err) {\n                  reject(err);\n            } else {\n                  resolve(web3.toDecimal(result));\n            }\n        });\n    });\n}\n\nexport function holderAddress() {\n    return new Promise (function (resolve, reject) {\n        smartContractInstance.holderAddress(function (err, result) {\n            if(err) {\n                  reject(err);\n            } else {\n                  var unpaddedAddr = web3.toHex(result.toString(10));\n                  // pad address to length of 42\n                  var paddedAddr = unpaddedAddr.split(\"0x\")[1].padStart(40, '0');\n                  resolve(\"0x\" + paddedAddr);\n            }\n        });\n    });\n}\n\nexport function counterPartyAddress() {\n    return new Promise (function (resolve, reject) {\n        smartContractInstance.counterPartyAddress(function (err, result) {\n            if(err) {\n                  reject(err);\n            } else {\n                  var unpaddedAddr = web3.toHex(result.toString(10));\n                  // pad address to length of 42\n                  var paddedAddr = unpaddedAddr.split(\"0x\")[1].padStart(40, '0');\n                  resolve(\"0x\" + paddedAddr);\n            }\n        });\n    });\n}\n\nexport function balanceOfAddress(address) {\n    return new Promise (function (resolve, reject) {\n        smartContractInstance.balanceOfAddress(web3.toChecksumAddress(address), function (err, result) {\n            if(err) {\n                  reject(err);\n            } else {\n                  resolve(web3.toDecimal(result));\n            }\n        });\n    });\n}\n\nexport function watchTransferEvent() {\n    return new Promise (function (resolve, reject) {\n        smartContractInstance.TransferEvent({}, function (err, event) {\n            if (err) {\n                reject(err);\n            } else {\n                resolve(event.args.result); // returns ints regarding state of transfer\n            }\n        });\n    });\n}\n\n\nexport function transfer(fromAddress, toAddress, amount) {\n  return new Promise (function (resolve, reject) {\n      smartContractInstance.transfer(fromAddress, toAddress, amount, function(err, result) {\n          if (err) {\n              reject(err);\n          } else {\n              resolve(result);\n          }\n      });\n  });\n}\n\nexport function waitForReceipt(transactionHash) {\n  return new Promise (function (resolve, reject) {\n      web3.eth.getTransactionReceipt(transactionHash, function (err, receipt) {\n\n            if (err) {\n                reject(err);\n            } else {\n              if (receipt !== null) {\n                // Transaction went through\n                resolve(receipt);\n              } else {\n                // Try again in 1 second\n                window.setTimeout(function () {\n                  waitForReceipt(transactionHash);\n                }, 1000);\n              }\n            }\n      });\n  });\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566301804049
  },
  "{\"sourceRoot\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/deploy\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"filename\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/deploy/resources.mjs\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/deploy",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/deploy/resources.mjs",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/deploy/resources.mjs",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/deploy/resources.mjs",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/deploy",
        "sourceFileName": "resources.mjs"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CODE_HEX = exports.ABI = void 0;\nvar ABI = [{\n  \"type\": \"function\",\n  \"name\": \"balanceOfAddress\",\n  \"inputs\": [{\n    \"name\": \"_address\",\n    \"type\": \"address\"\n  }],\n  \"outputs\": [{\n    \"name\": \"returnValue0\",\n    \"type\": \"uint256\"\n  }],\n  \"constant\": true,\n  \"payable\": false\n}, {\n  \"type\": \"function\",\n  \"name\": \"holderBalance\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"returnValue0\",\n    \"type\": \"uint256\"\n  }],\n  \"constant\": true,\n  \"payable\": false\n}, {\n  \"type\": \"function\",\n  \"name\": \"counterPartyBalance\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"returnValue0\",\n    \"type\": \"uint256\"\n  }],\n  \"constant\": true,\n  \"payable\": false\n}, {\n  \"type\": \"function\",\n  \"name\": \"callerBalance\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"returnValue0\",\n    \"type\": \"uint256\"\n  }],\n  \"constant\": true,\n  \"payable\": false\n}, {\n  \"type\": \"function\",\n  \"name\": \"holderAddress\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"returnValue0\",\n    \"type\": \"uint256\"\n  }],\n  \"constant\": true,\n  \"payable\": false\n}, {\n  \"type\": \"function\",\n  \"name\": \"counterPartyAddress\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"returnValue0\",\n    \"type\": \"uint256\"\n  }],\n  \"constant\": true,\n  \"payable\": false\n}, {\n  \"type\": \"function\",\n  \"name\": \"callerAddress\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"returnValue0\",\n    \"type\": \"uint256\"\n  }],\n  \"constant\": true,\n  \"payable\": false\n}, {\n  \"type\": \"function\",\n  \"name\": \"transfer\",\n  \"inputs\": [{\n    \"name\": \"_from\",\n    \"type\": \"address\"\n  }, {\n    \"name\": \"_to\",\n    \"type\": \"address\"\n  }, {\n    \"name\": \"_amount\",\n    \"type\": \"uint256\"\n  }],\n  \"outputs\": [],\n  \"constant\": false,\n  \"payable\": false\n}, {\n  \"type\": \"function\",\n  \"name\": \"depositCollateral\",\n  \"inputs\": [{\n    \"name\": \"amount\",\n    \"type\": \"uint256\"\n  }],\n  \"outputs\": [],\n  \"constant\": false,\n  \"payable\": true\n}, {\n  \"type\": \"event\",\n  \"name\": \"TransferEvent\",\n  \"inputs\": [{\n    \"name\": \"result\",\n    \"type\": \"int32\",\n    \"indexed\": false\n  }]\n}, {\n  \"type\": \"constructor\",\n  \"inputs\": [{\n    \"name\": \"holder_address\",\n    \"type\": \"address\"\n  }, {\n    \"name\": \"counter_party_address\",\n    \"type\": \"address\"\n  }]\n}];\nexports.ABI = ABI;\nvar CODE_HEX = 'nexports.CODE_HEX = CODE_HEX;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "resources.mjs"
      ],
      "names": [
        "ABI",
        "CODE_HEX"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,GAAG,GAAG,CACjB;AACE,UAAQ,UADV;AAEE,UAAQ,kBAFV;AAGE,YAAU,CACR;AACE,YAAQ,UADV;AAEE,YAAQ;AAFV,GADQ,CAHZ;AASE,aAAW,CACT;AACE,YAAQ,cADV;AAEE,YAAQ;AAFV,GADS,CATb;AAeE,cAAY,IAfd;AAgBE,aAAW;AAhBb,CADiB,EAmBjB;AACE,UAAQ,UADV;AAEE,UAAQ,eAFV;AAGE,YAAU,EAHZ;AAIE,aAAW,CACT;AACE,YAAQ,cADV;AAEE,YAAQ;AAFV,GADS,CAJb;AAUE,cAAY,IAVd;AAWE,aAAW;AAXb,CAnBiB,EAgCjB;AACE,UAAQ,UADV;AAEE,UAAQ,qBAFV;AAGE,YAAU,EAHZ;AAIE,aAAW,CACT;AACE,YAAQ,cADV;AAEE,YAAQ;AAFV,GADS,CAJb;AAUE,cAAY,IAVd;AAWE,aAAW;AAXb,CAhCiB,EA6CjB;AACE,UAAQ,UADV;AAEE,UAAQ,eAFV;AAGE,YAAU,EAHZ;AAIE,aAAW,CACT;AACE,YAAQ,cADV;AAEE,YAAQ;AAFV,GADS,CAJb;AAUE,cAAY,IAVd;AAWE,aAAW;AAXb,CA7CiB,EA0DjB;AACE,UAAQ,UADV;AAEE,UAAQ,eAFV;AAGE,YAAU,EAHZ;AAIE,aAAW,CACT;AACE,YAAQ,cADV;AAEE,YAAQ;AAFV,GADS,CAJb;AAUE,cAAY,IAVd;AAWE,aAAW;AAXb,CA1DiB,EAuEjB;AACE,UAAQ,UADV;AAEE,UAAQ,qBAFV;AAGE,YAAU,EAHZ;AAIE,aAAW,CACT;AACE,YAAQ,cADV;AAEE,YAAQ;AAFV,GADS,CAJb;AAUE,cAAY,IAVd;AAWE,aAAW;AAXb,CAvEiB,EAoFjB;AACE,UAAQ,UADV;AAEE,UAAQ,eAFV;AAGE,YAAU,EAHZ;AAIE,aAAW,CACT;AACE,YAAQ,cADV;AAEE,YAAQ;AAFV,GADS,CAJb;AAUE,cAAY,IAVd;AAWE,aAAW;AAXb,CApFiB,EAiGjB;AACE,UAAQ,UADV;AAEE,UAAQ,UAFV;AAGE,YAAU,CACR;AACE,YAAQ,OADV;AAEE,YAAQ;AAFV,GADQ,EAKR;AACE,YAAQ,KADV;AAEE,YAAQ;AAFV,GALQ,EASR;AACE,YAAQ,SADV;AAEE,YAAQ;AAFV,GATQ,CAHZ;AAiBE,aAAW,EAjBb;AAkBE,cAAY,KAlBd;AAmBE,aAAW;AAnBb,CAjGiB,EAsHjB;AACE,UAAQ,UADV;AAEE,UAAQ,mBAFV;AAGE,YAAU,CACR;AACE,YAAQ,QADV;AAEE,YAAQ;AAFV,GADQ,CAHZ;AASE,aAAW,EATb;AAUE,cAAY,KAVd;AAWE,aAAW;AAXb,CAtHiB,EAmIjB;AACE,UAAQ,OADV;AAEE,UAAQ,eAFV;AAGE,YAAU,CACR;AACE,YAAQ,QADV;AAEE,YAAQ,OAFV;AAGE,eAAW;AAHb,GADQ;AAHZ,CAnIiB,EA8IjB;AACE,UAAQ,aADV;AAEE,YAAU,CACR;AACE,YAAQ,gBADV;AAEE,YAAQ;AAFV,GADQ,EAKR;AACE,YAAQ,uBADV;AAEE,YAAQ;AAFV,GALQ;AAFZ,CA9IiB,CAAZ;;AA4JA,IAAMC,QAAQ,GAAG,41nCAAjB",
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/deploy",
      "sourcesContent": [
        "export const ABI = [\n  {\n    \"type\": \"function\",\n    \"name\": \"balanceOfAddress\",\n    \"inputs\": [\n      {\n        \"name\": \"_address\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"returnValue0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"constant\": true,\n    \"payable\": false\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"holderBalance\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"returnValue0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"constant\": true,\n    \"payable\": false\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"counterPartyBalance\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"returnValue0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"constant\": true,\n    \"payable\": false\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"callerBalance\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"returnValue0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"constant\": true,\n    \"payable\": false\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"holderAddress\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"returnValue0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"constant\": true,\n    \"payable\": false\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"counterPartyAddress\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"returnValue0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"constant\": true,\n    \"payable\": false\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"callerAddress\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"returnValue0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"constant\": true,\n    \"payable\": false\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"transfer\",\n    \"inputs\": [\n      {\n        \"name\": \"_from\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"_to\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"_amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"constant\": false,\n    \"payable\": false\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"depositCollateral\",\n    \"inputs\": [\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"constant\": false,\n    \"payable\": true\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"TransferEvent\",\n    \"inputs\": [\n      {\n        \"name\": \"result\",\n        \"type\": \"int32\",\n        \"indexed\": false\n      }\n    ]\n  },\n  {\n    \"type\": \"constructor\",\n    \"inputs\": [\n      {\n        \"name\": \"holder_address\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"counter_party_address\",\n        \"type\": \"address\"\n      }\n    ]\n  }\n];\nexport const CODE_HEX = '';\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566259988944
  },
  "{\"sourceRoot\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"filename\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/oracles.mjs\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/oracles.mjs",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/oracles.mjs",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/oracles.mjs",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js",
        "sourceFileName": "oracles.mjs"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createOracles = createOracles;\nexports.getOracleByAddress = getOracleByAddress;\nexports.Oracle = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @author Noah-Vincenz Noeh <noah-vincenz.noeh18@imperial.ac.uk>\n */\n\n/* jshint esversion: 6 */\nvar oracleArr = [];\n\nvar Oracle =\n/*#__PURE__*/\nfunction () {\n  function Oracle(address) {\n    _classCallCheck(this, Oracle);\n\n    this.address = address;\n  }\n\n  _createClass(Oracle, [{\n    key: \"getTempInLondon\",\n    value: function getTempInLondon() {\n      switch (this.address) {\n        case \"0x8ce40d9956e7b8a89a1d73f4d4850c760ea20a56\":\n          return 23;\n          break;\n\n        case \"0xc90bc8ff4387fe14cdd0934ef9935be590cb83ca\":\n          return 25;\n          break;\n\n        case \"0xa03cbbea9891d7961ed23fd965b6ad3109c36a30\":\n          return 22;\n          break;\n\n        case \"0x90a3coyea9891d7961edo78h96b6ad3109c3659b\":\n          return 24;\n          break;\n\n        case \"0xa89fbjs0033nkkklizqp04bj4jb5bjxxk4nb33n4\":\n          return 22;\n          break;\n\n        default: // code block\n\n      }\n    }\n  }, {\n    key: \"getLiborSpotRate\",\n    value: function getLiborSpotRate() {\n      switch (this.address) {\n        case \"0x8ce40d9956e7b8a89a1d73f4d4850c760ea20a56\":\n          return 2.26563;\n          break;\n\n        case \"0xc90bc8ff4387fe14cdd0934ef9935be590cb83ca\":\n          return 2.25634;\n          break;\n\n        case \"0xa03cbbea9891d7961ed23fd965b6ad3109c36a30\":\n          return 2.26551;\n          break;\n\n        case \"0x90a3coyea9891d7961edo78h96b6ad3109c3659b\":\n          return 2.25555;\n          break;\n\n        case \"0xa89fbjs0033nkkklizqp04bj4jb5bjxxk4nb33n4\":\n          return 2.25420;\n          break;\n\n        default: // code block\n\n      }\n    }\n  }]);\n\n  return Oracle;\n}();\n\nexports.Oracle = Oracle;\n\nfunction createOracles() {\n  var o1 = new Oracle(\"0x8ce40d9956e7b8a89a1d73f4d4850c760ea20a56\");\n  var o2 = new Oracle(\"0xc90bc8ff4387fe14cdd0934ef9935be590cb83ca\");\n  var o3 = new Oracle(\"0xa03cbbea9891d7961ed23fd965b6ad3109c36a30\");\n  var o4 = new Oracle(\"0x90a3coyea9891d7961edo78h96b6ad3109c3659b\");\n  var o5 = new Oracle(\"0xa89fbjs0033nkkklizqp04bj4jb5bjxxk4nb33n4\");\n  oracleArr = [o1, o2, o3, o4, o5];\n}\n\nfunction getOracleByAddress(address) {\n  for (var i = 0; i < oracleArr.length; ++i) {\n    if (oracleArr[i].address === address) {\n      return oracleArr[i];\n    }\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yYWNsZXMubWpzIl0sIm5hbWVzIjpbIm9yYWNsZUFyciIsIk9yYWNsZSIsImFkZHJlc3MiLCJjcmVhdGVPcmFjbGVzIiwibzEiLCJvMiIsIm8zIiwibzQiLCJvNSIsImdldE9yYWNsZUJ5QWRkcmVzcyIsImkiLCJsZW5ndGgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7O0FBSUE7QUFDQSxJQUFJQSxTQUFTLEdBQUcsRUFBaEI7O0lBRWFDLE07OztBQUVULGtCQUFZQyxPQUFaLEVBQXFCO0FBQUE7O0FBQ2pCLFNBQUtBLE9BQUwsR0FBZUEsT0FBZjtBQUNIOzs7O3NDQUVpQjtBQUNkLGNBQU8sS0FBS0EsT0FBWjtBQUNJLGFBQUssNENBQUw7QUFDSSxpQkFBTyxFQUFQO0FBQ0E7O0FBQ0osYUFBSyw0Q0FBTDtBQUNJLGlCQUFPLEVBQVA7QUFDQTs7QUFDSixhQUFLLDRDQUFMO0FBQ0ksaUJBQU8sRUFBUDtBQUNBOztBQUNKLGFBQUssNENBQUw7QUFDSSxpQkFBTyxFQUFQO0FBQ0E7O0FBQ0osYUFBSyw0Q0FBTDtBQUNJLGlCQUFPLEVBQVA7QUFDQTs7QUFDSixnQkFoQkosQ0FpQk07O0FBakJOO0FBbUJIOzs7dUNBRWtCO0FBQ2YsY0FBTyxLQUFLQSxPQUFaO0FBQ0ksYUFBSyw0Q0FBTDtBQUNJLGlCQUFPLE9BQVA7QUFDQTs7QUFDSixhQUFLLDRDQUFMO0FBQ0ksaUJBQU8sT0FBUDtBQUNBOztBQUNKLGFBQUssNENBQUw7QUFDSSxpQkFBTyxPQUFQO0FBQ0E7O0FBQ0osYUFBSyw0Q0FBTDtBQUNJLGlCQUFPLE9BQVA7QUFDQTs7QUFDSixhQUFLLDRDQUFMO0FBQ0ksaUJBQU8sT0FBUDtBQUNBOztBQUNKLGdCQWhCSixDQWlCTTs7QUFqQk47QUFtQkg7Ozs7Ozs7O0FBR0UsU0FBU0MsYUFBVCxHQUF5QjtBQUM1QixNQUFNQyxFQUFFLEdBQUcsSUFBSUgsTUFBSixDQUFXLDRDQUFYLENBQVg7QUFDQSxNQUFNSSxFQUFFLEdBQUcsSUFBSUosTUFBSixDQUFXLDRDQUFYLENBQVg7QUFDQSxNQUFNSyxFQUFFLEdBQUcsSUFBSUwsTUFBSixDQUFXLDRDQUFYLENBQVg7QUFDQSxNQUFNTSxFQUFFLEdBQUcsSUFBSU4sTUFBSixDQUFXLDRDQUFYLENBQVg7QUFDQSxNQUFNTyxFQUFFLEdBQUcsSUFBSVAsTUFBSixDQUFXLDRDQUFYLENBQVg7QUFDQUQsRUFBQUEsU0FBUyxHQUFHLENBQUNJLEVBQUQsRUFBS0MsRUFBTCxFQUFTQyxFQUFULEVBQWFDLEVBQWIsRUFBaUJDLEVBQWpCLENBQVo7QUFDSDs7QUFFTSxTQUFTQyxrQkFBVCxDQUE0QlAsT0FBNUIsRUFBcUM7QUFDeEMsT0FBSyxJQUFJUSxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHVixTQUFTLENBQUNXLE1BQTlCLEVBQXNDLEVBQUVELENBQXhDLEVBQTJDO0FBQ3ZDLFFBQUlWLFNBQVMsQ0FBQ1UsQ0FBRCxDQUFULENBQWFSLE9BQWIsS0FBeUJBLE9BQTdCLEVBQXNDO0FBQ2xDLGFBQU9GLFNBQVMsQ0FBQ1UsQ0FBRCxDQUFoQjtBQUNIO0FBQ0o7QUFDSiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbm9haC12aW5jZW56bm9laC9EZXNrdG9wL0ZpbmFuY2lhbC1TbWFydC1Db250cmFjdHMvc3JjL2pzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAYXV0aG9yIE5vYWgtVmluY2VueiBOb2VoIDxub2FoLXZpbmNlbnoubm9laDE4QGltcGVyaWFsLmFjLnVrPlxuICovXG5cbi8qIGpzaGludCBlc3ZlcnNpb246IDYgKi9cbnZhciBvcmFjbGVBcnIgPSBbXTtcblxuZXhwb3J0IGNsYXNzIE9yYWNsZSB7XG5cbiAgICBjb25zdHJ1Y3RvcihhZGRyZXNzKSB7XG4gICAgICAgIHRoaXMuYWRkcmVzcyA9IGFkZHJlc3M7XG4gICAgfVxuXG4gICAgZ2V0VGVtcEluTG9uZG9uKCkge1xuICAgICAgICBzd2l0Y2godGhpcy5hZGRyZXNzKSB7XG4gICAgICAgICAgICBjYXNlIFwiMHg4Y2U0MGQ5OTU2ZTdiOGE4OWExZDczZjRkNDg1MGM3NjBlYTIwYTU2XCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIDIzO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIjB4YzkwYmM4ZmY0Mzg3ZmUxNGNkZDA5MzRlZjk5MzViZTU5MGNiODNjYVwiOlxuICAgICAgICAgICAgICAgIHJldHVybiAyNTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCIweGEwM2NiYmVhOTg5MWQ3OTYxZWQyM2ZkOTY1YjZhZDMxMDljMzZhMzBcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gMjI7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiMHg5MGEzY295ZWE5ODkxZDc5NjFlZG83OGg5NmI2YWQzMTA5YzM2NTliXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIDI0O1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIjB4YTg5ZmJqczAwMzNua2trbGl6cXAwNGJqNGpiNWJqeHhrNG5iMzNuNFwiOlxuICAgICAgICAgICAgICAgIHJldHVybiAyMjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgIC8vIGNvZGUgYmxvY2tcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGdldExpYm9yU3BvdFJhdGUoKSB7XG4gICAgICAgIHN3aXRjaCh0aGlzLmFkZHJlc3MpIHtcbiAgICAgICAgICAgIGNhc2UgXCIweDhjZTQwZDk5NTZlN2I4YTg5YTFkNzNmNGQ0ODUwYzc2MGVhMjBhNTZcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gMi4yNjU2MztcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCIweGM5MGJjOGZmNDM4N2ZlMTRjZGQwOTM0ZWY5OTM1YmU1OTBjYjgzY2FcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gMi4yNTYzNDtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCIweGEwM2NiYmVhOTg5MWQ3OTYxZWQyM2ZkOTY1YjZhZDMxMDljMzZhMzBcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gMi4yNjU1MTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCIweDkwYTNjb3llYTk4OTFkNzk2MWVkbzc4aDk2YjZhZDMxMDljMzY1OWJcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gMi4yNTU1NTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCIweGE4OWZianMwMDMzbmtra2xpenFwMDRiajRqYjVianh4azRuYjMzbjRcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gMi4yNTQyMDtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgIC8vIGNvZGUgYmxvY2tcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU9yYWNsZXMoKSB7XG4gICAgY29uc3QgbzEgPSBuZXcgT3JhY2xlKFwiMHg4Y2U0MGQ5OTU2ZTdiOGE4OWExZDczZjRkNDg1MGM3NjBlYTIwYTU2XCIpO1xuICAgIGNvbnN0IG8yID0gbmV3IE9yYWNsZShcIjB4YzkwYmM4ZmY0Mzg3ZmUxNGNkZDA5MzRlZjk5MzViZTU5MGNiODNjYVwiKTtcbiAgICBjb25zdCBvMyA9IG5ldyBPcmFjbGUoXCIweGEwM2NiYmVhOTg5MWQ3OTYxZWQyM2ZkOTY1YjZhZDMxMDljMzZhMzBcIik7XG4gICAgY29uc3QgbzQgPSBuZXcgT3JhY2xlKFwiMHg5MGEzY295ZWE5ODkxZDc5NjFlZG83OGg5NmI2YWQzMTA5YzM2NTliXCIpO1xuICAgIGNvbnN0IG81ID0gbmV3IE9yYWNsZShcIjB4YTg5ZmJqczAwMzNua2trbGl6cXAwNGJqNGpiNWJqeHhrNG5iMzNuNFwiKTtcbiAgICBvcmFjbGVBcnIgPSBbbzEsIG8yLCBvMywgbzQsIG81XTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldE9yYWNsZUJ5QWRkcmVzcyhhZGRyZXNzKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvcmFjbGVBcnIubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgaWYgKG9yYWNsZUFycltpXS5hZGRyZXNzID09PSBhZGRyZXNzKSB7XG4gICAgICAgICAgICByZXR1cm4gb3JhY2xlQXJyW2ldO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "oracles.mjs"
      ],
      "names": [
        "oracleArr",
        "Oracle",
        "address",
        "createOracles",
        "o1",
        "o2",
        "o3",
        "o4",
        "o5",
        "getOracleByAddress",
        "i",
        "length"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;;;AAIA;AACA,IAAIA,SAAS,GAAG,EAAhB;;IAEaC,M;;;AAET,kBAAYC,OAAZ,EAAqB;AAAA;;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACH;;;;sCAEiB;AACd,cAAO,KAAKA,OAAZ;AACI,aAAK,4CAAL;AACI,iBAAO,EAAP;AACA;;AACJ,aAAK,4CAAL;AACI,iBAAO,EAAP;AACA;;AACJ,aAAK,4CAAL;AACI,iBAAO,EAAP;AACA;;AACJ,aAAK,4CAAL;AACI,iBAAO,EAAP;AACA;;AACJ,aAAK,4CAAL;AACI,iBAAO,EAAP;AACA;;AACJ,gBAhBJ,CAiBM;;AAjBN;AAmBH;;;uCAEkB;AACf,cAAO,KAAKA,OAAZ;AACI,aAAK,4CAAL;AACI,iBAAO,OAAP;AACA;;AACJ,aAAK,4CAAL;AACI,iBAAO,OAAP;AACA;;AACJ,aAAK,4CAAL;AACI,iBAAO,OAAP;AACA;;AACJ,aAAK,4CAAL;AACI,iBAAO,OAAP;AACA;;AACJ,aAAK,4CAAL;AACI,iBAAO,OAAP;AACA;;AACJ,gBAhBJ,CAiBM;;AAjBN;AAmBH;;;;;;;;AAGE,SAASC,aAAT,GAAyB;AAC5B,MAAMC,EAAE,GAAG,IAAIH,MAAJ,CAAW,4CAAX,CAAX;AACA,MAAMI,EAAE,GAAG,IAAIJ,MAAJ,CAAW,4CAAX,CAAX;AACA,MAAMK,EAAE,GAAG,IAAIL,MAAJ,CAAW,4CAAX,CAAX;AACA,MAAMM,EAAE,GAAG,IAAIN,MAAJ,CAAW,4CAAX,CAAX;AACA,MAAMO,EAAE,GAAG,IAAIP,MAAJ,CAAW,4CAAX,CAAX;AACAD,EAAAA,SAAS,GAAG,CAACI,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,EAAiBC,EAAjB,CAAZ;AACH;;AAEM,SAASC,kBAAT,CAA4BP,OAA5B,EAAqC;AACxC,OAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,SAAS,CAACW,MAA9B,EAAsC,EAAED,CAAxC,EAA2C;AACvC,QAAIV,SAAS,CAACU,CAAD,CAAT,CAAaR,OAAb,KAAyBA,OAA7B,EAAsC;AAClC,aAAOF,SAAS,CAACU,CAAD,CAAhB;AACH;AACJ;AACJ",
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js",
      "sourcesContent": [
        "/**\n * @author Noah-Vincenz Noeh <noah-vincenz.noeh18@imperial.ac.uk>\n */\n\n/* jshint esversion: 6 */\nvar oracleArr = [];\n\nexport class Oracle {\n\n    constructor(address) {\n        this.address = address;\n    }\n\n    getTempInLondon() {\n        switch(this.address) {\n            case \"0x8ce40d9956e7b8a89a1d73f4d4850c760ea20a56\":\n                return 23;\n                break;\n            case \"0xc90bc8ff4387fe14cdd0934ef9935be590cb83ca\":\n                return 25;\n                break;\n            case \"0xa03cbbea9891d7961ed23fd965b6ad3109c36a30\":\n                return 22;\n                break;\n            case \"0x90a3coyea9891d7961edo78h96b6ad3109c3659b\":\n                return 24;\n                break;\n            case \"0xa89fbjs0033nkkklizqp04bj4jb5bjxxk4nb33n4\":\n                return 22;\n                break;\n            default:\n              // code block\n        }\n    }\n\n    getLiborSpotRate() {\n        switch(this.address) {\n            case \"0x8ce40d9956e7b8a89a1d73f4d4850c760ea20a56\":\n                return 2.26563;\n                break;\n            case \"0xc90bc8ff4387fe14cdd0934ef9935be590cb83ca\":\n                return 2.25634;\n                break;\n            case \"0xa03cbbea9891d7961ed23fd965b6ad3109c36a30\":\n                return 2.26551;\n                break;\n            case \"0x90a3coyea9891d7961edo78h96b6ad3109c3659b\":\n                return 2.25555;\n                break;\n            case \"0xa89fbjs0033nkkklizqp04bj4jb5bjxxk4nb33n4\":\n                return 2.25420;\n                break;\n            default:\n              // code block\n        }\n    }\n}\n\nexport function createOracles() {\n    const o1 = new Oracle(\"0x8ce40d9956e7b8a89a1d73f4d4850c760ea20a56\");\n    const o2 = new Oracle(\"0xc90bc8ff4387fe14cdd0934ef9935be590cb83ca\");\n    const o3 = new Oracle(\"0xa03cbbea9891d7961ed23fd965b6ad3109c36a30\");\n    const o4 = new Oracle(\"0x90a3coyea9891d7961edo78h96b6ad3109c3659b\");\n    const o5 = new Oracle(\"0xa89fbjs0033nkkklizqp04bj4jb5bjxxk4nb33n4\");\n    oracleArr = [o1, o2, o3, o4, o5];\n}\n\nexport function getOracleByAddress(address) {\n    for (var i = 0; i < oracleArr.length; ++i) {\n        if (oracleArr[i].address === address) {\n            return oracleArr[i];\n        }\n    }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1564751844570
  },
  "{\"sourceRoot\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"filename\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"plugins\":[],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/* test/index.js */\nimport { cleanParens } from \"../src/js/stringmanipulation.mjs\";\nimport { evaluateConditionals } from \"../src/js/index.mjs\";\nimport { expect } from \"chai\";\nvar numbers = [1, 2, 3, 4, 5];\nexpect(numbers).to.be.an('array').that.includes(2);\nexpect(numbers).to.have.lengthOf(5);\ndescribe('#sum()', function () {\n  context('without arguments', function () {\n    it('should return 0', function () {\n      //expect(numbers).to.have.lengthOf(5)\n      expect(cleanParens(\")safddsf)\")).to.equal(\"safddsf)\");\n    });\n  });\n  context('without arguments', function () {\n    it('should return 0', function () {\n      //expect(numbers).to.have.lengthOf(5)\n      expect(evaluateConditionals(\"if ( one [>] zero ) { zero }\")).to.equal(\"zero\");\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNsZWFuUGFyZW5zIiwiZXZhbHVhdGVDb25kaXRpb25hbHMiLCJleHBlY3QiLCJudW1iZXJzIiwidG8iLCJiZSIsImFuIiwidGhhdCIsImluY2x1ZGVzIiwiaGF2ZSIsImxlbmd0aE9mIiwiZGVzY3JpYmUiLCJjb250ZXh0IiwiaXQiLCJlcXVhbCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxTQUFTQSxXQUFULFFBQTRCLGtDQUE1QjtBQUNBLFNBQVNDLG9CQUFULFFBQXFDLHFCQUFyQztBQUNBLFNBQVNDLE1BQVQsUUFBdUIsTUFBdkI7QUFDQSxJQUFJQyxPQUFPLEdBQUcsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYixDQUFkO0FBRUFELE1BQU0sQ0FBQ0MsT0FBRCxDQUFOLENBQWdCQyxFQUFoQixDQUFtQkMsRUFBbkIsQ0FBc0JDLEVBQXRCLENBQXlCLE9BQXpCLEVBQWtDQyxJQUFsQyxDQUF1Q0MsUUFBdkMsQ0FBZ0QsQ0FBaEQ7QUFDQU4sTUFBTSxDQUFDQyxPQUFELENBQU4sQ0FBZ0JDLEVBQWhCLENBQW1CSyxJQUFuQixDQUF3QkMsUUFBeEIsQ0FBaUMsQ0FBakM7QUFFQUMsUUFBUSxDQUFDLFFBQUQsRUFBVyxZQUFXO0FBRTVCQyxFQUFBQSxPQUFPLENBQUMsbUJBQUQsRUFBc0IsWUFBVztBQUN0Q0MsSUFBQUEsRUFBRSxDQUFDLGlCQUFELEVBQW9CLFlBQVc7QUFDL0I7QUFDQVgsTUFBQUEsTUFBTSxDQUFDRixXQUFXLENBQUMsV0FBRCxDQUFaLENBQU4sQ0FBaUNJLEVBQWpDLENBQW9DVSxLQUFwQyxDQUEwQyxVQUExQztBQUNELEtBSEMsQ0FBRjtBQUlELEdBTE0sQ0FBUDtBQU9BRixFQUFBQSxPQUFPLENBQUMsbUJBQUQsRUFBc0IsWUFBVztBQUN0Q0MsSUFBQUEsRUFBRSxDQUFDLGlCQUFELEVBQW9CLFlBQVc7QUFDL0I7QUFDQVgsTUFBQUEsTUFBTSxDQUFDRCxvQkFBb0IsQ0FBQyw4QkFBRCxDQUFyQixDQUFOLENBQTZERyxFQUE3RCxDQUFnRVUsS0FBaEUsQ0FBc0UsTUFBdEU7QUFDRCxLQUhDLENBQUY7QUFJRCxHQUxNLENBQVA7QUFPRCxDQWhCTyxDQUFSIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9ub2FoLXZpbmNlbnpub2VoL0Rlc2t0b3AvRmluYW5jaWFsLVNtYXJ0LUNvbnRyYWN0cy90ZXN0Iiwic291cmNlc0NvbnRlbnQiOlsiLyogdGVzdC9pbmRleC5qcyAqL1xuaW1wb3J0IHsgY2xlYW5QYXJlbnMgfSBmcm9tIFwiLi4vc3JjL2pzL3N0cmluZ21hbmlwdWxhdGlvbi5tanNcIjtcbmltcG9ydCB7IGV2YWx1YXRlQ29uZGl0aW9uYWxzIH0gZnJvbSBcIi4uL3NyYy9qcy9pbmRleC5tanNcIjtcbmltcG9ydCB7IGV4cGVjdCB9IGZyb20gXCJjaGFpXCI7XG52YXIgbnVtYmVycyA9IFsxLCAyLCAzLCA0LCA1XTtcblxuZXhwZWN0KG51bWJlcnMpLnRvLmJlLmFuKCdhcnJheScpLnRoYXQuaW5jbHVkZXMoMik7XG5leHBlY3QobnVtYmVycykudG8uaGF2ZS5sZW5ndGhPZig1KTtcblxuZGVzY3JpYmUoJyNzdW0oKScsIGZ1bmN0aW9uKCkge1xuXG4gIGNvbnRleHQoJ3dpdGhvdXQgYXJndW1lbnRzJywgZnVuY3Rpb24oKSB7XG4gICAgaXQoJ3Nob3VsZCByZXR1cm4gMCcsIGZ1bmN0aW9uKCkge1xuICAgICAgLy9leHBlY3QobnVtYmVycykudG8uaGF2ZS5sZW5ndGhPZig1KVxuICAgICAgZXhwZWN0KGNsZWFuUGFyZW5zKFwiKXNhZmRkc2YpXCIpKS50by5lcXVhbChcInNhZmRkc2YpXCIpXG4gICAgfSlcbiAgfSlcblxuICBjb250ZXh0KCd3aXRob3V0IGFyZ3VtZW50cycsIGZ1bmN0aW9uKCkge1xuICAgIGl0KCdzaG91bGQgcmV0dXJuIDAnLCBmdW5jdGlvbigpIHtcbiAgICAgIC8vZXhwZWN0KG51bWJlcnMpLnRvLmhhdmUubGVuZ3RoT2YoNSlcbiAgICAgIGV4cGVjdChldmFsdWF0ZUNvbmRpdGlvbmFscyhcImlmICggb25lIFs+XSB6ZXJvICkgeyB6ZXJvIH1cIikpLnRvLmVxdWFsKFwiemVyb1wiKVxuICAgIH0pXG4gIH0pXG5cbn0pXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "cleanParens",
        "evaluateConditionals",
        "expect",
        "numbers",
        "to",
        "be",
        "an",
        "that",
        "includes",
        "have",
        "lengthOf",
        "describe",
        "context",
        "it",
        "equal"
      ],
      "mappings": "AAAA;AACA,SAASA,WAAT,QAA4B,kCAA5B;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,IAAIC,OAAO,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAd;AAEAD,MAAM,CAACC,OAAD,CAAN,CAAgBC,EAAhB,CAAmBC,EAAnB,CAAsBC,EAAtB,CAAyB,OAAzB,EAAkCC,IAAlC,CAAuCC,QAAvC,CAAgD,CAAhD;AACAN,MAAM,CAACC,OAAD,CAAN,CAAgBC,EAAhB,CAAmBK,IAAnB,CAAwBC,QAAxB,CAAiC,CAAjC;AAEAC,QAAQ,CAAC,QAAD,EAAW,YAAW;AAE5BC,EAAAA,OAAO,CAAC,mBAAD,EAAsB,YAAW;AACtCC,IAAAA,EAAE,CAAC,iBAAD,EAAoB,YAAW;AAC/B;AACAX,MAAAA,MAAM,CAACF,WAAW,CAAC,WAAD,CAAZ,CAAN,CAAiCI,EAAjC,CAAoCU,KAApC,CAA0C,UAA1C;AACD,KAHC,CAAF;AAID,GALM,CAAP;AAOAF,EAAAA,OAAO,CAAC,mBAAD,EAAsB,YAAW;AACtCC,IAAAA,EAAE,CAAC,iBAAD,EAAoB,YAAW;AAC/B;AACAX,MAAAA,MAAM,CAACD,oBAAoB,CAAC,8BAAD,CAArB,CAAN,CAA6DG,EAA7D,CAAgEU,KAAhE,CAAsE,MAAtE;AACD,KAHC,CAAF;AAID,GALM,CAAP;AAOD,CAhBO,CAAR",
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test",
      "sourcesContent": [
        "/* test/index.js */\nimport { cleanParens } from \"../src/js/stringmanipulation.mjs\";\nimport { evaluateConditionals } from \"../src/js/index.mjs\";\nimport { expect } from \"chai\";\nvar numbers = [1, 2, 3, 4, 5];\n\nexpect(numbers).to.be.an('array').that.includes(2);\nexpect(numbers).to.have.lengthOf(5);\n\ndescribe('#sum()', function() {\n\n  context('without arguments', function() {\n    it('should return 0', function() {\n      //expect(numbers).to.have.lengthOf(5)\n      expect(cleanParens(\")safddsf)\")).to.equal(\"safddsf)\")\n    })\n  })\n\n  context('without arguments', function() {\n    it('should return 0', function() {\n      //expect(numbers).to.have.lengthOf(5)\n      expect(evaluateConditionals(\"if ( one [>] zero ) { zero }\")).to.equal(\"zero\")\n    })\n  })\n\n})\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1566257517553
  },
  "{\"sourceRoot\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"filename\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/gulpfile.babel.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n//Include required modules\nvar gulp = require(\"gulp\"),\n    babelify = require('babelify'),\n    browserify = require(\"browserify\"),\n    connect = require(\"gulp-connect\"),\n    source = require(\"vinyl-source-stream\"); // version 4\n\n\nvar _require = require('gulp'),\n    series = _require.series; //Copy static files from html folder to build folder\n\n\nfunction copyHTMLFiles() {\n  return gulp.src(\"./src/html/*.*\").pipe(gulp.dest(\"./build\"));\n} //Convert ES6 code in all js files in src/js folder and copy to\n//build folder as bundle.js\n\n\nfunction build() {\n  // body omitted\n  return browserify({\n    entries: [\"./src/js/index.mjs\"]\n  }).transform(babelify.configure({\n    presets: [\"@babel/env\"]\n  })).bundle().pipe(source(\"bundle.js\")).pipe(gulp.dest(\"./build\"));\n} //Start a test server with doc root at build folder and\n//listening to 9001 port. Home page = http://localhost:9001\n\n\nfunction startServer() {\n  connect.server({\n    root: \"./build\",\n    livereload: true,\n    port: 9001\n  });\n}\n\nexports.build = series(copyHTMLFiles, build, startServer);\nexports[\"default\"] = series(copyHTMLFiles, build, startServer);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbImd1bHAiLCJyZXF1aXJlIiwiYmFiZWxpZnkiLCJicm93c2VyaWZ5IiwiY29ubmVjdCIsInNvdXJjZSIsInNlcmllcyIsImNvcHlIVE1MRmlsZXMiLCJzcmMiLCJwaXBlIiwiZGVzdCIsImJ1aWxkIiwiZW50cmllcyIsInRyYW5zZm9ybSIsImNvbmZpZ3VyZSIsInByZXNldHMiLCJidW5kbGUiLCJzdGFydFNlcnZlciIsInNlcnZlciIsInJvb3QiLCJsaXZlcmVsb2FkIiwicG9ydCIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQSxJQUFJQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQWxCO0FBQUEsSUFDSUMsUUFBUSxHQUFHRCxPQUFPLENBQUMsVUFBRCxDQUR0QjtBQUFBLElBRUlFLFVBQVUsR0FBR0YsT0FBTyxDQUFDLFlBQUQsQ0FGeEI7QUFBQSxJQUdJRyxPQUFPLEdBQUdILE9BQU8sQ0FBQyxjQUFELENBSHJCO0FBQUEsSUFJSUksTUFBTSxHQUFHSixPQUFPLENBQUMscUJBQUQsQ0FKcEIsQyxDQU9BOzs7ZUFDbUJBLE9BQU8sQ0FBQyxNQUFELEM7SUFBbEJLLE0sWUFBQUEsTSxFQUVSOzs7QUFDQSxTQUFTQyxhQUFULEdBQXlCO0FBQ3ZCLFNBQU9QLElBQUksQ0FBQ1EsR0FBTCxDQUFTLGdCQUFULEVBQ05DLElBRE0sQ0FDRFQsSUFBSSxDQUFDVSxJQUFMLENBQVUsU0FBVixDQURDLENBQVA7QUFFRCxDLENBRUQ7QUFDQTs7O0FBQ0EsU0FBU0MsS0FBVCxHQUFpQjtBQUNmO0FBQ0EsU0FBT1IsVUFBVSxDQUFDO0FBQ2RTLElBQUFBLE9BQU8sRUFBRSxDQUFDLG9CQUFEO0FBREssR0FBRCxDQUFWLENBR05DLFNBSE0sQ0FHSVgsUUFBUSxDQUFDWSxTQUFULENBQW1CO0FBQzFCQyxJQUFBQSxPQUFPLEVBQUUsQ0FBQyxZQUFEO0FBRGlCLEdBQW5CLENBSEosRUFNTkMsTUFOTSxHQU9OUCxJQVBNLENBT0RKLE1BQU0sQ0FBQyxXQUFELENBUEwsRUFRTkksSUFSTSxDQVFEVCxJQUFJLENBQUNVLElBQUwsQ0FBVSxTQUFWLENBUkMsQ0FBUDtBQVVELEMsQ0FFRDtBQUNBOzs7QUFDQSxTQUFTTyxXQUFULEdBQXVCO0FBQ3JCYixFQUFBQSxPQUFPLENBQUNjLE1BQVIsQ0FBZTtBQUNYQyxJQUFBQSxJQUFJLEVBQUcsU0FESTtBQUVYQyxJQUFBQSxVQUFVLEVBQUcsSUFGRjtBQUdYQyxJQUFBQSxJQUFJLEVBQUc7QUFISSxHQUFmO0FBS0Q7O0FBRURDLE9BQU8sQ0FBQ1gsS0FBUixHQUFnQkwsTUFBTSxDQUFDQyxhQUFELEVBQWdCSSxLQUFoQixFQUF1Qk0sV0FBdkIsQ0FBdEI7QUFDQUssT0FBTyxXQUFQLEdBQWtCaEIsTUFBTSxDQUFDQyxhQUFELEVBQWdCSSxLQUFoQixFQUF1Qk0sV0FBdkIsQ0FBeEIiLCJzb3VyY2VSb290IjoiL1VzZXJzL25vYWgtdmluY2Vuem5vZWgvRGVza3RvcC9GaW5hbmNpYWwtU21hcnQtQ29udHJhY3RzIiwic291cmNlc0NvbnRlbnQiOlsiLy9JbmNsdWRlIHJlcXVpcmVkIG1vZHVsZXNcbnZhciBndWxwID0gcmVxdWlyZShcImd1bHBcIiksXG4gICAgYmFiZWxpZnkgPSByZXF1aXJlKCdiYWJlbGlmeScpLFxuICAgIGJyb3dzZXJpZnkgPSByZXF1aXJlKFwiYnJvd3NlcmlmeVwiKSxcbiAgICBjb25uZWN0ID0gcmVxdWlyZShcImd1bHAtY29ubmVjdFwiKSxcbiAgICBzb3VyY2UgPSByZXF1aXJlKFwidmlueWwtc291cmNlLXN0cmVhbVwiKVxuO1xuXG4vLyB2ZXJzaW9uIDRcbmNvbnN0IHsgc2VyaWVzIH0gPSByZXF1aXJlKCdndWxwJyk7XG5cbi8vQ29weSBzdGF0aWMgZmlsZXMgZnJvbSBodG1sIGZvbGRlciB0byBidWlsZCBmb2xkZXJcbmZ1bmN0aW9uIGNvcHlIVE1MRmlsZXMoKSB7XG4gIHJldHVybiBndWxwLnNyYyhcIi4vc3JjL2h0bWwvKi4qXCIpXG4gIC5waXBlKGd1bHAuZGVzdChcIi4vYnVpbGRcIikpO1xufVxuXG4vL0NvbnZlcnQgRVM2IGNvZGUgaW4gYWxsIGpzIGZpbGVzIGluIHNyYy9qcyBmb2xkZXIgYW5kIGNvcHkgdG9cbi8vYnVpbGQgZm9sZGVyIGFzIGJ1bmRsZS5qc1xuZnVuY3Rpb24gYnVpbGQoKSB7XG4gIC8vIGJvZHkgb21pdHRlZFxuICByZXR1cm4gYnJvd3NlcmlmeSh7XG4gICAgICBlbnRyaWVzOiBbXCIuL3NyYy9qcy9pbmRleC5tanNcIl1cbiAgfSlcbiAgLnRyYW5zZm9ybShiYWJlbGlmeS5jb25maWd1cmUoe1xuICAgICAgcHJlc2V0czogW1wiQGJhYmVsL2VudlwiXVxuICB9KSlcbiAgLmJ1bmRsZSgpXG4gIC5waXBlKHNvdXJjZShcImJ1bmRsZS5qc1wiKSlcbiAgLnBpcGUoZ3VscC5kZXN0KFwiLi9idWlsZFwiKSlcbiAgO1xufVxuXG4vL1N0YXJ0IGEgdGVzdCBzZXJ2ZXIgd2l0aCBkb2Mgcm9vdCBhdCBidWlsZCBmb2xkZXIgYW5kXG4vL2xpc3RlbmluZyB0byA5MDAxIHBvcnQuIEhvbWUgcGFnZSA9IGh0dHA6Ly9sb2NhbGhvc3Q6OTAwMVxuZnVuY3Rpb24gc3RhcnRTZXJ2ZXIoKSB7XG4gIGNvbm5lY3Quc2VydmVyKHtcbiAgICAgIHJvb3QgOiBcIi4vYnVpbGRcIixcbiAgICAgIGxpdmVyZWxvYWQgOiB0cnVlLFxuICAgICAgcG9ydCA6IDkwMDFcbiAgfSk7XG59XG5cbmV4cG9ydHMuYnVpbGQgPSBzZXJpZXMoY29weUhUTUxGaWxlcywgYnVpbGQsIHN0YXJ0U2VydmVyKTtcbmV4cG9ydHMuZGVmYXVsdCA9IHNlcmllcyhjb3B5SFRNTEZpbGVzLCBidWlsZCwgc3RhcnRTZXJ2ZXIpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "gulp",
        "require",
        "babelify",
        "browserify",
        "connect",
        "source",
        "series",
        "copyHTMLFiles",
        "src",
        "pipe",
        "dest",
        "build",
        "entries",
        "transform",
        "configure",
        "presets",
        "bundle",
        "startServer",
        "server",
        "root",
        "livereload",
        "port",
        "exports"
      ],
      "mappings": ";;AAAA;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;AAAA,IACIC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CADtB;AAAA,IAEIE,UAAU,GAAGF,OAAO,CAAC,YAAD,CAFxB;AAAA,IAGIG,OAAO,GAAGH,OAAO,CAAC,cAAD,CAHrB;AAAA,IAIII,MAAM,GAAGJ,OAAO,CAAC,qBAAD,CAJpB,C,CAOA;;;eACmBA,OAAO,CAAC,MAAD,C;IAAlBK,M,YAAAA,M,EAER;;;AACA,SAASC,aAAT,GAAyB;AACvB,SAAOP,IAAI,CAACQ,GAAL,CAAS,gBAAT,EACNC,IADM,CACDT,IAAI,CAACU,IAAL,CAAU,SAAV,CADC,CAAP;AAED,C,CAED;AACA;;;AACA,SAASC,KAAT,GAAiB;AACf;AACA,SAAOR,UAAU,CAAC;AACdS,IAAAA,OAAO,EAAE,CAAC,oBAAD;AADK,GAAD,CAAV,CAGNC,SAHM,CAGIX,QAAQ,CAACY,SAAT,CAAmB;AAC1BC,IAAAA,OAAO,EAAE,CAAC,YAAD;AADiB,GAAnB,CAHJ,EAMNC,MANM,GAONP,IAPM,CAODJ,MAAM,CAAC,WAAD,CAPL,EAQNI,IARM,CAQDT,IAAI,CAACU,IAAL,CAAU,SAAV,CARC,CAAP;AAUD,C,CAED;AACA;;;AACA,SAASO,WAAT,GAAuB;AACrBb,EAAAA,OAAO,CAACc,MAAR,CAAe;AACXC,IAAAA,IAAI,EAAG,SADI;AAEXC,IAAAA,UAAU,EAAG,IAFF;AAGXC,IAAAA,IAAI,EAAG;AAHI,GAAf;AAKD;;AAEDC,OAAO,CAACX,KAAR,GAAgBL,MAAM,CAACC,aAAD,EAAgBI,KAAhB,EAAuBM,WAAvB,CAAtB;AACAK,OAAO,WAAP,GAAkBhB,MAAM,CAACC,aAAD,EAAgBI,KAAhB,EAAuBM,WAAvB,CAAxB",
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "sourcesContent": [
        "//Include required modules\nvar gulp = require(\"gulp\"),\n    babelify = require('babelify'),\n    browserify = require(\"browserify\"),\n    connect = require(\"gulp-connect\"),\n    source = require(\"vinyl-source-stream\")\n;\n\n// version 4\nconst { series } = require('gulp');\n\n//Copy static files from html folder to build folder\nfunction copyHTMLFiles() {\n  return gulp.src(\"./src/html/*.*\")\n  .pipe(gulp.dest(\"./build\"));\n}\n\n//Convert ES6 code in all js files in src/js folder and copy to\n//build folder as bundle.js\nfunction build() {\n  // body omitted\n  return browserify({\n      entries: [\"./src/js/index.mjs\"]\n  })\n  .transform(babelify.configure({\n      presets: [\"@babel/env\"]\n  }))\n  .bundle()\n  .pipe(source(\"bundle.js\"))\n  .pipe(gulp.dest(\"./build\"))\n  ;\n}\n\n//Start a test server with doc root at build folder and\n//listening to 9001 port. Home page = http://localhost:9001\nfunction startServer() {\n  connect.server({\n      root : \"./build\",\n      livereload : true,\n      port : 9001\n  });\n}\n\nexports.build = series(copyHTMLFiles, build, startServer);\nexports.default = series(copyHTMLFiles, build, startServer);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1564614127468
  },
  "{\"sourceRoot\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"filename\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test/stringmanipulation.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test/stringmanipulation.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test/stringmanipulation.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test/stringmanipulation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test",
        "sourceFileName": "stringmanipulation.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _stringmanipulation = require(\"../src/js/stringmanipulation.mjs\");\n\nvar _chai = require(\"chai\");\n\n/* test/stringmanipulation.js */\ndescribe('testing stringmanipulation.mjs...', function () {\n  describe('cleanParens()', function () {\n    // NOTE: spaces are added around parenthesis before this method is being called\n    context('with non-empty string argument', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.cleanParens)(\") one or zero )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one or zero\");\n      });\n      it('2', function () {\n        var res = (0, _stringmanipulation.cleanParens)(\"one or zero\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one or zero\");\n      });\n      it('3', function () {\n        var res = (0, _stringmanipulation.cleanParens)(\"( ( one or zero\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one or zero\");\n      });\n      it('4', function () {\n        var res = (0, _stringmanipulation.cleanParens)(\"( ( one or zero (\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one or zero\");\n      });\n      it('5', function () {\n        var res = (0, _stringmanipulation.cleanParens)(\"one ( ( or zero\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one ( ( or zero\");\n      });\n      it('6', function () {\n        var res = (0, _stringmanipulation.cleanParens)(\"( one ) ) or zero\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"( one ) ) or zero\");\n      });\n      it('7', function () {\n        var res = (0, _stringmanipulation.cleanParens)(\"( one ) ) or zero )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"( one ) ) or zero\");\n      });\n      it('8', function () {\n        var res = (0, _stringmanipulation.cleanParens)(\"( one ) ) or zero ) \");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"( one ) ) or zero ) \");\n      });\n    });\n    context('with empty string argument', function () {\n      it('should return the empty string', function () {\n        var res = (0, _stringmanipulation.cleanParens)(\"\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"\");\n      });\n    });\n    context('without argument', function () {\n      it('should throw an error', function () {\n        _chai.assert[\"throws\"](_stringmanipulation.cleanParens, Error, \"No string argument given.\");\n      });\n    });\n  });\n  describe('changeDateFormat()', function () {\n    context('with non-empty string argument', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.changeDateFormat)(\"\\\"24/12/2019 23:33:33\\\"\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"\\\"24/12/2019-23:33:33\\\"\");\n      });\n    });\n    context('with empty string argument', function () {\n      it('should return the empty string', function () {\n        var res = (0, _stringmanipulation.changeDateFormat)(\"\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"\");\n      });\n    });\n    context('without argument', function () {\n      it('should throw an error', function () {\n        _chai.assert[\"throws\"](_stringmanipulation.changeDateFormat, Error, \"No string argument given.\");\n      });\n    });\n  });\n  describe('changeDateFormatBack()', function () {\n    context('with non-empty string argument', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.changeDateFormatBack)(\"\\\"24/12/2019-23:33:33\\\"\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"\\\"24/12/2019 23:33:33\\\"\");\n      });\n    });\n    context('with empty string argument', function () {\n      it('should return the empty string', function () {\n        var res = (0, _stringmanipulation.changeDateFormatBack)(\"\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"\");\n      });\n    });\n    context('without argument', function () {\n      it('should throw an error', function () {\n        _chai.assert[\"throws\"](_stringmanipulation.changeDateFormatBack, Error, \"No string argument given.\");\n      });\n    });\n  });\n  describe('addSpacing()', function () {\n    context('with non-empty string argument', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.addSpacing)(\"give one or zero\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"give one or zero\");\n      });\n      it('2', function () {\n        var res = (0, _stringmanipulation.addSpacing)(\"give one or zero)\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"give one or zero )\");\n      });\n      it('3', function () {\n        var res = (0, _stringmanipulation.addSpacing)(\"give one or zero \");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"give one or zero \");\n      });\n      it('4', function () {\n        var res = (0, _stringmanipulation.addSpacing)(\"give one (or zero)\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"give one ( or zero )\");\n      });\n      it('5', function () {\n        var res = (0, _stringmanipulation.addSpacing)(\"give one {}(or zero)\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"give one { } ( or zero )\");\n      });\n      it('6', function () {\n        var res = (0, _stringmanipulation.addSpacing)(\"{give one} (or zero)\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"{ give one } ( or zero )\");\n      });\n    });\n    context('with empty string argument', function () {\n      it('should return the empty string', function () {\n        var res = (0, _stringmanipulation.addSpacing)(\"\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"\");\n      });\n    });\n    context('without argument', function () {\n      it('should throw an error', function () {\n        _chai.assert[\"throws\"](_stringmanipulation.addSpacing, Error, \"No string argument given.\");\n      });\n    });\n  });\n  describe('addParens()', function () {\n    context('with non-empty string argument', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.addParens)(\"one ) )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"( ( one ) )\");\n      });\n      it('2', function () {\n        var res = (0, _stringmanipulation.addParens)(\"give one or zero)\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"( give one or zero)\");\n      });\n      it('3', function () {\n        var res = (0, _stringmanipulation.addParens)(\"give one or zero \");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"give one or zero \");\n      });\n      it('4', function () {\n        var res = (0, _stringmanipulation.addParens)(\"give one (or zero)\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"give one (or zero)\");\n      });\n      it('5', function () {\n        var res = (0, _stringmanipulation.addParens)(\"give one ((or zero)\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"give one ((or zero) )\");\n      });\n    });\n    context('with empty string argument', function () {\n      it('should return the empty string', function () {\n        var res = (0, _stringmanipulation.addParens)(\"\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"\");\n      });\n    });\n    context('without argument', function () {\n      it('should throw an error', function () {\n        _chai.assert[\"throws\"](_stringmanipulation.addParens, Error, \"No string argument given.\");\n      });\n    });\n  });\n  describe('openingParensAmount()', function () {\n    context('with non-empty string argument', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.openingParensAmount)(\"one ) )\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(0);\n      });\n      it('2', function () {\n        var res = (0, _stringmanipulation.openingParensAmount)(\"give one or zero\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(0);\n      });\n      it('3', function () {\n        var res = (0, _stringmanipulation.openingParensAmount)(\"give one or (zero \");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(1);\n      });\n      it('4', function () {\n        var res = (0, _stringmanipulation.openingParensAmount)(\"give one (or zero)\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(1);\n      });\n      it('5', function () {\n        var res = (0, _stringmanipulation.openingParensAmount)(\"give one(() (or zero)\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(3);\n      });\n    });\n    context('with empty string argument', function () {\n      it('should return 0', function () {\n        var res = (0, _stringmanipulation.openingParensAmount)(\"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(0);\n      });\n    });\n    context('without argument', function () {\n      it('should throw an error', function () {\n        _chai.assert[\"throws\"](_stringmanipulation.openingParensAmount, Error, \"No string argument given.\");\n      });\n    });\n  });\n  describe('closingParensAmount()', function () {\n    context('with non-empty string argument', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.closingParensAmount)(\"one ) )\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(2);\n      });\n      it('2', function () {\n        var res = (0, _stringmanipulation.closingParensAmount)(\"give one or zero\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(0);\n      });\n      it('3', function () {\n        var res = (0, _stringmanipulation.closingParensAmount)(\"give one or (zero \");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(0);\n      });\n      it('4', function () {\n        var res = (0, _stringmanipulation.closingParensAmount)(\"give one (or zero)\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(1);\n      });\n      it('5', function () {\n        var res = (0, _stringmanipulation.closingParensAmount)(\"give one(() (or zero)\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(2);\n      });\n    });\n    context('with empty string argument', function () {\n      it('should return 0', function () {\n        var res = (0, _stringmanipulation.closingParensAmount)(\"\");\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(0);\n      });\n    });\n    context('without argument', function () {\n      it('should throw an error', function () {\n        _chai.assert[\"throws\"](_stringmanipulation.closingParensAmount, Error, \"No string argument given.\");\n      });\n    });\n  });\n  describe('lTrimWhiteSpace()', function () {\n    context('with non-empty string argument', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.lTrimWhiteSpace)(\" one ) )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one ) )\");\n      });\n      it('2', function () {\n        var res = (0, _stringmanipulation.lTrimWhiteSpace)(\"one ) )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one ) )\");\n      });\n      it('3', function () {\n        var res = (0, _stringmanipulation.lTrimWhiteSpace)(\"  one ) ) \");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one ) ) \");\n      });\n      it('4', function () {\n        var res = (0, _stringmanipulation.lTrimWhiteSpace)(\"   give one (or zero)\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"give one (or zero)\");\n      });\n    });\n    context('with empty string argument', function () {\n      it('should return the empty string', function () {\n        var res = (0, _stringmanipulation.lTrimWhiteSpace)(\"\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"\");\n      });\n    });\n    context('without argument', function () {\n      it('should throw an error', function () {\n        _chai.assert[\"throws\"](_stringmanipulation.lTrimWhiteSpace, Error, \"No string argument given.\");\n      });\n    });\n  });\n  describe('rTrimWhiteSpace()', function () {\n    context('with non-empty string argument', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.rTrimWhiteSpace)(\" one ) ) \");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\" one ) )\");\n      });\n      it('2', function () {\n        var res = (0, _stringmanipulation.rTrimWhiteSpace)(\"one ) )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one ) )\");\n      });\n      it('3', function () {\n        var res = (0, _stringmanipulation.rTrimWhiteSpace)(\"one ) )  \");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one ) )\");\n      });\n      it('4', function () {\n        var res = (0, _stringmanipulation.rTrimWhiteSpace)(\"give one (or zero)   \");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"give one (or zero)\");\n      });\n    });\n    context('with empty string argument', function () {\n      it('should return the empty string', function () {\n        var res = (0, _stringmanipulation.rTrimWhiteSpace)(\"\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"\");\n      });\n    });\n    context('without argument', function () {\n      it('should throw an error', function () {\n        _chai.assert[\"throws\"](_stringmanipulation.rTrimWhiteSpace, Error, \"No string argument given.\");\n      });\n    });\n  });\n  describe('lTrimParen()', function () {\n    context('with non-empty string argument', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.lTrimParen)(\" one ) )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\" one ) )\");\n      });\n      it('2', function () {\n        var res = (0, _stringmanipulation.lTrimParen)(\"( one ) )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one ) )\");\n      });\n      it('3', function () {\n        var res = (0, _stringmanipulation.lTrimParen)(\"( (one ) )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"(one ) )\");\n      });\n      it('4', function () {\n        var res = (0, _stringmanipulation.lTrimParen)(\"( (give one (or zero)\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"(give one (or zero)\");\n      });\n    });\n    context('with empty string argument', function () {\n      it('should return the empty string', function () {\n        var res = (0, _stringmanipulation.lTrimParen)(\"\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"\");\n      });\n    });\n    context('without argument', function () {\n      it('should throw an error', function () {\n        _chai.assert[\"throws\"](_stringmanipulation.lTrimParen, Error, \"No string argument given.\");\n      });\n    });\n  });\n  describe('rTrimParen()', function () {\n    context('with non-empty string argument', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.rTrimParen)(\" one ) )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\" one )\");\n      });\n      it('2', function () {\n        var res = (0, _stringmanipulation.rTrimParen)(\"(one ) \");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"(one ) \");\n      });\n      it('3', function () {\n        var res = (0, _stringmanipulation.rTrimParen)(\"( (one)) )\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"( (one))\");\n      });\n      it('4', function () {\n        var res = (0, _stringmanipulation.rTrimParen)(\"( (give one (or zero\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"( (give one (or zero\");\n      });\n    });\n    context('with empty string argument', function () {\n      it('should return the empty string', function () {\n        var res = (0, _stringmanipulation.rTrimParen)(\"\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"\");\n      });\n    });\n    context('without argument', function () {\n      it('should throw an error', function () {\n        _chai.assert[\"throws\"](_stringmanipulation.rTrimParen, Error, \"No string argument given.\");\n      });\n    });\n  });\n  describe('lTrimBrace()', function () {\n    context('with non-empty string argument', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.lTrimBrace)(\"{ one }\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one }\");\n      });\n      it('2', function () {\n        var res = (0, _stringmanipulation.lTrimBrace)(\"{ {}{one) \");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"{}{one) \");\n      });\n      it('3', function () {\n        var res = (0, _stringmanipulation.lTrimBrace)(\" {one}\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\" {one}\");\n      });\n      it('4', function () {\n        var res = (0, _stringmanipulation.lTrimBrace)(\" \");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\" \");\n      });\n    });\n    context('with empty string argument', function () {\n      it('should return the empty string', function () {\n        var res = (0, _stringmanipulation.lTrimBrace)(\"\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"\");\n      });\n    });\n    context('without argument', function () {\n      it('should throw an error', function () {\n        _chai.assert[\"throws\"](_stringmanipulation.lTrimBrace, Error, \"No string argument given.\");\n      });\n    });\n  });\n  describe('rTrimBrace()', function () {\n    context('with non-empty string argument', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.rTrimBrace)(\"{ one }\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"{ one\");\n      });\n      it('2', function () {\n        var res = (0, _stringmanipulation.rTrimBrace)(\"{ {}{one)}} }\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"{ {}{one)}}\");\n      });\n      it('3', function () {\n        var res = (0, _stringmanipulation.rTrimBrace)(\" {one} \");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\" {one} \");\n      });\n      it('4', function () {\n        var res = (0, _stringmanipulation.rTrimBrace)(\" \");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\" \");\n      });\n    });\n    context('with empty string argument', function () {\n      it('should return the empty string', function () {\n        var res = (0, _stringmanipulation.rTrimBrace)(\"\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"\");\n      });\n    });\n    context('without argument', function () {\n      it('should throw an error', function () {\n        _chai.assert[\"throws\"](_stringmanipulation.rTrimBrace, Error, \"No string argument given.\");\n      });\n    });\n  });\n  describe('lTrimDoubleQuotes()', function () {\n    context('with non-empty string argument', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.lTrimDoubleQuotes)(\"\\\"24/12/2019-23:33:33\\\"\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"24/12/2019-23:33:33\\\"\");\n      });\n      it('2', function () {\n        var res = (0, _stringmanipulation.lTrimDoubleQuotes)(\"\\\"\\\"24/12/2019-23:33:33\\\"\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"\\\"24/12/2019-23:33:33\\\"\");\n      });\n      it('3', function () {\n        var res = (0, _stringmanipulation.lTrimDoubleQuotes)(\" 24/12/2019-23:33:33\\\"\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\" 24/12/2019-23:33:33\\\"\");\n      });\n      it('4', function () {\n        var res = (0, _stringmanipulation.lTrimDoubleQuotes)(\"\\\" 24/12/2019-23:33:33\\\"\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\" 24/12/2019-23:33:33\\\"\");\n      });\n    });\n    context('with empty string argument', function () {\n      it('should return the empty string', function () {\n        var res = (0, _stringmanipulation.lTrimDoubleQuotes)(\"\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"\");\n      });\n    });\n    context('without argument', function () {\n      it('should throw an error', function () {\n        _chai.assert[\"throws\"](_stringmanipulation.lTrimDoubleQuotes, Error, \"No string argument given.\");\n      });\n    });\n  });\n  describe('rTrimDoubleQuotes()', function () {\n    context('with non-empty string argument', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.rTrimDoubleQuotes)(\"\\\"24/12/2019-23:33:33\\\"\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"\\\"24/12/2019-23:33:33\");\n      });\n      it('2', function () {\n        var res = (0, _stringmanipulation.rTrimDoubleQuotes)(\"\\\"\\\"24/12/2019-23:33:33\\\"\\\"\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"\\\"\\\"24/12/2019-23:33:33\\\"\");\n      });\n      it('3', function () {\n        var res = (0, _stringmanipulation.rTrimDoubleQuotes)(\" 24/12/2019-23:33:33 \");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\" 24/12/2019-23:33:33 \");\n      });\n      it('4', function () {\n        var res = (0, _stringmanipulation.rTrimDoubleQuotes)(\"\\\" 24/12/2019-23:33:33 \\\"\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"\\\" 24/12/2019-23:33:33 \");\n      });\n    });\n    context('with empty string argument', function () {\n      it('should return the empty string', function () {\n        var res = (0, _stringmanipulation.rTrimDoubleQuotes)(\"\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"\");\n      });\n    });\n    context('without argument', function () {\n      it('should throw an error', function () {\n        _chai.assert[\"throws\"](_stringmanipulation.rTrimDoubleQuotes, Error, \"No string argument given.\");\n      });\n    });\n  });\n  describe('trimSemiColon()', function () {\n    context('with non-empty string argument', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.trimSemiColon)(\"one;\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one\");\n      });\n      it('2', function () {\n        var res = (0, _stringmanipulation.trimSemiColon)(\"one;;\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one;\");\n      });\n      it('3', function () {\n        var res = (0, _stringmanipulation.trimSemiColon)(\"one; \");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one; \");\n      });\n    });\n    context('with empty string argument', function () {\n      it('should return the empty string', function () {\n        var res = (0, _stringmanipulation.trimSemiColon)(\"\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"\");\n      });\n    });\n    context('without argument', function () {\n      it('should throw an error', function () {\n        _chai.assert[\"throws\"](_stringmanipulation.trimSemiColon, Error, \"No string argument given.\");\n      });\n    });\n  });\n  describe('concatenate()', function () {\n    context('with two non-empty arrays as arguments', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.concatenate)([1, 2, 3, 4], [1, 2]);\n\n        _chai.assert.isArray(res);\n\n        _chai.assert.lengthOf(res, 6);\n\n        _chai.assert.sameMembers(res, [1, 2, 3, 4, 1, 2]);\n      });\n      it('2', function () {\n        var res = (0, _stringmanipulation.concatenate)([1, 2, 3, 4], [1, 2, 5]);\n\n        _chai.assert.isArray(res);\n\n        _chai.assert.lengthOf(res, 7);\n\n        _chai.assert.sameMembers(res, [1, 2, 3, 4, 1, 2, 5]);\n      });\n      it('3', function () {\n        var res = (0, _stringmanipulation.concatenate)([1, 2], [1, 2, 5]);\n\n        _chai.assert.isArray(res);\n\n        _chai.assert.lengthOf(res, 5);\n\n        _chai.assert.sameMembers(res, [1, 2, 1, 2, 5]);\n      });\n    });\n    context('with empty arrays as arguments', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.concatenate)([], [1, 2, 5]);\n\n        _chai.assert.isArray(res);\n\n        _chai.assert.lengthOf(res, 3);\n\n        _chai.assert.sameMembers(res, [1, 2, 5]);\n      });\n      it('2', function () {\n        var res = (0, _stringmanipulation.concatenate)([], []);\n\n        _chai.assert.isArray(res);\n\n        _chai.assert.isEmpty(res);\n      });\n      it('3', function () {\n        var res = (0, _stringmanipulation.concatenate)([1, 2], []);\n\n        _chai.assert.isArray(res);\n\n        _chai.assert.lengthOf(res, 2);\n\n        _chai.assert.sameMembers(res, [1, 2]);\n      });\n    });\n  });\n  describe('computeDateString()', function () {\n    context('with non-empty string argument', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.computeDateString)(\"11/12/2019-20:21:22\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"2019-12-11T20:21:22+01:00\");\n      });\n    });\n  });\n  describe('beforeCurrentDate()', function () {\n    context('with non-empty horizonToCheck argument', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.beforeCurrentDate)(\"11/12/2019-20:21:22\", \"11/12/2019-20:21:22\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('2', function () {\n        var res = (0, _stringmanipulation.beforeCurrentDate)(\"11/12/2019-20:21:22\", \"11/12/2019-20:21:23\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n      it('3', function () {\n        var res = (0, _stringmanipulation.beforeCurrentDate)(\"11/12/2019-20:21:23\", \"11/12/2019-20:21:22\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('4', function () {\n        var res = (0, _stringmanipulation.beforeCurrentDate)(\"11/12/2019-20:21:22\", \"infinite\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n      it('5', function () {\n        var res = (0, _stringmanipulation.beforeCurrentDate)(\"infinite\", \"infinite\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('6', function () {\n        var res = (0, _stringmanipulation.beforeCurrentDate)(\"infinite\", \"11/12/2019-20:21:22\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n    });\n    context('with empty horizonToCheck argument', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.beforeCurrentDate)(\"11/12/2010-20:21:22\", \"\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n    });\n  });\n  describe('equalDates()', function () {\n    context('with two non-infinite date arguments', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.equalDates)(\"11/12/2019-20:21:22\", \"11/12/2019-20:21:22\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n      it('2', function () {\n        var res = (0, _stringmanipulation.equalDates)(\"11/12/2019-20:21:22\", \"11/12/2019-20:21:23\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('3', function () {\n        var res = (0, _stringmanipulation.equalDates)(\"11/12/2019-20:21:23\", \"11/12/2019-20:21:22\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n    });\n    context('with infinite date arguments', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.equalDates)(\"11/12/2010-20:21:22\", \"infinite\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('2', function () {\n        var res = (0, _stringmanipulation.equalDates)(\"infinite\", \"11/12/2010-20:21:22\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('3', function () {\n        var res = (0, _stringmanipulation.equalDates)(\"infinite\", \"infinite\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n    });\n  });\n  describe('greaterDate()', function () {\n    context('with two non-infinite date arguments', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.greaterDate)(\"11/12/2019-20:21:22\", \"11/12/2019-20:21:22\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('2', function () {\n        var res = (0, _stringmanipulation.greaterDate)(\"11/12/2019-20:21:22\", \"11/12/2019-20:21:23\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('3', function () {\n        var res = (0, _stringmanipulation.greaterDate)(\"11/12/2019-20:21:23\", \"11/12/2019-20:21:22\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n    });\n    context('with infinite date arguments', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.greaterDate)(\"11/12/2010-20:21:22\", \"infinite\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('2', function () {\n        var res = (0, _stringmanipulation.greaterDate)(\"infinite\", \"11/12/2010-20:21:22\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n      it('3', function () {\n        var res = (0, _stringmanipulation.greaterDate)(\"infinite\", \"infinite\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n    });\n  });\n  describe('isDate()', function () {\n    context('with non-empty arguments', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.isDate)(\" \");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('2', function () {\n        var res = (0, _stringmanipulation.isDate)(\"11/12/2010-20:21:22\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n      it('3', function () {\n        var res = (0, _stringmanipulation.isDate)(\"11/12/2010 20:21:22\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('4', function () {\n        var res = (0, _stringmanipulation.isDate)(\"11/12/20100-20:21:22\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('5', function () {\n        var res = (0, _stringmanipulation.isDate)(\"1/13/2010-20:21:22\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('6', function () {\n        var res = (0, _stringmanipulation.isDate)(\"01/1/2010-20:21:22\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('7', function () {\n        var res = (0, _stringmanipulation.isDate)(\"01/01/2010-2:21:22\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('8', function () {\n        var res = (0, _stringmanipulation.isDate)(\"01/01/2010-02/21:22\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('9', function () {\n        var res = (0, _stringmanipulation.isDate)(\"01/01/2010-25:21:22\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('10', function () {\n        var res = (0, _stringmanipulation.isDate)(\"01/01/2010-02:21:62\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n    });\n    context('with empty argument', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.isDate)(\"\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n    });\n  });\n  describe('padNumber()', function () {\n    context('with non-empty number string as argument', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.padNumber)(\"1\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"01\");\n      });\n      it('2', function () {\n        var res = (0, _stringmanipulation.padNumber)(\"10\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"10\");\n      });\n      it('3', function () {\n        var res = (0, _stringmanipulation.padNumber)(\"100\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"100\");\n      });\n      it('4', function () {\n        var res = (0, _stringmanipulation.padNumber)(\"0\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"00\");\n      });\n    });\n    context('with empty number string as argument', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.padNumber)(\"\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"\");\n      });\n    });\n  });\n  describe('findNextConnective()', function () {\n    var arr = [\"one\", \"or\", \"zero\", \"and\", \"some\", \"other\", \"word\", \"or\", \"one\", \"and\", \"or\", \"zero\"];\n    context('with non-empty contract string array as arguments', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.findNextConnective)(arr, 0);\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"or\");\n      });\n      it('2', function () {\n        var res = (0, _stringmanipulation.findNextConnective)(arr, 1);\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"or\");\n      });\n      it('3', function () {\n        var res = (0, _stringmanipulation.findNextConnective)(arr, 2);\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"and\");\n      });\n      it('4', function () {\n        var res = (0, _stringmanipulation.findNextConnective)(arr, 5);\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"or\");\n      });\n      it('5', function () {\n        var res = (0, _stringmanipulation.findNextConnective)(arr, arr.length - 3);\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"and\");\n      });\n      it('5', function () {\n        var res = (0, _stringmanipulation.findNextConnective)(arr, arr.length - 1);\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"\");\n      });\n    });\n  });\n  describe('findConsequent()', function () {\n    var strArr1 = [\"one\", \"or\", \"if\", \"(\", \"zero\", \"[==]\", \"zero\", \")\", \"{\", \"one\", \"}\", \"else\", \"{\", \"zero\", \"}\"];\n    var strArr2 = [\"one\", \"or\", \"if\", \"(\", \"zero\", \"[==]\", \"zero\", \")\", \"{\", \"one\", \"and\", \"zero\", \"}\", \"else\", \"{\", \"zero\", \"}\"];\n    var strArr3 = [\"one\", \"or\", \"if\", \"(\", \"zero\", \"[==]\", \"zero\", \")\", \"{\", \"one\", \"and\", \"zero\", \"}\"];\n    context('with non-empty string array as argument', function () {\n      it('1', function () {\n        var res = (0, _stringmanipulation.findConsequent)(strArr1, 9);\n\n        _chai.assert.isArray(res);\n\n        _chai.assert.include(res, 2);\n\n        _chai.assert.include(res, \"one\");\n      });\n      it('2', function () {\n        var res = (0, _stringmanipulation.findConsequent)(strArr2, 9);\n\n        _chai.assert.isArray(res);\n\n        _chai.assert.include(res, 4);\n\n        _chai.assert.include(res, \"one and zero\");\n      });\n      it('3', function () {\n        var res = (0, _stringmanipulation.findConsequent)(strArr3, 9);\n\n        _chai.assert.isArray(res);\n\n        _chai.assert.include(res, 4);\n\n        _chai.assert.include(res, \"one and zero\");\n      });\n      it('4', function () {\n        var res = (0, _stringmanipulation.findConsequent)(strArr2, 15);\n\n        _chai.assert.isArray(res);\n\n        _chai.assert.include(res, 2);\n\n        _chai.assert.include(res, \"zero\");\n      });\n      it('5', function () {\n        var res = (0, _stringmanipulation.findConsequent)([\"one\", \"and\", \"zero\"], 0);\n\n        _chai.assert.isArray(res);\n\n        _chai.assert.include(res, 0);\n\n        _chai.assert.include(res, \"\");\n      });\n    });\n    context('with empty string array as argument', function () {\n      it('should return the empty string', function () {\n        var res = (0, _stringmanipulation.findConsequent)([], 2);\n\n        _chai.assert.isArray(res);\n\n        _chai.assert.include(res, 0);\n\n        _chai.assert.include(res, \"\");\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "stringmanipulation.js"
      ],
      "names": [
        "describe",
        "context",
        "it",
        "res",
        "assert",
        "isString",
        "to",
        "equal",
        "cleanParens",
        "Error",
        "changeDateFormat",
        "changeDateFormatBack",
        "addSpacing",
        "addParens",
        "isNumber",
        "openingParensAmount",
        "closingParensAmount",
        "lTrimWhiteSpace",
        "rTrimWhiteSpace",
        "lTrimParen",
        "rTrimParen",
        "lTrimBrace",
        "rTrimBrace",
        "lTrimDoubleQuotes",
        "rTrimDoubleQuotes",
        "trimSemiColon",
        "isArray",
        "lengthOf",
        "sameMembers",
        "isEmpty",
        "isBoolean",
        "arr",
        "length",
        "strArr1",
        "strArr2",
        "strArr3",
        "include"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test",
      "sourcesContent": [
        "/* test/stringmanipulation.js */\nimport {\n    cleanParens,\n    changeDateFormat,\n    changeDateFormatBack,\n    addSpacing,\n    addParens,\n    openingParensAmount,\n    closingParensAmount,\n    lTrimWhiteSpace,\n    rTrimWhiteSpace,\n    lTrimParen,\n    rTrimParen,\n    lTrimBrace,\n    rTrimBrace,\n    lTrimDoubleQuotes,\n    rTrimDoubleQuotes,\n    trimSemiColon,\n    findConsequent,\n    findNextConnective,\n    padNumber,\n    concatenate,\n    computeDateString,\n    beforeCurrentDate,\n    equalDates,\n    greaterDate,\n    isDate,\n} from \"../src/js/stringmanipulation.mjs\";\n\nimport {\n    expect,\n    assert\n} from \"chai\";\n\ndescribe('testing stringmanipulation.mjs...', function() {\n\n    describe('cleanParens()', function() {\n        // NOTE: spaces are added around parenthesis before this method is being called\n        context('with non-empty string argument', function() {\n            it('1', function() {\n                var res = cleanParens(\") one or zero )\");\n                assert.isString(res);\n                expect(res).to.equal(\"one or zero\")\n            })\n            it('2', function() {\n                var res = cleanParens(\"one or zero\");\n                assert.isString(res);\n                expect(res).to.equal(\"one or zero\")\n            })\n            it('3', function() {\n                var res = cleanParens(\"( ( one or zero\");\n                assert.isString(res);\n                expect(res).to.equal(\"one or zero\")\n            })\n            it('4', function() {\n                var res = cleanParens(\"( ( one or zero (\");\n                assert.isString(res);\n                expect(res).to.equal(\"one or zero\")\n            })\n            it('5', function() {\n                var res = cleanParens(\"one ( ( or zero\");\n                assert.isString(res);\n                expect(res).to.equal(\"one ( ( or zero\")\n            })\n            it('6', function() {\n                var res = cleanParens(\"( one ) ) or zero\");\n                assert.isString(res);\n                expect(res).to.equal(\"( one ) ) or zero\")\n            })\n            it('7', function() {\n                var res = cleanParens(\"( one ) ) or zero )\");\n                assert.isString(res);\n                expect(res).to.equal(\"( one ) ) or zero\")\n            })\n            it('8', function() {\n                var res = cleanParens(\"( one ) ) or zero ) \");\n                assert.isString(res);\n                expect(res).to.equal(\"( one ) ) or zero ) \")\n            })\n        })\n\n        context('with empty string argument', function() {\n            it('should return the empty string', function() {\n                var res = cleanParens(\"\");\n                assert.isString(res);\n                expect(res).to.equal(\"\")\n            })\n        })\n\n        context('without argument', function() {\n            it('should throw an error', function() {\n                assert.throws(cleanParens, Error, \"No string argument given.\");\n            })\n        })\n    })\n\n    describe('changeDateFormat()', function() {\n        context('with non-empty string argument', function() {\n            it('1', function() {\n                var res = changeDateFormat(\"\\\"24/12/2019 23:33:33\\\"\");\n                assert.isString(res);\n                expect(res).to.equal(\"\\\"24/12/2019-23:33:33\\\"\")\n            })\n        })\n\n        context('with empty string argument', function() {\n            it('should return the empty string', function() {\n                var res = changeDateFormat(\"\");\n                assert.isString(res);\n                expect(res).to.equal(\"\")\n            })\n        })\n\n        context('without argument', function() {\n            it('should throw an error', function() {\n                assert.throws(changeDateFormat, Error, \"No string argument given.\");\n            })\n        })\n    })\n\n    describe('changeDateFormatBack()', function() {\n        context('with non-empty string argument', function() {\n            it('1', function() {\n                var res = changeDateFormatBack(\"\\\"24/12/2019-23:33:33\\\"\");\n                assert.isString(res);\n                expect(res).to.equal(\"\\\"24/12/2019 23:33:33\\\"\")\n            })\n        })\n\n        context('with empty string argument', function() {\n            it('should return the empty string', function() {\n                var res = changeDateFormatBack(\"\");\n                assert.isString(res);\n                expect(res).to.equal(\"\")\n            })\n        })\n\n        context('without argument', function() {\n            it('should throw an error', function() {\n                assert.throws(changeDateFormatBack, Error, \"No string argument given.\");\n            })\n        })\n    })\n\n    describe('addSpacing()', function() {\n        context('with non-empty string argument', function() {\n            it('1', function() {\n                var res = addSpacing(\"give one or zero\");\n                assert.isString(res);\n                expect(res).to.equal(\"give one or zero\")\n            })\n            it('2', function() {\n                var res = addSpacing(\"give one or zero)\");\n                assert.isString(res);\n                expect(res).to.equal(\"give one or zero )\")\n            })\n            it('3', function() {\n                var res = addSpacing(\"give one or zero \");\n                assert.isString(res);\n                expect(res).to.equal(\"give one or zero \")\n            })\n            it('4', function() {\n                var res = addSpacing(\"give one (or zero)\");\n                assert.isString(res);\n                expect(res).to.equal(\"give one ( or zero )\")\n            })\n            it('5', function() {\n                var res = addSpacing(\"give one {}(or zero)\");\n                assert.isString(res);\n                expect(res).to.equal(\"give one { } ( or zero )\")\n            })\n            it('6', function() {\n                var res = addSpacing(\"{give one} (or zero)\");\n                assert.isString(res);\n                expect(res).to.equal(\"{ give one } ( or zero )\")\n            })\n        })\n\n        context('with empty string argument', function() {\n            it('should return the empty string', function() {\n                var res = addSpacing(\"\");\n                assert.isString(res);\n                expect(res).to.equal(\"\")\n            })\n        })\n\n        context('without argument', function() {\n            it('should throw an error', function() {\n                assert.throws(addSpacing, Error, \"No string argument given.\");\n            })\n        })\n    })\n\n    describe('addParens()', function() {\n        context('with non-empty string argument', function() {\n            it('1', function() {\n                var res = addParens(\"one ) )\");\n                assert.isString(res);\n                expect(res).to.equal(\"( ( one ) )\")\n            })\n            it('2', function() {\n                var res = addParens(\"give one or zero)\");\n                assert.isString(res);\n                expect(res).to.equal(\"( give one or zero)\")\n            })\n            it('3', function() {\n                var res = addParens(\"give one or zero \");\n                assert.isString(res);\n                expect(res).to.equal(\"give one or zero \")\n            })\n            it('4', function() {\n                var res = addParens(\"give one (or zero)\");\n                assert.isString(res);\n                expect(res).to.equal(\"give one (or zero)\")\n            })\n            it('5', function() {\n                var res = addParens(\"give one ((or zero)\");\n                assert.isString(res);\n                expect(res).to.equal(\"give one ((or zero) )\")\n            })\n        })\n\n        context('with empty string argument', function() {\n            it('should return the empty string', function() {\n                var res = addParens(\"\");\n                assert.isString(res);\n                expect(res).to.equal(\"\")\n            })\n        })\n\n        context('without argument', function() {\n            it('should throw an error', function() {\n                assert.throws(addParens, Error, \"No string argument given.\");\n            })\n        })\n    })\n\n    describe('openingParensAmount()', function() {\n        context('with non-empty string argument', function() {\n            it('1', function() {\n                var res = openingParensAmount(\"one ) )\");\n                assert.isNumber(res);\n                expect(res).to.equal(0)\n            })\n            it('2', function() {\n                var res = openingParensAmount(\"give one or zero\");\n                assert.isNumber(res);\n                expect(res).to.equal(0)\n            })\n            it('3', function() {\n                var res = openingParensAmount(\"give one or (zero \");\n                assert.isNumber(res);\n                expect(res).to.equal(1)\n            })\n            it('4', function() {\n                var res = openingParensAmount(\"give one (or zero)\");\n                assert.isNumber(res);\n                expect(res).to.equal(1)\n            })\n            it('5', function() {\n                var res = openingParensAmount(\"give one(() (or zero)\");\n                assert.isNumber(res);\n                expect(res).to.equal(3)\n            })\n        })\n\n        context('with empty string argument', function() {\n            it('should return 0', function() {\n                var res = openingParensAmount(\"\");\n                assert.isNumber(res);\n                expect(res).to.equal(0)\n            })\n        })\n\n        context('without argument', function() {\n            it('should throw an error', function() {\n                assert.throws(openingParensAmount, Error, \"No string argument given.\");\n            })\n        })\n    })\n\n    describe('closingParensAmount()', function() {\n        context('with non-empty string argument', function() {\n            it('1', function() {\n                var res = closingParensAmount(\"one ) )\");\n                assert.isNumber(res);\n                expect(res).to.equal(2)\n            })\n            it('2', function() {\n                var res = closingParensAmount(\"give one or zero\");\n                assert.isNumber(res);\n                expect(res).to.equal(0)\n            })\n            it('3', function() {\n                var res = closingParensAmount(\"give one or (zero \");\n                assert.isNumber(res);\n                expect(res).to.equal(0)\n            })\n            it('4', function() {\n                var res = closingParensAmount(\"give one (or zero)\");\n                assert.isNumber(res);\n                expect(res).to.equal(1)\n            })\n            it('5', function() {\n                var res = closingParensAmount(\"give one(() (or zero)\");\n                assert.isNumber(res);\n                expect(res).to.equal(2)\n            })\n        })\n\n        context('with empty string argument', function() {\n            it('should return 0', function() {\n                var res = closingParensAmount(\"\");\n                assert.isNumber(res);\n                expect(res).to.equal(0)\n            })\n        })\n\n        context('without argument', function() {\n            it('should throw an error', function() {\n                assert.throws(closingParensAmount, Error, \"No string argument given.\");\n            })\n        })\n    })\n\n    describe('lTrimWhiteSpace()', function() {\n        context('with non-empty string argument', function() {\n            it('1', function() {\n                var res = lTrimWhiteSpace(\" one ) )\");\n                assert.isString(res);\n                expect(res).to.equal(\"one ) )\")\n            })\n            it('2', function() {\n                var res = lTrimWhiteSpace(\"one ) )\");\n                assert.isString(res);\n                expect(res).to.equal(\"one ) )\")\n            })\n            it('3', function() {\n                var res = lTrimWhiteSpace(\"  one ) ) \");\n                assert.isString(res);\n                expect(res).to.equal(\"one ) ) \")\n            })\n            it('4', function() {\n                var res = lTrimWhiteSpace(\"   give one (or zero)\");\n                assert.isString(res);\n                expect(res).to.equal(\"give one (or zero)\")\n            })\n        })\n\n        context('with empty string argument', function() {\n            it('should return the empty string', function() {\n                var res = lTrimWhiteSpace(\"\");\n                assert.isString(res);\n                expect(res).to.equal(\"\")\n            })\n        })\n\n        context('without argument', function() {\n            it('should throw an error', function() {\n                assert.throws(lTrimWhiteSpace, Error, \"No string argument given.\");\n            })\n        })\n    })\n\n    describe('rTrimWhiteSpace()', function() {\n        context('with non-empty string argument', function() {\n            it('1', function() {\n                var res = rTrimWhiteSpace(\" one ) ) \");\n                assert.isString(res);\n                expect(res).to.equal(\" one ) )\")\n            })\n            it('2', function() {\n                var res = rTrimWhiteSpace(\"one ) )\");\n                assert.isString(res);\n                expect(res).to.equal(\"one ) )\")\n            })\n            it('3', function() {\n                var res = rTrimWhiteSpace(\"one ) )  \");\n                assert.isString(res);\n                expect(res).to.equal(\"one ) )\")\n            })\n            it('4', function() {\n                var res = rTrimWhiteSpace(\"give one (or zero)   \");\n                assert.isString(res);\n                expect(res).to.equal(\"give one (or zero)\")\n            })\n        })\n\n        context('with empty string argument', function() {\n            it('should return the empty string', function() {\n                var res = rTrimWhiteSpace(\"\");\n                assert.isString(res);\n                expect(res).to.equal(\"\")\n            })\n        })\n\n        context('without argument', function() {\n            it('should throw an error', function() {\n                assert.throws(rTrimWhiteSpace, Error, \"No string argument given.\");\n            })\n        })\n    })\n\n    describe('lTrimParen()', function() {\n        context('with non-empty string argument', function() {\n            it('1', function() {\n                var res = lTrimParen(\" one ) )\");\n                assert.isString(res);\n                expect(res).to.equal(\" one ) )\")\n            })\n            it('2', function() {\n                var res = lTrimParen(\"( one ) )\");\n                assert.isString(res);\n                expect(res).to.equal(\"one ) )\")\n            })\n            it('3', function() {\n                var res = lTrimParen(\"( (one ) )\");\n                assert.isString(res);\n                expect(res).to.equal(\"(one ) )\")\n            })\n            it('4', function() {\n                var res = lTrimParen(\"( (give one (or zero)\");\n                assert.isString(res);\n                expect(res).to.equal(\"(give one (or zero)\")\n            })\n        })\n\n        context('with empty string argument', function() {\n            it('should return the empty string', function() {\n                var res = lTrimParen(\"\");\n                assert.isString(res);\n                expect(res).to.equal(\"\")\n            })\n        })\n\n        context('without argument', function() {\n            it('should throw an error', function() {\n                assert.throws(lTrimParen, Error, \"No string argument given.\");\n            })\n        })\n    })\n\n    describe('rTrimParen()', function() {\n        context('with non-empty string argument', function() {\n            it('1', function() {\n                var res = rTrimParen(\" one ) )\");\n                assert.isString(res);\n                expect(res).to.equal(\" one )\")\n            })\n            it('2', function() {\n                var res = rTrimParen(\"(one ) \");\n                assert.isString(res);\n                expect(res).to.equal(\"(one ) \")\n            })\n            it('3', function() {\n                var res = rTrimParen(\"( (one)) )\");\n                assert.isString(res);\n                expect(res).to.equal(\"( (one))\")\n            })\n            it('4', function() {\n                var res = rTrimParen(\"( (give one (or zero\");\n                assert.isString(res);\n                expect(res).to.equal(\"( (give one (or zero\")\n            })\n        })\n\n        context('with empty string argument', function() {\n            it('should return the empty string', function() {\n                var res = rTrimParen(\"\");\n                assert.isString(res);\n                expect(res).to.equal(\"\")\n            })\n        })\n\n        context('without argument', function() {\n            it('should throw an error', function() {\n                assert.throws(rTrimParen, Error, \"No string argument given.\");\n            })\n        })\n    })\n\n    describe('lTrimBrace()', function() {\n        context('with non-empty string argument', function() {\n            it('1', function() {\n                var res = lTrimBrace(\"{ one }\");\n                assert.isString(res);\n                expect(res).to.equal(\"one }\")\n            })\n            it('2', function() {\n                var res = lTrimBrace(\"{ {}{one) \");\n                assert.isString(res);\n                expect(res).to.equal(\"{}{one) \")\n            })\n            it('3', function() {\n                var res = lTrimBrace(\" {one}\");\n                assert.isString(res);\n                expect(res).to.equal(\" {one}\")\n            })\n            it('4', function() {\n                var res = lTrimBrace(\" \");\n                assert.isString(res);\n                expect(res).to.equal(\" \")\n            })\n        })\n\n        context('with empty string argument', function() {\n            it('should return the empty string', function() {\n                var res = lTrimBrace(\"\");\n                assert.isString(res);\n                expect(res).to.equal(\"\")\n            })\n        })\n\n        context('without argument', function() {\n            it('should throw an error', function() {\n                assert.throws(lTrimBrace, Error, \"No string argument given.\");\n            })\n        })\n    })\n\n    describe('rTrimBrace()', function() {\n        context('with non-empty string argument', function() {\n            it('1', function() {\n                var res = rTrimBrace(\"{ one }\");\n                assert.isString(res);\n                expect(res).to.equal(\"{ one\")\n            })\n            it('2', function() {\n                var res = rTrimBrace(\"{ {}{one)}} }\");\n                assert.isString(res);\n                expect(res).to.equal(\"{ {}{one)}}\")\n            })\n            it('3', function() {\n                var res = rTrimBrace(\" {one} \");\n                assert.isString(res);\n                expect(res).to.equal(\" {one} \")\n            })\n            it('4', function() {\n                var res = rTrimBrace(\" \");\n                assert.isString(res);\n                expect(res).to.equal(\" \")\n            })\n        })\n\n        context('with empty string argument', function() {\n            it('should return the empty string', function() {\n                var res = rTrimBrace(\"\");\n                assert.isString(res);\n                expect(res).to.equal(\"\")\n            })\n        })\n\n        context('without argument', function() {\n            it('should throw an error', function() {\n                assert.throws(rTrimBrace, Error, \"No string argument given.\");\n            })\n        })\n    })\n\n    describe('lTrimDoubleQuotes()', function() {\n        context('with non-empty string argument', function() {\n            it('1', function() {\n                var res = lTrimDoubleQuotes(\"\\\"24/12/2019-23:33:33\\\"\");\n                assert.isString(res);\n                expect(res).to.equal(\"24/12/2019-23:33:33\\\"\")\n            })\n            it('2', function() {\n                var res = lTrimDoubleQuotes(\"\\\"\\\"24/12/2019-23:33:33\\\"\");\n                assert.isString(res);\n                expect(res).to.equal(\"\\\"24/12/2019-23:33:33\\\"\")\n            })\n            it('3', function() {\n                var res = lTrimDoubleQuotes(\" 24/12/2019-23:33:33\\\"\");\n                assert.isString(res);\n                expect(res).to.equal(\" 24/12/2019-23:33:33\\\"\")\n            })\n            it('4', function() {\n                var res = lTrimDoubleQuotes(\"\\\" 24/12/2019-23:33:33\\\"\");\n                assert.isString(res);\n                expect(res).to.equal(\" 24/12/2019-23:33:33\\\"\")\n            })\n        })\n\n        context('with empty string argument', function() {\n            it('should return the empty string', function() {\n                var res = lTrimDoubleQuotes(\"\");\n                assert.isString(res);\n                expect(res).to.equal(\"\")\n            })\n        })\n\n        context('without argument', function() {\n            it('should throw an error', function() {\n                assert.throws(lTrimDoubleQuotes, Error, \"No string argument given.\");\n            })\n        })\n    })\n\n    describe('rTrimDoubleQuotes()', function() {\n        context('with non-empty string argument', function() {\n            it('1', function() {\n                var res = rTrimDoubleQuotes(\"\\\"24/12/2019-23:33:33\\\"\");\n                assert.isString(res);\n                expect(res).to.equal(\"\\\"24/12/2019-23:33:33\")\n            })\n            it('2', function() {\n                var res = rTrimDoubleQuotes(\"\\\"\\\"24/12/2019-23:33:33\\\"\\\"\");\n                assert.isString(res);\n                expect(res).to.equal(\"\\\"\\\"24/12/2019-23:33:33\\\"\")\n            })\n            it('3', function() {\n                var res = rTrimDoubleQuotes(\" 24/12/2019-23:33:33 \");\n                assert.isString(res);\n                expect(res).to.equal(\" 24/12/2019-23:33:33 \")\n            })\n            it('4', function() {\n                var res = rTrimDoubleQuotes(\"\\\" 24/12/2019-23:33:33 \\\"\");\n                assert.isString(res);\n                expect(res).to.equal(\"\\\" 24/12/2019-23:33:33 \");\n            })\n        })\n\n        context('with empty string argument', function() {\n            it('should return the empty string', function() {\n                var res = rTrimDoubleQuotes(\"\");\n                assert.isString(res);\n                expect(res).to.equal(\"\")\n            })\n        })\n\n        context('without argument', function() {\n            it('should throw an error', function() {\n                assert.throws(rTrimDoubleQuotes, Error, \"No string argument given.\");\n            })\n        })\n    })\n\n    describe('trimSemiColon()', function() {\n        context('with non-empty string argument', function() {\n            it('1', function() {\n                var res = trimSemiColon(\"one;\");\n                assert.isString(res);\n                expect(res).to.equal(\"one\")\n            })\n            it('2', function() {\n                var res = trimSemiColon(\"one;;\");\n                assert.isString(res);\n                expect(res).to.equal(\"one;\")\n            })\n            it('3', function() {\n                var res = trimSemiColon(\"one; \");\n                assert.isString(res);\n                expect(res).to.equal(\"one; \")\n            })\n        })\n\n        context('with empty string argument', function() {\n            it('should return the empty string', function() {\n                var res = trimSemiColon(\"\");\n                assert.isString(res);\n                expect(res).to.equal(\"\")\n            })\n        })\n\n        context('without argument', function() {\n            it('should throw an error', function() {\n                assert.throws(trimSemiColon, Error, \"No string argument given.\");\n            })\n        })\n    })\n\n    describe('concatenate()', function() {\n\n        context('with two non-empty arrays as arguments', function() {\n\n            it('1', function() {\n                var res = concatenate([1, 2, 3, 4], [1, 2]);\n                assert.isArray(res);\n                assert.lengthOf(res, 6);\n                assert.sameMembers(res, [1, 2, 3, 4, 1, 2]);\n            })\n            it('2', function() {\n                var res = concatenate([1, 2, 3, 4], [1, 2, 5]);\n                assert.isArray(res);\n                assert.lengthOf(res, 7);\n                assert.sameMembers(res, [1, 2, 3, 4, 1, 2, 5]);\n            })\n            it('3', function() {\n                var res = concatenate([1, 2], [1, 2, 5]);\n                assert.isArray(res);\n                assert.lengthOf(res, 5);\n                assert.sameMembers(res, [1, 2, 1, 2, 5]);\n            })\n        })\n\n        context('with empty arrays as arguments', function() {\n\n            it('1', function() {\n                var res = concatenate([], [1, 2, 5]);\n                assert.isArray(res);\n                assert.lengthOf(res, 3);\n                assert.sameMembers(res, [1, 2, 5]);\n            })\n\n            it('2', function() {\n                var res = concatenate([], []);\n                assert.isArray(res);\n                assert.isEmpty(res);\n            })\n\n            it('3', function() {\n                var res = concatenate([1, 2], []);\n                assert.isArray(res);\n                assert.lengthOf(res, 2);\n                assert.sameMembers(res, [1, 2]);\n            })\n        })\n\n    })\n\n    describe('computeDateString()', function() {\n\n        context('with non-empty string argument', function() {\n\n            it('1', function() {\n                var res = computeDateString(\"11/12/2019-20:21:22\");\n                assert.isString(res);\n                expect(res).to.equal(\"2019-12-11T20:21:22+01:00\")\n            })\n        })\n    })\n\n    describe('beforeCurrentDate()', function() {\n\n        context('with non-empty horizonToCheck argument', function() {\n\n            it('1', function() {\n                var res = beforeCurrentDate(\"11/12/2019-20:21:22\", \"11/12/2019-20:21:22\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n\n            it('2', function() {\n                var res = beforeCurrentDate(\"11/12/2019-20:21:22\", \"11/12/2019-20:21:23\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n\n            it('3', function() {\n                var res = beforeCurrentDate(\"11/12/2019-20:21:23\", \"11/12/2019-20:21:22\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n\n            it('4', function() {\n                var res = beforeCurrentDate(\"11/12/2019-20:21:22\", \"infinite\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n\n            it('5', function() {\n                var res = beforeCurrentDate(\"infinite\", \"infinite\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n\n            it('6', function() {\n                var res = beforeCurrentDate(\"infinite\", \"11/12/2019-20:21:22\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n        })\n\n        context('with empty horizonToCheck argument', function() {\n\n            it('1', function() {\n                var res = beforeCurrentDate(\"11/12/2010-20:21:22\", \"\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n        })\n    })\n\n    describe('equalDates()', function() {\n\n        context('with two non-infinite date arguments', function() {\n\n            it('1', function() {\n                var res = equalDates(\"11/12/2019-20:21:22\", \"11/12/2019-20:21:22\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n\n            it('2', function() {\n                var res = equalDates(\"11/12/2019-20:21:22\", \"11/12/2019-20:21:23\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n\n            it('3', function() {\n                var res = equalDates(\"11/12/2019-20:21:23\", \"11/12/2019-20:21:22\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n        })\n\n        context('with infinite date arguments', function() {\n\n            it('1', function() {\n                var res = equalDates(\"11/12/2010-20:21:22\", \"infinite\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n\n            it('2', function() {\n                var res = equalDates(\"infinite\", \"11/12/2010-20:21:22\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n\n            it('3', function() {\n                var res = equalDates(\"infinite\", \"infinite\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n        })\n    })\n\n    describe('greaterDate()', function() {\n\n        context('with two non-infinite date arguments', function() {\n\n            it('1', function() {\n                var res = greaterDate(\"11/12/2019-20:21:22\", \"11/12/2019-20:21:22\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n\n            it('2', function() {\n                var res = greaterDate(\"11/12/2019-20:21:22\", \"11/12/2019-20:21:23\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n\n            it('3', function() {\n                var res = greaterDate(\"11/12/2019-20:21:23\", \"11/12/2019-20:21:22\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n        })\n\n        context('with infinite date arguments', function() {\n\n            it('1', function() {\n                var res = greaterDate(\"11/12/2010-20:21:22\", \"infinite\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n\n            it('2', function() {\n                var res = greaterDate(\"infinite\", \"11/12/2010-20:21:22\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n\n            it('3', function() {\n                var res = greaterDate(\"infinite\", \"infinite\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n        })\n    })\n\n    describe('isDate()', function() {\n\n        context('with non-empty arguments', function() {\n\n            it('1', function() {\n                var res = isDate(\" \");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n\n            it('2', function() {\n                var res = isDate(\"11/12/2010-20:21:22\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n\n            it('3', function() {\n                var res = isDate(\"11/12/2010 20:21:22\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n\n            it('4', function() {\n                var res = isDate(\"11/12/20100-20:21:22\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n\n            it('5', function() {\n                var res = isDate(\"1/13/2010-20:21:22\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n\n            it('6', function() {\n                var res = isDate(\"01/1/2010-20:21:22\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n\n            it('7', function() {\n                var res = isDate(\"01/01/2010-2:21:22\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n\n            it('8', function() {\n                var res = isDate(\"01/01/2010-02/21:22\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n\n            it('9', function() {\n                var res = isDate(\"01/01/2010-25:21:22\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n\n            it('10', function() {\n                var res = isDate(\"01/01/2010-02:21:62\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n        })\n\n        context('with empty argument', function() {\n\n            it('1', function() {\n                var res = isDate(\"\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n        })\n    })\n\n    describe('padNumber()', function() {\n\n        context('with non-empty number string as argument', function() {\n\n            it('1', function() {\n                var res = padNumber(\"1\");\n                assert.isString(res);\n                expect(res).to.equal(\"01\")\n            })\n            it('2', function() {\n                var res = padNumber(\"10\");\n                assert.isString(res);\n                expect(res).to.equal(\"10\")\n            })\n            it('3', function() {\n                var res = padNumber(\"100\");\n                assert.isString(res);\n                expect(res).to.equal(\"100\")\n            })\n            it('4', function() {\n                var res = padNumber(\"0\");\n                assert.isString(res);\n                expect(res).to.equal(\"00\")\n            })\n        })\n\n        context('with empty number string as argument', function() {\n\n            it('1', function() {\n                var res = padNumber(\"\");\n                assert.isString(res);\n                expect(res).to.equal(\"\")\n            })\n        })\n    })\n\n    describe('findNextConnective()', function() {\n\n        var arr = [\"one\", \"or\", \"zero\", \"and\", \"some\", \"other\", \"word\", \"or\", \"one\", \"and\", \"or\", \"zero\"];\n\n        context('with non-empty contract string array as arguments', function() {\n\n            it('1', function() {\n                var res = findNextConnective(arr, 0);\n                assert.isString(res);\n                expect(res).to.equal(\"or\")\n            })\n            it('2', function() {\n                var res = findNextConnective(arr, 1);\n                assert.isString(res);\n                expect(res).to.equal(\"or\")\n            })\n            it('3', function() {\n                var res = findNextConnective(arr, 2);\n                assert.isString(res);\n                expect(res).to.equal(\"and\")\n            })\n            it('4', function() {\n                var res = findNextConnective(arr, 5);\n                assert.isString(res);\n                expect(res).to.equal(\"or\")\n            })\n            it('5', function() {\n                var res = findNextConnective(arr, arr.length - 3);\n                assert.isString(res);\n                expect(res).to.equal(\"and\")\n            })\n            it('5', function() {\n                var res = findNextConnective(arr, arr.length - 1);\n                assert.isString(res);\n                expect(res).to.equal(\"\")\n            })\n        })\n    })\n\n    describe('findConsequent()', function() {\n\n        var strArr1 = [\"one\", \"or\", \"if\", \"(\", \"zero\", \"[==]\", \"zero\", \")\", \"{\", \"one\", \"}\", \"else\", \"{\", \"zero\", \"}\"];\n        var strArr2 = [\"one\", \"or\", \"if\", \"(\", \"zero\", \"[==]\", \"zero\", \")\", \"{\", \"one\", \"and\", \"zero\", \"}\", \"else\", \"{\", \"zero\", \"}\"];\n        var strArr3 = [\"one\", \"or\", \"if\", \"(\", \"zero\", \"[==]\", \"zero\", \")\", \"{\", \"one\", \"and\", \"zero\", \"}\"];\n\n\n        context('with non-empty string array as argument', function() {\n\n            it('1', function() {\n                var res = findConsequent(strArr1, 9);\n                assert.isArray(res);\n                assert.include(res, 2);\n                assert.include(res, \"one\");\n            })\n            it('2', function() {\n                var res = findConsequent(strArr2, 9);\n                assert.isArray(res);\n                assert.include(res, 4);\n                assert.include(res, \"one and zero\");\n            })\n            it('3', function() {\n                var res = findConsequent(strArr3, 9);\n                assert.isArray(res);\n                assert.include(res, 4);\n                assert.include(res, \"one and zero\");\n            })\n            it('4', function() {\n                var res = findConsequent(strArr2, 15);\n                assert.isArray(res);\n                assert.include(res, 2);\n                assert.include(res, \"zero\");\n            })\n            it('5', function() {\n                var res = findConsequent([\"one\", \"and\", \"zero\"], 0);\n                assert.isArray(res);\n                assert.include(res, 0);\n                assert.include(res, \"\");\n            })\n        })\n\n        context('with empty string array as argument', function() {\n            it('should return the empty string', function() {\n                var res = findConsequent([], 2);\n                assert.isArray(res);\n                assert.include(res, 0);\n                assert.include(res, \"\");\n            })\n        })\n    })\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566423598886
  },
  "{\"sourceRoot\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"filename\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test/contract.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test/contract.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test/contract.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test/contract.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test",
        "sourceFileName": "contract.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _contract = require(\"../src/js/contract.mjs\");\n\nvar _chai = require(\"chai\");\n\n/* test/contract.js */\ndescribe('testing contract.mjs...', function () {\n  describe('translateContract()', function () {\n    context('with non-empty arguments', function () {\n      it('1', function () {\n        var res = (0, _contract.translateContract)(1, \"3\", [], \"20/10/2020-20:20:20\", \"no\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"3 Ethers are transferred from the holder address to the counter-party address before 20/10/2020-20:20:20.\");\n      });\n      it('2', function () {\n        var res = (0, _contract.translateContract)(1, \"3\", [\"libor3m\"], \"20/10/2020-20:20:20\", \"no\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"3xlibor3m Ethers are transferred from the holder address to the counter-party address before 20/10/2020-20:20:20.\");\n      });\n      it('3', function () {\n        var res = (0, _contract.translateContract)(1, \"3\", [\"libor3m\", \"tempInLondon\"], \"20/10/2020-20:20:20\", \"no\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"3xlibor3mxtempInLondon Ethers are transferred from the holder address to the counter-party address before 20/10/2020-20:20:20.\");\n      });\n      it('4', function () {\n        var res = (0, _contract.translateContract)(1, \"0\", [\"libor3m\", \"tempInLondon\"], \"20/10/2020-20:20:20\", \"no\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"0 Ether are transferred from the holder address to the counter-party address before 20/10/2020-20:20:20.\");\n      });\n      it('5', function () {\n        var res = (0, _contract.translateContract)(1, \"1\", [\"libor3m\", \"tempInLondon\"], \"20/10/2020-20:20:20\", \"no\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"1xlibor3mxtempInLondon Ethers are transferred from the holder address to the counter-party address before 20/10/2020-20:20:20.\");\n      });\n      it('6', function () {\n        var res = (0, _contract.translateContract)(0, \"1\", [], \"20/10/2020-20:20:20\", \"no\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"1 Ether is transferred from the counter-party address to the holder address before 20/10/2020-20:20:20.\");\n      });\n      it('7', function () {\n        var res = (0, _contract.translateContract)(0, \"1\", [], \"20/10/2020-20:20:20\", \"yes\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"1 Ether is transferred from the counter-party address to the holder address at 20/10/2020-20:20:20.\");\n      });\n      it('8', function () {\n        var res = (0, _contract.translateContract)(0, \"1\", [], \"infinite\", \"yes\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"1 Ether is transferred from the counter-party address to the holder address.\");\n      });\n    });\n  });\n  describe('createNewContractString()', function () {\n    context('with non-empty arguments', function () {\n      it('1', function () {\n        var res = (0, _contract.createNewContractString)(\"0\", [], 0, \"\\\"12/12/2019-20:20:20\\\"\", \"no\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"truncate \\\"12/12/2019-20:20:20\\\" ( zero )\");\n      });\n      it('2', function () {\n        var res = (0, _contract.createNewContractString)(\"10\", [], 0, \"\\\"12/12/2019-20:20:20\\\"\", \"no\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"truncate \\\"12/12/2019-20:20:20\\\" ( scaleK 10 ( one ) )\");\n      });\n      it('3', function () {\n        var res = (0, _contract.createNewContractString)(\"1\", [], 0, \"\\\"12/12/2019-20:20:20\\\"\", \"no\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"truncate \\\"12/12/2019-20:20:20\\\" ( one )\");\n      });\n      it('4', function () {\n        var res = (0, _contract.createNewContractString)(\"1\", [], 0, \"\\\"12/12/2019-20:20:20\\\"\", \"yes\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"get ( truncate \\\"12/12/2019-20:20:20\\\" ( one ) )\");\n      });\n      it('5', function () {\n        var res = (0, _contract.createNewContractString)(\"1\", [], 0, \"infinite\", \"no\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"one\");\n      });\n      it('6', function () {\n        var res = (0, _contract.createNewContractString)(\"1\", [], 1, \"infinite\", \"no\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"give ( one )\");\n      });\n      it('7', function () {\n        var res = (0, _contract.createNewContractString)(\"100\", [], 1, \"infinite\", \"no\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"give ( scaleK 100 ( one ) )\");\n      });\n      it('8', function () {\n        var res = (0, _contract.createNewContractString)(\"0\", [], 1, \"infinite\", \"no\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"give ( zero )\");\n      });\n      it('9', function () {\n        var res = (0, _contract.createNewContractString)(\"0\", [], 1, \"\\\"12/12/2019-20:20:20\\\"\", \"yes\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"get ( give ( truncate \\\"12/12/2019-20:20:20\\\" ( zero ) ) )\");\n      });\n      it('10', function () {\n        var res = (0, _contract.createNewContractString)(\"12.5\", [], 1, \"\\\"12/12/2019-20:20:20\\\"\", \"yes\");\n\n        _chai.assert.isString(res);\n\n        (0, _chai.expect)(res).to.equal(\"get ( give ( truncate \\\"12/12/2019-20:20:20\\\" ( scaleK 12.5 ( one ) ) ) )\");\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "contract.js"
      ],
      "names": [
        "describe",
        "context",
        "it",
        "res",
        "assert",
        "isString",
        "to",
        "equal"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test",
      "sourcesContent": [
        "/* test/contract.js */\nimport {\n    translateContract,\n    createNewContractString\n} from \"../src/js/contract.mjs\";\n\nimport {\n    expect,\n    assert\n} from \"chai\";\n\ndescribe('testing contract.mjs...', function() {\n\n    describe('translateContract()', function() {\n        context('with non-empty arguments', function() {\n            it('1', function() {\n                var res = translateContract(1, \"3\", [], \"20/10/2020-20:20:20\", \"no\");\n                assert.isString(res);\n                expect(res).to.equal(\"3 Ethers are transferred from the holder address to the counter-party address before 20/10/2020-20:20:20.\");\n            })\n            it('2', function() {\n                var res = translateContract(1, \"3\", [\"libor3m\"], \"20/10/2020-20:20:20\", \"no\");\n                assert.isString(res);\n                expect(res).to.equal(\"3xlibor3m Ethers are transferred from the holder address to the counter-party address before 20/10/2020-20:20:20.\");\n            })\n            it('3', function() {\n                var res = translateContract(1, \"3\", [\"libor3m\", \"tempInLondon\"], \"20/10/2020-20:20:20\", \"no\");\n                assert.isString(res);\n                expect(res).to.equal(\"3xlibor3mxtempInLondon Ethers are transferred from the holder address to the counter-party address before 20/10/2020-20:20:20.\");\n            })\n            it('4', function() {\n                var res = translateContract(1, \"0\", [\"libor3m\", \"tempInLondon\"], \"20/10/2020-20:20:20\", \"no\");\n                assert.isString(res);\n                expect(res).to.equal(\"0 Ether are transferred from the holder address to the counter-party address before 20/10/2020-20:20:20.\");\n            })\n            it('5', function() {\n                var res = translateContract(1, \"1\", [\"libor3m\", \"tempInLondon\"], \"20/10/2020-20:20:20\", \"no\");\n                assert.isString(res);\n                expect(res).to.equal(\"1xlibor3mxtempInLondon Ethers are transferred from the holder address to the counter-party address before 20/10/2020-20:20:20.\");\n            })\n            it('6', function() {\n                var res = translateContract(0, \"1\", [], \"20/10/2020-20:20:20\", \"no\");\n                assert.isString(res);\n                expect(res).to.equal(\"1 Ether is transferred from the counter-party address to the holder address before 20/10/2020-20:20:20.\");\n            })\n            it('7', function() {\n                var res = translateContract(0, \"1\", [], \"20/10/2020-20:20:20\", \"yes\");\n                assert.isString(res);\n                expect(res).to.equal(\"1 Ether is transferred from the counter-party address to the holder address at 20/10/2020-20:20:20.\");\n            })\n            it('8', function() {\n                var res = translateContract(0, \"1\", [], \"infinite\", \"yes\");\n                assert.isString(res);\n                expect(res).to.equal(\"1 Ether is transferred from the counter-party address to the holder address.\");\n            })\n        })\n    })\n\n    describe('createNewContractString()', function() {\n\n        context('with non-empty arguments', function() {\n\n            it('1', function() {\n                var res = createNewContractString(\"0\", [], 0, \"\\\"12/12/2019-20:20:20\\\"\", \"no\");\n                assert.isString(res);\n                expect(res).to.equal(\"truncate \\\"12/12/2019-20:20:20\\\" ( zero )\")\n            })\n\n            it('2', function() {\n                var res = createNewContractString(\"10\", [], 0, \"\\\"12/12/2019-20:20:20\\\"\", \"no\");\n                assert.isString(res);\n                expect(res).to.equal(\"truncate \\\"12/12/2019-20:20:20\\\" ( scaleK 10 ( one ) )\")\n            })\n\n            it('3', function() {\n                var res = createNewContractString(\"1\", [], 0, \"\\\"12/12/2019-20:20:20\\\"\", \"no\");\n                assert.isString(res);\n                expect(res).to.equal(\"truncate \\\"12/12/2019-20:20:20\\\" ( one )\")\n            })\n\n            it('4', function() {\n                var res = createNewContractString(\"1\", [], 0, \"\\\"12/12/2019-20:20:20\\\"\", \"yes\");\n                assert.isString(res);\n                expect(res).to.equal(\"get ( truncate \\\"12/12/2019-20:20:20\\\" ( one ) )\")\n            })\n\n            it('5', function() {\n                var res = createNewContractString(\"1\", [], 0, \"infinite\", \"no\");\n                assert.isString(res);\n                expect(res).to.equal(\"one\")\n            })\n\n            it('6', function() {\n                var res = createNewContractString(\"1\", [], 1, \"infinite\", \"no\");\n                assert.isString(res);\n                expect(res).to.equal(\"give ( one )\")\n            })\n\n            it('7', function() {\n                var res = createNewContractString(\"100\", [], 1, \"infinite\", \"no\");\n                assert.isString(res);\n                expect(res).to.equal(\"give ( scaleK 100 ( one ) )\")\n            })\n\n            it('8', function() {\n                var res = createNewContractString(\"0\", [], 1, \"infinite\", \"no\");\n                assert.isString(res);\n                expect(res).to.equal(\"give ( zero )\")\n            })\n\n            it('9', function() {\n                var res = createNewContractString(\"0\", [], 1, \"\\\"12/12/2019-20:20:20\\\"\", \"yes\");\n                assert.isString(res);\n                expect(res).to.equal(\"get ( give ( truncate \\\"12/12/2019-20:20:20\\\" ( zero ) ) )\")\n            })\n\n            it('10', function() {\n                var res = createNewContractString(\"12.5\", [], 1, \"\\\"12/12/2019-20:20:20\\\"\", \"yes\");\n                assert.isString(res);\n                expect(res).to.equal(\"get ( give ( truncate \\\"12/12/2019-20:20:20\\\" ( scaleK 12.5 ( one ) ) ) )\")\n            })\n        })\n    })\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566422687768
  },
  "{\"sourceRoot\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"filename\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test/generalfunctions.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test/generalfunctions.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test/generalfunctions.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test/generalfunctions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test",
        "sourceFileName": "generalfunctions.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _generalfunctions = require(\"../src/js/generalfunctions.mjs\");\n\nvar _chai = require(\"chai\");\n\n/* test/generalfunctions.js */\ndescribe('testing generalfunctions.mjs...', function () {\n  describe('occurrences()', function () {\n    context('with non-empty arguments', function () {\n      it('1', function () {\n        var res = (0, _generalfunctions.occurrences)(\"give one or zero or give else\", \"give\", false);\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(2);\n      });\n      it('2', function () {\n        var res = (0, _generalfunctions.occurrences)(\"give one or get get get zero or give else get\", \"get\", false);\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(4);\n      });\n      it('3', function () {\n        var res = (0, _generalfunctions.occurrences)(\"give one or get get get zero or give else get\", \"truncate\", false);\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(0);\n      });\n      it('4', function () {\n        var res = (0, _generalfunctions.occurrences)(\"give one or get get get zero or give else get truncate \", \"truncate\", false);\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(1);\n      });\n      it('5', function () {\n        var res = (0, _generalfunctions.occurrences)(\"truncate give one or get get get zero or give else get \", \"truncate\", false);\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(1);\n      });\n      it('6', function () {\n        var res = (0, _generalfunctions.occurrences)(\"truncater give one or get get get zero otruncate or give else get \", \" truncate \", false);\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(0);\n      });\n      it('7', function () {\n        var res = (0, _generalfunctions.occurrences)(\"truncater give one or get get get zero otruncate or give else get \", \"truncate\", false);\n\n        _chai.assert.isNumber(res);\n\n        (0, _chai.expect)(res).to.equal(2);\n      });\n    });\n  });\n  describe('isNumeric()', function () {\n    context('with non-empty arguments', function () {\n      it('1', function () {\n        var res = (0, _generalfunctions.isNumeric)(\"1\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n      it('2', function () {\n        var res = (0, _generalfunctions.isNumeric)(\"give\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(false);\n      });\n      it('3', function () {\n        var res = (0, _generalfunctions.isNumeric)(\"1.01\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n      it('4', function () {\n        var res = (0, _generalfunctions.isNumeric)(\"0.001\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n      it('5', function () {\n        var res = (0, _generalfunctions.isNumeric)(\"1000\");\n\n        _chai.assert.isBoolean(res);\n\n        (0, _chai.expect)(res).to.equal(true);\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlbmVyYWxmdW5jdGlvbnMuanMiXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJjb250ZXh0IiwiaXQiLCJyZXMiLCJhc3NlcnQiLCJpc051bWJlciIsInRvIiwiZXF1YWwiLCJpc0Jvb2xlYW4iXSwibWFwcGluZ3MiOiI7O0FBQ0E7O0FBS0E7O0FBTkE7QUFXQUEsUUFBUSxDQUFDLGlDQUFELEVBQW9DLFlBQVc7QUFFbkRBLEVBQUFBLFFBQVEsQ0FBQyxlQUFELEVBQWtCLFlBQVc7QUFFakNDLElBQUFBLE9BQU8sQ0FBQywwQkFBRCxFQUE2QixZQUFXO0FBRTNDQyxNQUFBQSxFQUFFLENBQUMsR0FBRCxFQUFNLFlBQVc7QUFDZixZQUFJQyxHQUFHLEdBQUcsbUNBQVksK0JBQVosRUFBNkMsTUFBN0MsRUFBcUQsS0FBckQsQ0FBVjs7QUFDQUMscUJBQU9DLFFBQVAsQ0FBZ0JGLEdBQWhCOztBQUNBLDBCQUFPQSxHQUFQLEVBQVlHLEVBQVosQ0FBZUMsS0FBZixDQUFxQixDQUFyQjtBQUNILE9BSkMsQ0FBRjtBQU1BTCxNQUFBQSxFQUFFLENBQUMsR0FBRCxFQUFNLFlBQVc7QUFDZixZQUFJQyxHQUFHLEdBQUcsbUNBQVksK0NBQVosRUFBNkQsS0FBN0QsRUFBb0UsS0FBcEUsQ0FBVjs7QUFDQUMscUJBQU9DLFFBQVAsQ0FBZ0JGLEdBQWhCOztBQUNBLDBCQUFPQSxHQUFQLEVBQVlHLEVBQVosQ0FBZUMsS0FBZixDQUFxQixDQUFyQjtBQUNILE9BSkMsQ0FBRjtBQU1BTCxNQUFBQSxFQUFFLENBQUMsR0FBRCxFQUFNLFlBQVc7QUFDZixZQUFJQyxHQUFHLEdBQUcsbUNBQVksK0NBQVosRUFBNkQsVUFBN0QsRUFBeUUsS0FBekUsQ0FBVjs7QUFDQUMscUJBQU9DLFFBQVAsQ0FBZ0JGLEdBQWhCOztBQUNBLDBCQUFPQSxHQUFQLEVBQVlHLEVBQVosQ0FBZUMsS0FBZixDQUFxQixDQUFyQjtBQUNILE9BSkMsQ0FBRjtBQU1BTCxNQUFBQSxFQUFFLENBQUMsR0FBRCxF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Um9vdCI6Ii9Vc2Vycy9ub2FoLXZpbmNlbnpub2VoL0Rlc2t0b3AvRmluYW5jaWFsLVNtYXJ0LUNvbnRyYWN0cy90ZXN0Iiwic291cmNlc0NvbnRlbnQiOlsiLyogdGVzdC9nZW5lcmFsZnVuY3Rpb25zLmpzICovXG5pbXBvcnQge1xuICAgIG9jY3VycmVuY2VzLFxuICAgIGlzTnVtZXJpY1xufSBmcm9tIFwiLi4vc3JjL2pzL2dlbmVyYWxmdW5jdGlvbnMubWpzXCI7XG5cbmltcG9ydCB7XG4gICAgZXhwZWN0LFxuICAgIGFzc2VydFxufSBmcm9tIFwiY2hhaVwiO1xuXG5kZXNjcmliZSgndGVzdGluZyBnZW5lcmFsZnVuY3Rpb25zLm1qcy4uLicsIGZ1bmN0aW9uKCkge1xuXG4gICAgZGVzY3JpYmUoJ29jY3VycmVuY2VzKCknLCBmdW5jdGlvbigpIHtcblxuICAgICAgICBjb250ZXh0KCd3aXRoIG5vbi1lbXB0eSBhcmd1bWVudHMnLCBmdW5jdGlvbigpIHtcblxuICAgICAgICAgICAgaXQoJzEnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB2YXIgcmVzID0gb2NjdXJyZW5jZXMoXCJnaXZlIG9uZSBvciB6ZXJvIG9yIGdpdmUgZWxzZVwiLCBcImdpdmVcIiwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIGFzc2VydC5pc051bWJlcihyZXMpO1xuICAgICAgICAgICAgICAgIGV4cGVjdChyZXMpLnRvLmVxdWFsKDIpXG4gICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICBpdCgnMicsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHZhciByZXMgPSBvY2N1cnJlbmNlcyhcImdpdmUgb25lIG9yIGdldCBnZXQgZ2V0IHplcm8gb3IgZ2l2ZSBlbHNlIGdldFwiLCBcImdldFwiLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgYXNzZXJ0LmlzTnVtYmVyKHJlcyk7XG4gICAgICAgICAgICAgICAgZXhwZWN0KHJlcykudG8uZXF1YWwoNClcbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgIGl0KCczJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJlcyA9IG9jY3VycmVuY2VzKFwiZ2l2ZSBvbmUgb3IgZ2V0IGdldCBnZXQgemVybyBvciBnaXZlIGVsc2UgZ2V0XCIsIFwidHJ1bmNhdGVcIiwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIGFzc2VydC5pc051bWJlcihyZXMpO1xuICAgICAgICAgICAgICAgIGV4cGVjdChyZXMpLnRvLmVxdWFsKDApXG4gICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICBpdCgnNCcsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHZhciByZXMgPSBvY2N1cnJlbmNlcyhcImdpdmUgb25lIG9yIGdldCBnZXQgZ2V0IHplcm8gb3IgZ2l2ZSBlbHNlIGdldCB0cnVuY2F0ZSBcIiwgXCJ0cnVuY2F0ZVwiLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgYXNzZXJ0LmlzTnVtYmVyKHJlcyk7XG4gICAgICAgICAgICAgICAgZXhwZWN0KHJlcykudG8uZXF1YWwoMSlcbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgIGl0KCc1JywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJlcyA9IG9jY3VycmVuY2VzKFwidHJ1bmNhdGUgZ2l2ZSBvbmUgb3IgZ2V0IGdldCBnZXQgemVybyBvciBnaXZlIGVsc2UgZ2V0IFwiLCBcInRydW5jYXRlXCIsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICBhc3NlcnQuaXNOdW1iZXIocmVzKTtcbiAgICAgICAgICAgICAgICBleHBlY3QocmVzKS50by5lcXVhbCgxKVxuICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgaXQoJzYnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB2YXIgcmVzID0gb2NjdXJyZW5jZXMoXCJ0cnVuY2F0ZXIgZ2l2ZSBvbmUgb3IgZ2V0IGdldCBnZXQgemVybyBvdHJ1bmNhdGUgb3IgZ2l2ZSBlbHNlIGdldCBcIiwgXCIgdHJ1bmNhdGUgXCIsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICBhc3NlcnQuaXNOdW1iZXIocmVzKTtcbiAgICAgICAgICAgICAgICBleHBlY3QocmVzKS50by5lcXVhbCgwKVxuICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgaXQoJzcnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB2YXIgcmVzID0gb2NjdXJyZW5jZXMoXCJ0cnVuY2F0ZXIgZ2l2ZSBvbmUgb3IgZ2V0IGdldCBnZXQgemVybyBvdHJ1bmNhdGUgb3IgZ2l2ZSBlbHNlIGdldCBcIiwgXCJ0cnVuY2F0ZVwiLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgYXNzZXJ0LmlzTnVtYmVyKHJlcyk7XG4gICAgICAgICAgICAgICAgZXhwZWN0KHJlcykudG8uZXF1YWwoMilcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgfSlcblxuICAgIGRlc2NyaWJlKCdpc051bWVyaWMoKScsIGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIGNvbnRleHQoJ3dpdGggbm9uLWVtcHR5IGFyZ3VtZW50cycsIGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICBpdCgnMScsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHZhciByZXMgPSBpc051bWVyaWMoXCIxXCIpO1xuICAgICAgICAgICAgICAgIGFzc2VydC5pc0Jvb2xlYW4ocmVzKTtcbiAgICAgICAgICAgICAgICBleHBlY3QocmVzKS50by5lcXVhbCh0cnVlKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIGl0KCcyJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJlcyA9IGlzTnVtZXJpYyhcImdpdmVcIik7XG4gICAgICAgICAgICAgICAgYXNzZXJ0LmlzQm9vbGVhbihyZXMpO1xuICAgICAgICAgICAgICAgIGV4cGVjdChyZXMpLnRvLmVxdWFsKGZhbHNlKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIGl0KCczJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJlcyA9IGlzTnVtZXJpYyhcIjEuMDFcIik7XG4gICAgICAgICAgICAgICAgYXNzZXJ0LmlzQm9vbGVhbihyZXMpO1xuICAgICAgICAgICAgICAgIGV4cGVjdChyZXMpLnRvLmVxdWFsKHRydWUpXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgaXQoJzQnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB2YXIgcmVzID0gaXNOdW1lcmljKFwiMC4wMDFcIik7XG4gICAgICAgICAgICAgICAgYXNzZXJ0LmlzQm9vbGVhbihyZXMpO1xuICAgICAgICAgICAgICAgIGV4cGVjdChyZXMpLnRvLmVxdWFsKHRydWUpXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgaXQoJzUnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB2YXIgcmVzID0gaXNOdW1lcmljKFwiMTAwMFwiKTtcbiAgICAgICAgICAgICAgICBhc3NlcnQuaXNCb29sZWFuKHJlcyk7XG4gICAgICAgICAgICAgICAgZXhwZWN0KHJlcykudG8uZXF1YWwodHJ1ZSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgfSlcbn0pXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "generalfunctions.js"
      ],
      "names": [
        "describe",
        "context",
        "it",
        "res",
        "assert",
        "isNumber",
        "to",
        "equal",
        "isBoolean"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/test",
      "sourcesContent": [
        "/* test/generalfunctions.js */\nimport {\n    occurrences,\n    isNumeric\n} from \"../src/js/generalfunctions.mjs\";\n\nimport {\n    expect,\n    assert\n} from \"chai\";\n\ndescribe('testing generalfunctions.mjs...', function() {\n\n    describe('occurrences()', function() {\n\n        context('with non-empty arguments', function() {\n\n            it('1', function() {\n                var res = occurrences(\"give one or zero or give else\", \"give\", false);\n                assert.isNumber(res);\n                expect(res).to.equal(2)\n            })\n\n            it('2', function() {\n                var res = occurrences(\"give one or get get get zero or give else get\", \"get\", false);\n                assert.isNumber(res);\n                expect(res).to.equal(4)\n            })\n\n            it('3', function() {\n                var res = occurrences(\"give one or get get get zero or give else get\", \"truncate\", false);\n                assert.isNumber(res);\n                expect(res).to.equal(0)\n            })\n\n            it('4', function() {\n                var res = occurrences(\"give one or get get get zero or give else get truncate \", \"truncate\", false);\n                assert.isNumber(res);\n                expect(res).to.equal(1)\n            })\n\n            it('5', function() {\n                var res = occurrences(\"truncate give one or get get get zero or give else get \", \"truncate\", false);\n                assert.isNumber(res);\n                expect(res).to.equal(1)\n            })\n\n            it('6', function() {\n                var res = occurrences(\"truncater give one or get get get zero otruncate or give else get \", \" truncate \", false);\n                assert.isNumber(res);\n                expect(res).to.equal(0)\n            })\n\n            it('7', function() {\n                var res = occurrences(\"truncater give one or get get get zero otruncate or give else get \", \"truncate\", false);\n                assert.isNumber(res);\n                expect(res).to.equal(2)\n            })\n        })\n    })\n\n    describe('isNumeric()', function() {\n\n        context('with non-empty arguments', function() {\n\n            it('1', function() {\n                var res = isNumeric(\"1\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n            it('2', function() {\n                var res = isNumeric(\"give\");\n                assert.isBoolean(res);\n                expect(res).to.equal(false)\n            })\n            it('3', function() {\n                var res = isNumeric(\"1.01\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n            it('4', function() {\n                var res = isNumeric(\"0.001\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n            it('5', function() {\n                var res = isNumeric(\"1000\");\n                assert.isBoolean(res);\n                expect(res).to.equal(true)\n            })\n        })\n    })\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566423962665
  },
  "{\"sourceRoot\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"filename\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/generalfunctions.mjs\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/generalfunctions.mjs",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/generalfunctions.mjs",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js/generalfunctions.mjs",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js",
        "sourceFileName": "generalfunctions.mjs"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.occurrences = occurrences;\nexports.isNumeric = isNumeric;\n\n/**\n * @author Noah-Vincenz Noeh <noah-vincenz.noeh18@imperial.ac.uk>\n */\n\n/* jshint esversion: 6 */\nfunction sleep(ms) {\n  var start = new Date().getTime();\n\n  for (var i = 0; i < 1e7; i++) {\n    if (new Date().getTime() - start > ms) {\n      break;\n    }\n  }\n}\n/*\n* @author Vitim.us https://gist.github.com/victornpb/7736865\n* @see http://stackoverflow.com/questions/4009756/how-to-count-string-occurrence-in-string/7924240#7924240\n*/\n\n\nfunction occurrences(string, subString, allowOverlapping) {\n  string += \"\";\n  subString += \"\";\n  if (subString.length <= 0) return string.length + 1;\n  var n = 0,\n      pos = 0,\n      step = allowOverlapping ? 1 : subString.length;\n\n  while (true) {\n    pos = string.indexOf(subString, pos);\n\n    if (pos >= 0) {\n      ++n;\n      pos += step;\n    } else break;\n  }\n\n  return n;\n}\n\nfunction isNumeric(num) {\n  return !isNaN(num);\n} // for debugging\n\n\nfunction printStack(stack, name) {\n  console.log(name + \": \" + stack.length);\n  var x;\n\n  for (var x = 0; x < stack.length; ++x) {\n    console.log(name + \" - \" + x + \": \" + stack[x]);\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlbmVyYWxmdW5jdGlvbnMubWpzIl0sIm5hbWVzIjpbInNsZWVwIiwibXMiLCJzdGFydCIsIkRhdGUiLCJnZXRUaW1lIiwiaSIsIm9jY3VycmVuY2VzIiwic3RyaW5nIiwic3ViU3RyaW5nIiwiYWxsb3dPdmVybGFwcGluZyIsImxlbmd0aCIsIm4iLCJwb3MiLCJzdGVwIiwiaW5kZXhPZiIsImlzTnVtZXJpYyIsIm51bSIsImlzTmFOIiwicHJpbnRTdGFjayIsInN0YWNrIiwibmFtZSIsImNvbnNvbGUiLCJsb2ciLCJ4Il0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7O0FBSUE7QUFFQSxTQUFTQSxLQUFULENBQWVDLEVBQWYsRUFBbUI7QUFDZixNQUFJQyxLQUFLLEdBQUcsSUFBSUMsSUFBSixHQUFXQyxPQUFYLEVBQVo7O0FBQ0EsT0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHLEdBQXBCLEVBQXlCQSxDQUFDLEVBQTFCLEVBQThCO0FBQzFCLFFBQUssSUFBSUYsSUFBSixHQUFXQyxPQUFYLEtBQXVCRixLQUF4QixHQUFpQ0QsRUFBckMsRUFBd0M7QUFDcEM7QUFDSDtBQUNKO0FBQ0o7QUFFRDs7Ozs7O0FBSU8sU0FBU0ssV0FBVCxDQUFxQkMsTUFBckIsRUFBNkJDLFNBQTdCLEVBQXdDQyxnQkFBeEMsRUFBMEQ7QUFFOURGLEVBQUFBLE1BQU0sSUFBSSxFQUFWO0FBQ0FDLEVBQUFBLFNBQVMsSUFBSSxFQUFiO0FBQ0EsTUFBSUEsU0FBUyxDQUFDRSxNQUFWLElBQW9CLENBQXhCLEVBQTJCLE9BQVFILE1BQU0sQ0FBQ0csTUFBUCxHQUFnQixDQUF4QjtBQUUzQixNQUFJQyxDQUFDLEdBQUcsQ0FBUjtBQUFBLE1BQ0lDLEdBQUcsR0FBRyxDQURWO0FBQUEsTUFFSUMsSUFBSSxHQUFHSixnQkFBZ0IsR0FBRyxDQUFILEdBQU9ELFNBQVMsQ0FBQ0UsTUFGNUM7O0FBSUEsU0FBTyxJQUFQLEVBQWE7QUFDVEUsSUFBQUEsR0FBRyxHQUFHTCxNQUFNLENBQUNPLE9BQVAsQ0FBZU4sU0FBZixFQUEwQkksR0FBMUIsQ0FBTjs7QUFDQSxRQUFJQSxHQUFHLElBQUksQ0FBWCxFQUFjO0FBQ1YsUUFBRUQsQ0FBRjtBQUNBQyxNQUFBQSxHQUFHLElBQUlDLElBQVA7QUFDSCxLQUhELE1BR087QUFDVjs7QUFDRCxTQUFPRixDQUFQO0FBQ0Y7O0FBRU0sU0FBU0ksU0FBVCxDQUFtQkMsR0FBbkIsRUFBdUI7QUFDMUIsU0FBTyxDQUFDQyxLQUFLLENBQUNELEdBQUQsQ0FBYjtBQUNILEMsQ0FFRDs7O0FBQ0EsU0FBU0UsVUFBVCxDQUFvQkMsS0FBcEIsRUFBMkJDLElBQTNCLEVBQWlDO0FBQzdCQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBSSxHQUFHLElBQVAsR0FBY0QsS0FBSyxDQUFDVCxNQUFoQztBQUNBLE1BQUlhLENBQUo7O0FBQ0EsT0FBSyxJQUFJQSxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHSixLQUFLLENBQUNULE1BQTFCLEVBQWtDLEVBQUVhLENBQXBDLEVBQXVDO0FBQ25DRixJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBSSxHQUFHLEtBQVAsR0FBZUcsQ0FBZixHQUFtQixJQUFuQixHQUEwQkosS0FBSyxDQUFDSSxDQUFELENBQTNDO0FBQ0g7QUFDSiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbm9haC12aW5jZW56bm9laC9EZXNrdG9wL0ZpbmFuY2lhbC1TbWFydC1Db250cmFjdHMvc3JjL2pzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAYXV0aG9yIE5vYWgtVmluY2VueiBOb2VoIDxub2FoLXZpbmNlbnoubm9laDE4QGltcGVyaWFsLmFjLnVrPlxuICovXG5cbi8qIGpzaGludCBlc3ZlcnNpb246IDYgKi9cblxuZnVuY3Rpb24gc2xlZXAobXMpIHtcbiAgICB2YXIgc3RhcnQgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IDFlNzsgaSsrKSB7XG4gICAgICAgIGlmICgobmV3IERhdGUoKS5nZXRUaW1lKCkgLSBzdGFydCkgPiBtcyl7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLypcbiogQGF1dGhvciBWaXRpbS51cyBodHRwczovL2dpc3QuZ2l0aHViLmNvbS92aWN0b3JucGIvNzczNjg2NVxuKiBAc2VlIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDAwOTc1Ni9ob3ctdG8tY291bnQtc3RyaW5nLW9jY3VycmVuY2UtaW4tc3RyaW5nLzc5MjQyNDAjNzkyNDI0MFxuKi9cbmV4cG9ydCBmdW5jdGlvbiBvY2N1cnJlbmNlcyhzdHJpbmcsIHN1YlN0cmluZywgYWxsb3dPdmVybGFwcGluZykge1xuXG4gICBzdHJpbmcgKz0gXCJcIjtcbiAgIHN1YlN0cmluZyArPSBcIlwiO1xuICAgaWYgKHN1YlN0cmluZy5sZW5ndGggPD0gMCkgcmV0dXJuIChzdHJpbmcubGVuZ3RoICsgMSk7XG5cbiAgIHZhciBuID0gMCxcbiAgICAgICBwb3MgPSAwLFxuICAgICAgIHN0ZXAgPSBhbGxvd092ZXJsYXBwaW5nID8gMSA6IHN1YlN0cmluZy5sZW5ndGg7XG5cbiAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgcG9zID0gc3RyaW5nLmluZGV4T2Yoc3ViU3RyaW5nLCBwb3MpO1xuICAgICAgIGlmIChwb3MgPj0gMCkge1xuICAgICAgICAgICArK247XG4gICAgICAgICAgIHBvcyArPSBzdGVwO1xuICAgICAgIH0gZWxzZSBicmVhaztcbiAgIH1cbiAgIHJldHVybiBuO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNOdW1lcmljKG51bSl7XG4gICAgcmV0dXJuICFpc05hTihudW0pO1xufVxuXG4vLyBmb3IgZGVidWdnaW5nXG5mdW5jdGlvbiBwcmludFN0YWNrKHN0YWNrLCBuYW1lKSB7XG4gICAgY29uc29sZS5sb2cobmFtZSArIFwiOiBcIiArIHN0YWNrLmxlbmd0aCk7XG4gICAgdmFyIHg7XG4gICAgZm9yICh2YXIgeCA9IDA7IHggPCBzdGFjay5sZW5ndGg7ICsreCkge1xuICAgICAgICBjb25zb2xlLmxvZyhuYW1lICsgXCIgLSBcIiArIHggKyBcIjogXCIgKyBzdGFja1t4XSk7XG4gICAgfVxufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "generalfunctions.mjs"
      ],
      "names": [
        "sleep",
        "ms",
        "start",
        "Date",
        "getTime",
        "i",
        "occurrences",
        "string",
        "subString",
        "allowOverlapping",
        "length",
        "n",
        "pos",
        "step",
        "indexOf",
        "isNumeric",
        "num",
        "isNaN",
        "printStack",
        "stack",
        "name",
        "console",
        "log",
        "x"
      ],
      "mappings": ";;;;;;;;AAAA;;;;AAIA;AAEA,SAASA,KAAT,CAAeC,EAAf,EAAmB;AACf,MAAIC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,QAAK,IAAIF,IAAJ,GAAWC,OAAX,KAAuBF,KAAxB,GAAiCD,EAArC,EAAwC;AACpC;AACH;AACJ;AACJ;AAED;;;;;;AAIO,SAASK,WAAT,CAAqBC,MAArB,EAA6BC,SAA7B,EAAwCC,gBAAxC,EAA0D;AAE9DF,EAAAA,MAAM,IAAI,EAAV;AACAC,EAAAA,SAAS,IAAI,EAAb;AACA,MAAIA,SAAS,CAACE,MAAV,IAAoB,CAAxB,EAA2B,OAAQH,MAAM,CAACG,MAAP,GAAgB,CAAxB;AAE3B,MAAIC,CAAC,GAAG,CAAR;AAAA,MACIC,GAAG,GAAG,CADV;AAAA,MAEIC,IAAI,GAAGJ,gBAAgB,GAAG,CAAH,GAAOD,SAAS,CAACE,MAF5C;;AAIA,SAAO,IAAP,EAAa;AACTE,IAAAA,GAAG,GAAGL,MAAM,CAACO,OAAP,CAAeN,SAAf,EAA0BI,GAA1B,CAAN;;AACA,QAAIA,GAAG,IAAI,CAAX,EAAc;AACV,QAAED,CAAF;AACAC,MAAAA,GAAG,IAAIC,IAAP;AACH,KAHD,MAGO;AACV;;AACD,SAAOF,CAAP;AACF;;AAEM,SAASI,SAAT,CAAmBC,GAAnB,EAAuB;AAC1B,SAAO,CAACC,KAAK,CAACD,GAAD,CAAb;AACH,C,CAED;;;AACA,SAASE,UAAT,CAAoBC,KAApB,EAA2BC,IAA3B,EAAiC;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,GAAG,IAAP,GAAcD,KAAK,CAACT,MAAhC;AACA,MAAIa,CAAJ;;AACA,OAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACT,MAA1B,EAAkC,EAAEa,CAApC,EAAuC;AACnCF,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,GAAG,KAAP,GAAeG,CAAf,GAAmB,IAAnB,GAA0BJ,KAAK,CAACI,CAAD,CAA3C;AACH;AACJ",
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/src/js",
      "sourcesContent": [
        "/**\n * @author Noah-Vincenz Noeh <noah-vincenz.noeh18@imperial.ac.uk>\n */\n\n/* jshint esversion: 6 */\n\nfunction sleep(ms) {\n    var start = new Date().getTime();\n    for (var i = 0; i < 1e7; i++) {\n        if ((new Date().getTime() - start) > ms){\n            break;\n        }\n    }\n}\n\n/*\n* @author Vitim.us https://gist.github.com/victornpb/7736865\n* @see http://stackoverflow.com/questions/4009756/how-to-count-string-occurrence-in-string/7924240#7924240\n*/\nexport function occurrences(string, subString, allowOverlapping) {\n\n   string += \"\";\n   subString += \"\";\n   if (subString.length <= 0) return (string.length + 1);\n\n   var n = 0,\n       pos = 0,\n       step = allowOverlapping ? 1 : subString.length;\n\n   while (true) {\n       pos = string.indexOf(subString, pos);\n       if (pos >= 0) {\n           ++n;\n           pos += step;\n       } else break;\n   }\n   return n;\n}\n\nexport function isNumeric(num){\n    return !isNaN(num);\n}\n\n// for debugging\nfunction printStack(stack, name) {\n    console.log(name + \": \" + stack.length);\n    var x;\n    for (var x = 0; x < stack.length; ++x) {\n        console.log(name + \" - \" + x + \": \" + stack[x]);\n    }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566424011539
  }
}