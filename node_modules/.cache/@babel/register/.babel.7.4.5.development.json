{
  "{\"sourceRoot\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"filename\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/gulpfile.babel.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n//Include required modules\nvar gulp = require(\"gulp\"),\n    babelify = require('babelify'),\n    browserify = require(\"browserify\"),\n    connect = require(\"gulp-connect\"),\n    source = require(\"vinyl-source-stream\");\n/*\n// version 3\n\n//Copy static files from html folder to build folder\ngulp.task(\"copyStaticFiles\", function(){\n    return gulp.src(\"./html/*.*\")\n    .pipe(gulp.dest(\"./build\"));\n});\n\n//Convert ES6 ode in all js files in src/js folder and copy to\n//build folder as bundle.js\ngulp.task(\"build\", function(){\n    return browserify({\n        entries: [\"./src/js/deploy.mjs\"]\n    })\n    .transform(babelify.configure({\n        presets : [\"es2015\"]\n    }))\n    .bundle()\n    .pipe(source(\"bundle.js\"))\n    .pipe(gulp.dest(\"./build\"))\n    ;\n});\n\n//Start a test server with doc root at build folder and\n//listening to 9001 port. Home page = http://localhost:9001\ngulp.task(\"startServer\", function(){\n    connect.server({\n        root : \"./build\",\n        livereload : true,\n        port : 9001\n    });\n});\n\n//Default task. This will be run when no task is passed in arguments to gulp\ngulp.task(\"default\",[\"copyStaticFiles\", \"build\", \"startServer\"], function () {\n    console.log(\"Build Success\");\n});\n*/\n// version 4\n\n/*\ngulp.task('copyStaticFiles', gulp.series('build'));\ngulp.task('build', gulp.series('startServer'));\ngulp.task('startServer', gulp.series('build'));\n\ngulp.task('default', gulp.series['copyStaticFiles', 'build', 'startServer'], function () {\n    console.log(\"Build Success\");\n});\n*/\n// version 4.1\n\n\nvar _require = require('gulp'),\n    series = _require.series;\n\nfunction copyStaticFiles() {\n  return gulp.src(\"./html/*.*\").pipe(gulp.dest(\"./build\"));\n}\n\nfunction build() {\n  // body omitted\n  return browserify({\n    entries: [\"./src/js/deploy.mjs\"]\n  }).transform(babelify.configure({\n    //presets : [\"es2015\"]\n    presets: [\"@babel/env\"]\n  })).bundle().pipe(source(\"bundle.js\")).pipe(gulp.dest(\"./build\"));\n}\n\nfunction startServer() {\n  connect.server({\n    root: \"./build\",\n    livereload: true,\n    port: 9001\n  });\n}\n\nexports.build = series(copyStaticFiles, build, startServer);\nexports[\"default\"] = series(copyStaticFiles, build, startServer);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbImd1bHAiLCJyZXF1aXJlIiwiYmFiZWxpZnkiLCJicm93c2VyaWZ5IiwiY29ubmVjdCIsInNvdXJjZSIsInNlcmllcyIsImNvcHlTdGF0aWNGaWxlcyIsInNyYyIsInBpcGUiLCJkZXN0IiwiYnVpbGQiLCJlbnRyaWVzIiwidHJhbnNmb3JtIiwiY29uZmlndXJlIiwicHJlc2V0cyIsImJ1bmRsZSIsInN0YXJ0U2VydmVyIiwic2VydmVyIiwicm9vdCIsImxpdmVyZWxvYWQiLCJwb3J0IiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBLElBQUlBLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBbEI7QUFBQSxJQUNJQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxVQUFELENBRHRCO0FBQUEsSUFFSUUsVUFBVSxHQUFHRixPQUFPLENBQUMsWUFBRCxDQUZ4QjtBQUFBLElBR0lHLE9BQU8sR0FBR0gsT0FBTyxDQUFDLGNBQUQsQ0FIckI7QUFBQSxJQUlJSSxNQUFNLEdBQUdKLE9BQU8sQ0FBQyxxQkFBRCxDQUpwQjtBQU1BOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF1Q0E7O0FBQ0E7Ozs7Ozs7OztBQVVBOzs7ZUFDbUJBLE9BQU8sQ0FBQyxNQUFELEM7SUFBbEJLLE0sWUFBQUEsTTs7QUFFUixTQUFTQyxlQUFULEdBQTJCO0FBQ3pCLFNBQU9QLElBQUksQ0FBQ1EsR0FBTCxDQUFTLFlBQVQsRUFDTkMsSUFETSxDQUNEVCxJQUFJLENBQUNVLElBQUwsQ0FBVSxTQUFWLENBREMsQ0FBUDtBQUVEOztBQUVELFNBQVNDLEtBQVQsR0FBaUI7QUFDZjtBQUNBLFNBQU9SLFVBQVUsQ0FBQztBQUNkUyxJQUFBQSxPQUFPLEVBQUUsQ0FBQyxxQkFBRDtBQURLLEdBQUQsQ0FBVixDQUdOQyxTQUhNLENBR0lYLFFBQVEsQ0FBQ1ksU0FBVCxDQUFtQjtBQUMxQjtBQUNBQyxJQUFBQSxPQUFPLEVBQUUsQ0FBQyxZQUFEO0FBRmlCLEdBQW5CLENBSEosRUFPTkMsTUFQTSxHQVFOUCxJQVJNLENBUURKLE1BQU0sQ0FBQyxXQUFELENBUkwsRUFTTkksSUFUTSxDQVNEVCxJQUFJLENBQUNVLElBQUwsQ0FBVSxTQUFWLENBVEMsQ0FBUDtBQVdEOztBQUVELFNBQVNPLFdBQVQsR0FBdUI7QUFDckJiLEVBQUFBLE9BQU8sQ0FBQ2MsTUFBUixDQUFlO0FBQ1hDLElBQUFBLElBQUksRUFBRyxTQURJO0FBRVhDLElBQUFBLFVBQVUsRUFBRyxJQUZGO0FBR1hDLElBQUFBLElBQUksRUFBRztBQUhJLEdBQWY7QUFLRDs7QUFFREMsT0FBTyxDQUFDWCxLQUFSLEdBQWdCTCxNQUFNLENBQUNDLGVBQUQsRUFBa0JJLEtBQWxCLEVBQXlCTSxXQUF6QixDQUF0QjtBQUNBSyxPQUFPLFdBQVAsR0FBa0JoQixNQUFNLENBQUNDLGVBQUQsRUFBa0JJLEtBQWxCLEVBQXlCTSxXQUF6QixDQUF4QiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbm9haC12aW5jZW56bm9laC9EZXNrdG9wL0ZpbmFuY2lhbC1TbWFydC1Db250cmFjdHMiLCJzb3VyY2VzQ29udGVudCI6WyIvL0luY2x1ZGUgcmVxdWlyZWQgbW9kdWxlc1xudmFyIGd1bHAgPSByZXF1aXJlKFwiZ3VscFwiKSxcbiAgICBiYWJlbGlmeSA9IHJlcXVpcmUoJ2JhYmVsaWZ5JyksXG4gICAgYnJvd3NlcmlmeSA9IHJlcXVpcmUoXCJicm93c2VyaWZ5XCIpLFxuICAgIGNvbm5lY3QgPSByZXF1aXJlKFwiZ3VscC1jb25uZWN0XCIpLFxuICAgIHNvdXJjZSA9IHJlcXVpcmUoXCJ2aW55bC1zb3VyY2Utc3RyZWFtXCIpXG47XG4vKlxuLy8gdmVyc2lvbiAzXG5cbi8vQ29weSBzdGF0aWMgZmlsZXMgZnJvbSBodG1sIGZvbGRlciB0byBidWlsZCBmb2xkZXJcbmd1bHAudGFzayhcImNvcHlTdGF0aWNGaWxlc1wiLCBmdW5jdGlvbigpe1xuICAgIHJldHVybiBndWxwLnNyYyhcIi4vaHRtbC8qLipcIilcbiAgICAucGlwZShndWxwLmRlc3QoXCIuL2J1aWxkXCIpKTtcbn0pO1xuXG4vL0NvbnZlcnQgRVM2IG9kZSBpbiBhbGwganMgZmlsZXMgaW4gc3JjL2pzIGZvbGRlciBhbmQgY29weSB0b1xuLy9idWlsZCBmb2xkZXIgYXMgYnVuZGxlLmpzXG5ndWxwLnRhc2soXCJidWlsZFwiLCBmdW5jdGlvbigpe1xuICAgIHJldHVybiBicm93c2VyaWZ5KHtcbiAgICAgICAgZW50cmllczogW1wiLi9zcmMvanMvZGVwbG95Lm1qc1wiXVxuICAgIH0pXG4gICAgLnRyYW5zZm9ybShiYWJlbGlmeS5jb25maWd1cmUoe1xuICAgICAgICBwcmVzZXRzIDogW1wiZXMyMDE1XCJdXG4gICAgfSkpXG4gICAgLmJ1bmRsZSgpXG4gICAgLnBpcGUoc291cmNlKFwiYnVuZGxlLmpzXCIpKVxuICAgIC5waXBlKGd1bHAuZGVzdChcIi4vYnVpbGRcIikpXG4gICAgO1xufSk7XG5cbi8vU3RhcnQgYSB0ZXN0IHNlcnZlciB3aXRoIGRvYyByb290IGF0IGJ1aWxkIGZvbGRlciBhbmRcbi8vbGlzdGVuaW5nIHRvIDkwMDEgcG9ydC4gSG9tZSBwYWdlID0gaHR0cDovL2xvY2FsaG9zdDo5MDAxXG5ndWxwLnRhc2soXCJzdGFydFNlcnZlclwiLCBmdW5jdGlvbigpe1xuICAgIGNvbm5lY3Quc2VydmVyKHtcbiAgICAgICAgcm9vdCA6IFwiLi9idWlsZFwiLFxuICAgICAgICBsaXZlcmVsb2FkIDogdHJ1ZSxcbiAgICAgICAgcG9ydCA6IDkwMDFcbiAgICB9KTtcbn0pO1xuXG4vL0RlZmF1bHQgdGFzay4gVGhpcyB3aWxsIGJlIHJ1biB3aGVuIG5vIHRhc2sgaXMgcGFzc2VkIGluIGFyZ3VtZW50cyB0byBndWxwXG5ndWxwLnRhc2soXCJkZWZhdWx0XCIsW1wiY29weVN0YXRpY0ZpbGVzXCIsIFwiYnVpbGRcIiwgXCJzdGFydFNlcnZlclwiXSwgZnVuY3Rpb24gKCkge1xuICAgIGNvbnNvbGUubG9nKFwiQnVpbGQgU3VjY2Vzc1wiKTtcbn0pO1xuKi9cbi8vIHZlcnNpb24gNFxuLypcbmd1bHAudGFzaygnY29weVN0YXRpY0ZpbGVzJywgZ3VscC5zZXJpZXMoJ2J1aWxkJykpO1xuZ3VscC50YXNrKCdidWlsZCcsIGd1bHAuc2VyaWVzKCdzdGFydFNlcnZlcicpKTtcbmd1bHAudGFzaygnc3RhcnRTZXJ2ZXInLCBndWxwLnNlcmllcygnYnVpbGQnKSk7XG5cbmd1bHAudGFzaygnZGVmYXVsdCcsIGd1bHAuc2VyaWVzWydjb3B5U3RhdGljRmlsZXMnLCAnYnVpbGQnLCAnc3RhcnRTZXJ2ZXInXSwgZnVuY3Rpb24gKCkge1xuICAgIGNvbnNvbGUubG9nKFwiQnVpbGQgU3VjY2Vzc1wiKTtcbn0pO1xuKi9cblxuLy8gdmVyc2lvbiA0LjFcbmNvbnN0IHsgc2VyaWVzIH0gPSByZXF1aXJlKCdndWxwJyk7XG5cbmZ1bmN0aW9uIGNvcHlTdGF0aWNGaWxlcygpIHtcbiAgcmV0dXJuIGd1bHAuc3JjKFwiLi9odG1sLyouKlwiKVxuICAucGlwZShndWxwLmRlc3QoXCIuL2J1aWxkXCIpKTtcbn1cblxuZnVuY3Rpb24gYnVpbGQoKSB7XG4gIC8vIGJvZHkgb21pdHRlZFxuICByZXR1cm4gYnJvd3NlcmlmeSh7XG4gICAgICBlbnRyaWVzOiBbXCIuL3NyYy9qcy9kZXBsb3kubWpzXCJdXG4gIH0pXG4gIC50cmFuc2Zvcm0oYmFiZWxpZnkuY29uZmlndXJlKHtcbiAgICAgIC8vcHJlc2V0cyA6IFtcImVzMjAxNVwiXVxuICAgICAgcHJlc2V0czogW1wiQGJhYmVsL2VudlwiXVxuICB9KSlcbiAgLmJ1bmRsZSgpXG4gIC5waXBlKHNvdXJjZShcImJ1bmRsZS5qc1wiKSlcbiAgLnBpcGUoZ3VscC5kZXN0KFwiLi9idWlsZFwiKSlcbiAgO1xufVxuXG5mdW5jdGlvbiBzdGFydFNlcnZlcigpIHtcbiAgY29ubmVjdC5zZXJ2ZXIoe1xuICAgICAgcm9vdCA6IFwiLi9idWlsZFwiLFxuICAgICAgbGl2ZXJlbG9hZCA6IHRydWUsXG4gICAgICBwb3J0IDogOTAwMVxuICB9KTtcbn1cblxuZXhwb3J0cy5idWlsZCA9IHNlcmllcyhjb3B5U3RhdGljRmlsZXMsIGJ1aWxkLCBzdGFydFNlcnZlcik7XG5leHBvcnRzLmRlZmF1bHQgPSBzZXJpZXMoY29weVN0YXRpY0ZpbGVzLCBidWlsZCwgc3RhcnRTZXJ2ZXIpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "gulp",
        "require",
        "babelify",
        "browserify",
        "connect",
        "source",
        "series",
        "copyStaticFiles",
        "src",
        "pipe",
        "dest",
        "build",
        "entries",
        "transform",
        "configure",
        "presets",
        "bundle",
        "startServer",
        "server",
        "root",
        "livereload",
        "port",
        "exports"
      ],
      "mappings": ";;AAAA;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;AAAA,IACIC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CADtB;AAAA,IAEIE,UAAU,GAAGF,OAAO,CAAC,YAAD,CAFxB;AAAA,IAGIG,OAAO,GAAGH,OAAO,CAAC,cAAD,CAHrB;AAAA,IAIII,MAAM,GAAGJ,OAAO,CAAC,qBAAD,CAJpB;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;;AACA;;;;;;;;;AAUA;;;eACmBA,OAAO,CAAC,MAAD,C;IAAlBK,M,YAAAA,M;;AAER,SAASC,eAAT,GAA2B;AACzB,SAAOP,IAAI,CAACQ,GAAL,CAAS,YAAT,EACNC,IADM,CACDT,IAAI,CAACU,IAAL,CAAU,SAAV,CADC,CAAP;AAED;;AAED,SAASC,KAAT,GAAiB;AACf;AACA,SAAOR,UAAU,CAAC;AACdS,IAAAA,OAAO,EAAE,CAAC,qBAAD;AADK,GAAD,CAAV,CAGNC,SAHM,CAGIX,QAAQ,CAACY,SAAT,CAAmB;AAC1B;AACAC,IAAAA,OAAO,EAAE,CAAC,YAAD;AAFiB,GAAnB,CAHJ,EAONC,MAPM,GAQNP,IARM,CAQDJ,MAAM,CAAC,WAAD,CARL,EASNI,IATM,CASDT,IAAI,CAACU,IAAL,CAAU,SAAV,CATC,CAAP;AAWD;;AAED,SAASO,WAAT,GAAuB;AACrBb,EAAAA,OAAO,CAACc,MAAR,CAAe;AACXC,IAAAA,IAAI,EAAG,SADI;AAEXC,IAAAA,UAAU,EAAG,IAFF;AAGXC,IAAAA,IAAI,EAAG;AAHI,GAAf;AAKD;;AAEDC,OAAO,CAACX,KAAR,GAAgBL,MAAM,CAACC,eAAD,EAAkBI,KAAlB,EAAyBM,WAAzB,CAAtB;AACAK,OAAO,WAAP,GAAkBhB,MAAM,CAACC,eAAD,EAAkBI,KAAlB,EAAyBM,WAAzB,CAAxB",
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "sourcesContent": [
        "//Include required modules\nvar gulp = require(\"gulp\"),\n    babelify = require('babelify'),\n    browserify = require(\"browserify\"),\n    connect = require(\"gulp-connect\"),\n    source = require(\"vinyl-source-stream\")\n;\n/*\n// version 3\n\n//Copy static files from html folder to build folder\ngulp.task(\"copyStaticFiles\", function(){\n    return gulp.src(\"./html/*.*\")\n    .pipe(gulp.dest(\"./build\"));\n});\n\n//Convert ES6 ode in all js files in src/js folder and copy to\n//build folder as bundle.js\ngulp.task(\"build\", function(){\n    return browserify({\n        entries: [\"./src/js/deploy.mjs\"]\n    })\n    .transform(babelify.configure({\n        presets : [\"es2015\"]\n    }))\n    .bundle()\n    .pipe(source(\"bundle.js\"))\n    .pipe(gulp.dest(\"./build\"))\n    ;\n});\n\n//Start a test server with doc root at build folder and\n//listening to 9001 port. Home page = http://localhost:9001\ngulp.task(\"startServer\", function(){\n    connect.server({\n        root : \"./build\",\n        livereload : true,\n        port : 9001\n    });\n});\n\n//Default task. This will be run when no task is passed in arguments to gulp\ngulp.task(\"default\",[\"copyStaticFiles\", \"build\", \"startServer\"], function () {\n    console.log(\"Build Success\");\n});\n*/\n// version 4\n/*\ngulp.task('copyStaticFiles', gulp.series('build'));\ngulp.task('build', gulp.series('startServer'));\ngulp.task('startServer', gulp.series('build'));\n\ngulp.task('default', gulp.series['copyStaticFiles', 'build', 'startServer'], function () {\n    console.log(\"Build Success\");\n});\n*/\n\n// version 4.1\nconst { series } = require('gulp');\n\nfunction copyStaticFiles() {\n  return gulp.src(\"./html/*.*\")\n  .pipe(gulp.dest(\"./build\"));\n}\n\nfunction build() {\n  // body omitted\n  return browserify({\n      entries: [\"./src/js/deploy.mjs\"]\n  })\n  .transform(babelify.configure({\n      //presets : [\"es2015\"]\n      presets: [\"@babel/env\"]\n  }))\n  .bundle()\n  .pipe(source(\"bundle.js\"))\n  .pipe(gulp.dest(\"./build\"))\n  ;\n}\n\nfunction startServer() {\n  connect.server({\n      root : \"./build\",\n      livereload : true,\n      port : 9001\n  });\n}\n\nexports.build = series(copyStaticFiles, build, startServer);\nexports.default = series(copyStaticFiles, build, startServer);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560286987101
  },
  "{\"sourceRoot\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"filename\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts\",\"plugins\":[],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/gulpfile.babel.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "//Include required modules\nvar gulp = require(\"gulp\"),\n    babelify = require('babelify'),\n    browserify = require(\"browserify\"),\n    connect = require(\"gulp-connect\"),\n    source = require(\"vinyl-source-stream\"); // version 4\n\n\nconst {\n  series\n} = require('gulp'); //Copy static files from html folder to build folder\n\n\nfunction copyHTMLFiles() {\n  return gulp.src(\"./src/html/*.*\").pipe(gulp.dest(\"./build\"));\n} //Copy static files from html folder to build folder\n\n\nfunction copyJSFiles() {\n  return gulp.src(\"./src/js/*.js\").pipe(gulp.dest(\"./build\"));\n} //Convert ES6 ode in all js files in src/js folder and copy to\n//build folder as bundle.js\n\n\nfunction build() {\n  // body omitted\n  return browserify({\n    entries: [\"./src/js/deploy.mjs\"]\n  }).transform(babelify.configure({\n    //presets : [\"es2015\"]\n    presets: [\"@babel/env\"]\n  })).bundle().pipe(source(\"bundle.js\")).pipe(gulp.dest(\"./build\"));\n} //Start a test server with doc root at build folder and\n//listening to 9001 port. Home page = http://localhost:9001\n\n\nfunction startServer() {\n  connect.server({\n    root: \"./build\",\n    livereload: true,\n    port: 9001\n  });\n}\n\nexports.build = series(copyHTMLFiles, copyJSFiles, build, startServer);\nexports.default = series(copyHTMLFiles, copyJSFiles, build, startServer);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbImd1bHAiLCJyZXF1aXJlIiwiYmFiZWxpZnkiLCJicm93c2VyaWZ5IiwiY29ubmVjdCIsInNvdXJjZSIsInNlcmllcyIsImNvcHlIVE1MRmlsZXMiLCJzcmMiLCJwaXBlIiwiZGVzdCIsImNvcHlKU0ZpbGVzIiwiYnVpbGQiLCJlbnRyaWVzIiwidHJhbnNmb3JtIiwiY29uZmlndXJlIiwicHJlc2V0cyIsImJ1bmRsZSIsInN0YXJ0U2VydmVyIiwic2VydmVyIiwicm9vdCIsImxpdmVyZWxvYWQiLCJwb3J0IiwiZXhwb3J0cyIsImRlZmF1bHQiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsSUFBSUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFsQjtBQUFBLElBQ0lDLFFBQVEsR0FBR0QsT0FBTyxDQUFDLFVBQUQsQ0FEdEI7QUFBQSxJQUVJRSxVQUFVLEdBQUdGLE9BQU8sQ0FBQyxZQUFELENBRnhCO0FBQUEsSUFHSUcsT0FBTyxHQUFHSCxPQUFPLENBQUMsY0FBRCxDQUhyQjtBQUFBLElBSUlJLE1BQU0sR0FBR0osT0FBTyxDQUFDLHFCQUFELENBSnBCLEMsQ0FPQTs7O0FBQ0EsTUFBTTtBQUFFSyxFQUFBQTtBQUFGLElBQWFMLE9BQU8sQ0FBQyxNQUFELENBQTFCLEMsQ0FFQTs7O0FBQ0EsU0FBU00sYUFBVCxHQUF5QjtBQUN2QixTQUFPUCxJQUFJLENBQUNRLEdBQUwsQ0FBUyxnQkFBVCxFQUNOQyxJQURNLENBQ0RULElBQUksQ0FBQ1UsSUFBTCxDQUFVLFNBQVYsQ0FEQyxDQUFQO0FBRUQsQyxDQUVEOzs7QUFDQSxTQUFTQyxXQUFULEdBQXVCO0FBQ3JCLFNBQU9YLElBQUksQ0FBQ1EsR0FBTCxDQUFTLGVBQVQsRUFDTkMsSUFETSxDQUNEVCxJQUFJLENBQUNVLElBQUwsQ0FBVSxTQUFWLENBREMsQ0FBUDtBQUVELEMsQ0FFRDtBQUNBOzs7QUFDQSxTQUFTRSxLQUFULEdBQWlCO0FBQ2Y7QUFDQSxTQUFPVCxVQUFVLENBQUM7QUFDZFUsSUFBQUEsT0FBTyxFQUFFLENBQUMscUJBQUQ7QUFESyxHQUFELENBQVYsQ0FHTkMsU0FITSxDQUdJWixRQUFRLENBQUNhLFNBQVQsQ0FBbUI7QUFDMUI7QUFDQUMsSUFBQUEsT0FBTyxFQUFFLENBQUMsWUFBRDtBQUZpQixHQUFuQixDQUhKLEVBT05DLE1BUE0sR0FRTlIsSUFSTSxDQVFESixNQUFNLENBQUMsV0FBRCxDQVJMLEVBU05JLElBVE0sQ0FTRFQsSUFBSSxDQUFDVSxJQUFMLENBQVUsU0FBVixDQVRDLENBQVA7QUFXRCxDLENBRUQ7QUFDQTs7O0FBQ0EsU0FBU1EsV0FBVCxHQUF1QjtBQUNyQmQsRUFBQUEsT0FBTyxDQUFDZSxNQUFSLENBQWU7QUFDWEMsSUFBQUEsSUFBSSxFQUFHLFNBREk7QUFFWEMsSUFBQUEsVUFBVSxFQUFHLElBRkY7QUFHWEMsSUFBQUEsSUFBSSxFQUFHO0FBSEksR0FBZjtBQUtEOztBQUVEQyxPQUFPLENBQUNYLEtBQVIsR0FBZ0JOLE1BQU0sQ0FBQ0MsYUFBRCxFQUFnQkksV0FBaEIsRUFBNkJDLEtBQTdCLEVBQW9DTSxXQUFwQyxDQUF0QjtBQUNBSyxPQUFPLENBQUNDLE9BQVIsR0FBa0JsQixNQUFNLENBQUNDLGFBQUQsRUFBZ0JJLFdBQWhCLEVBQTZCQyxLQUE3QixFQUFvQ00sV0FBcEMsQ0FBeEIiLCJzb3VyY2VSb290IjoiL1VzZXJzL25vYWgtdmluY2Vuem5vZWgvRGVza3RvcC9GaW5hbmNpYWwtU21hcnQtQ29udHJhY3RzIiwic291cmNlc0NvbnRlbnQiOlsiLy9JbmNsdWRlIHJlcXVpcmVkIG1vZHVsZXNcbnZhciBndWxwID0gcmVxdWlyZShcImd1bHBcIiksXG4gICAgYmFiZWxpZnkgPSByZXF1aXJlKCdiYWJlbGlmeScpLFxuICAgIGJyb3dzZXJpZnkgPSByZXF1aXJlKFwiYnJvd3NlcmlmeVwiKSxcbiAgICBjb25uZWN0ID0gcmVxdWlyZShcImd1bHAtY29ubmVjdFwiKSxcbiAgICBzb3VyY2UgPSByZXF1aXJlKFwidmlueWwtc291cmNlLXN0cmVhbVwiKVxuO1xuXG4vLyB2ZXJzaW9uIDRcbmNvbnN0IHsgc2VyaWVzIH0gPSByZXF1aXJlKCdndWxwJyk7XG5cbi8vQ29weSBzdGF0aWMgZmlsZXMgZnJvbSBodG1sIGZvbGRlciB0byBidWlsZCBmb2xkZXJcbmZ1bmN0aW9uIGNvcHlIVE1MRmlsZXMoKSB7XG4gIHJldHVybiBndWxwLnNyYyhcIi4vc3JjL2h0bWwvKi4qXCIpXG4gIC5waXBlKGd1bHAuZGVzdChcIi4vYnVpbGRcIikpO1xufVxuXG4vL0NvcHkgc3RhdGljIGZpbGVzIGZyb20gaHRtbCBmb2xkZXIgdG8gYnVpbGQgZm9sZGVyXG5mdW5jdGlvbiBjb3B5SlNGaWxlcygpIHtcbiAgcmV0dXJuIGd1bHAuc3JjKFwiLi9zcmMvanMvKi5qc1wiKVxuICAucGlwZShndWxwLmRlc3QoXCIuL2J1aWxkXCIpKTtcbn1cblxuLy9Db252ZXJ0IEVTNiBvZGUgaW4gYWxsIGpzIGZpbGVzIGluIHNyYy9qcyBmb2xkZXIgYW5kIGNvcHkgdG9cbi8vYnVpbGQgZm9sZGVyIGFzIGJ1bmRsZS5qc1xuZnVuY3Rpb24gYnVpbGQoKSB7XG4gIC8vIGJvZHkgb21pdHRlZFxuICByZXR1cm4gYnJvd3NlcmlmeSh7XG4gICAgICBlbnRyaWVzOiBbXCIuL3NyYy9qcy9kZXBsb3kubWpzXCJdXG4gIH0pXG4gIC50cmFuc2Zvcm0oYmFiZWxpZnkuY29uZmlndXJlKHtcbiAgICAgIC8vcHJlc2V0cyA6IFtcImVzMjAxNVwiXVxuICAgICAgcHJlc2V0czogW1wiQGJhYmVsL2VudlwiXVxuICB9KSlcbiAgLmJ1bmRsZSgpXG4gIC5waXBlKHNvdXJjZShcImJ1bmRsZS5qc1wiKSlcbiAgLnBpcGUoZ3VscC5kZXN0KFwiLi9idWlsZFwiKSlcbiAgO1xufVxuXG4vL1N0YXJ0IGEgdGVzdCBzZXJ2ZXIgd2l0aCBkb2Mgcm9vdCBhdCBidWlsZCBmb2xkZXIgYW5kXG4vL2xpc3RlbmluZyB0byA5MDAxIHBvcnQuIEhvbWUgcGFnZSA9IGh0dHA6Ly9sb2NhbGhvc3Q6OTAwMVxuZnVuY3Rpb24gc3RhcnRTZXJ2ZXIoKSB7XG4gIGNvbm5lY3Quc2VydmVyKHtcbiAgICAgIHJvb3QgOiBcIi4vYnVpbGRcIixcbiAgICAgIGxpdmVyZWxvYWQgOiB0cnVlLFxuICAgICAgcG9ydCA6IDkwMDFcbiAgfSk7XG59XG5cbmV4cG9ydHMuYnVpbGQgPSBzZXJpZXMoY29weUhUTUxGaWxlcywgY29weUpTRmlsZXMsIGJ1aWxkLCBzdGFydFNlcnZlcik7XG5leHBvcnRzLmRlZmF1bHQgPSBzZXJpZXMoY29weUhUTUxGaWxlcywgY29weUpTRmlsZXMsIGJ1aWxkLCBzdGFydFNlcnZlcik7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "gulp",
        "require",
        "babelify",
        "browserify",
        "connect",
        "source",
        "series",
        "copyHTMLFiles",
        "src",
        "pipe",
        "dest",
        "copyJSFiles",
        "build",
        "entries",
        "transform",
        "configure",
        "presets",
        "bundle",
        "startServer",
        "server",
        "root",
        "livereload",
        "port",
        "exports",
        "default"
      ],
      "mappings": "AAAA;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;AAAA,IACIC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CADtB;AAAA,IAEIE,UAAU,GAAGF,OAAO,CAAC,YAAD,CAFxB;AAAA,IAGIG,OAAO,GAAGH,OAAO,CAAC,cAAD,CAHrB;AAAA,IAIII,MAAM,GAAGJ,OAAO,CAAC,qBAAD,CAJpB,C,CAOA;;;AACA,MAAM;AAAEK,EAAAA;AAAF,IAAaL,OAAO,CAAC,MAAD,CAA1B,C,CAEA;;;AACA,SAASM,aAAT,GAAyB;AACvB,SAAOP,IAAI,CAACQ,GAAL,CAAS,gBAAT,EACNC,IADM,CACDT,IAAI,CAACU,IAAL,CAAU,SAAV,CADC,CAAP;AAED,C,CAED;;;AACA,SAASC,WAAT,GAAuB;AACrB,SAAOX,IAAI,CAACQ,GAAL,CAAS,eAAT,EACNC,IADM,CACDT,IAAI,CAACU,IAAL,CAAU,SAAV,CADC,CAAP;AAED,C,CAED;AACA;;;AACA,SAASE,KAAT,GAAiB;AACf;AACA,SAAOT,UAAU,CAAC;AACdU,IAAAA,OAAO,EAAE,CAAC,qBAAD;AADK,GAAD,CAAV,CAGNC,SAHM,CAGIZ,QAAQ,CAACa,SAAT,CAAmB;AAC1B;AACAC,IAAAA,OAAO,EAAE,CAAC,YAAD;AAFiB,GAAnB,CAHJ,EAONC,MAPM,GAQNR,IARM,CAQDJ,MAAM,CAAC,WAAD,CARL,EASNI,IATM,CASDT,IAAI,CAACU,IAAL,CAAU,SAAV,CATC,CAAP;AAWD,C,CAED;AACA;;;AACA,SAASQ,WAAT,GAAuB;AACrBd,EAAAA,OAAO,CAACe,MAAR,CAAe;AACXC,IAAAA,IAAI,EAAG,SADI;AAEXC,IAAAA,UAAU,EAAG,IAFF;AAGXC,IAAAA,IAAI,EAAG;AAHI,GAAf;AAKD;;AAEDC,OAAO,CAACX,KAAR,GAAgBN,MAAM,CAACC,aAAD,EAAgBI,WAAhB,EAA6BC,KAA7B,EAAoCM,WAApC,CAAtB;AACAK,OAAO,CAACC,OAAR,GAAkBlB,MAAM,CAACC,aAAD,EAAgBI,WAAhB,EAA6BC,KAA7B,EAAoCM,WAApC,CAAxB",
      "sourceRoot": "/Users/noah-vincenznoeh/Desktop/Financial-Smart-Contracts",
      "sourcesContent": [
        "//Include required modules\nvar gulp = require(\"gulp\"),\n    babelify = require('babelify'),\n    browserify = require(\"browserify\"),\n    connect = require(\"gulp-connect\"),\n    source = require(\"vinyl-source-stream\")\n;\n\n// version 4\nconst { series } = require('gulp');\n\n//Copy static files from html folder to build folder\nfunction copyHTMLFiles() {\n  return gulp.src(\"./src/html/*.*\")\n  .pipe(gulp.dest(\"./build\"));\n}\n\n//Copy static files from html folder to build folder\nfunction copyJSFiles() {\n  return gulp.src(\"./src/js/*.js\")\n  .pipe(gulp.dest(\"./build\"));\n}\n\n//Convert ES6 ode in all js files in src/js folder and copy to\n//build folder as bundle.js\nfunction build() {\n  // body omitted\n  return browserify({\n      entries: [\"./src/js/deploy.mjs\"]\n  })\n  .transform(babelify.configure({\n      //presets : [\"es2015\"]\n      presets: [\"@babel/env\"]\n  }))\n  .bundle()\n  .pipe(source(\"bundle.js\"))\n  .pipe(gulp.dest(\"./build\"))\n  ;\n}\n\n//Start a test server with doc root at build folder and\n//listening to 9001 port. Home page = http://localhost:9001\nfunction startServer() {\n  connect.server({\n      root : \"./build\",\n      livereload : true,\n      port : 9001\n  });\n}\n\nexports.build = series(copyHTMLFiles, copyJSFiles, build, startServer);\nexports.default = series(copyHTMLFiles, copyJSFiles, build, startServer);\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1562897314681
  }
}